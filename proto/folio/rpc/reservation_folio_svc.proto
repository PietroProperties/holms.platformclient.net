syntax = "proto3";

package holms.types.folio.rpc;
option csharp_namespace = "HOLMS.Types.Folio.RPC";

import "booking/indicators/reservation_indicator.proto";
import "folio/folio_check_cash_payment_indicator.proto";
import "folio/reservation_folio_state.proto";
import "folio/reservation_folio_summary.proto";
import "folio/rpc/folio_svc_authorization_modification_request.proto";
import "folio/rpc/folio_svc_authorization_modification_response.proto";
import "folio/rpc/folio_svc_cancel_payment_response.proto";
import "folio/rpc/folio_svc_get_on_file_cards_response.proto";
import "folio/rpc/folio_svc_post_card_payment_response.proto";
import "folio/rpc/folio_svc_post_cash_payment_response.proto";
import "folio/rpc/folio_svc_post_check_payment_response.proto";
import "folio/rpc/folio_svc_refund_response.proto";
import "google/protobuf/empty.proto";
import "money/cards/card_sale_purpose.proto";
import "money/cards/customer_payment_card_indicator.proto";
import "money/cards/not_present_payment_card.proto";
import "money/cards/transactions/card_authorization_response.proto";
import "money/cards/transactions/payment_card_sale_indicator.proto";
import "primitive/monetary_amount.proto";
import "supply/incidental_items/incidental_item_indicator.proto";

message ReservationFolioSvcCardAuthorizationFromStoredCardRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	.holms.types.money.cards.CustomerPaymentCardIndicator card = 2;
	holms.types.primitive.MonetaryAmount amount = 3;
	holms.types.money.cards.CardSalePurpose purpose = 4;
}

message ReservationFolioSvcGetSummariesRequest {
	repeated .holms.types.booking.indicators.ReservationIndicator reservations = 1;
}

message ReservationFolioSvcGetSummariesResponse {
	repeated .holms.types.folio.ReservationFolioSummary summaries = 1;
}

enum ReservationFolioSvcGetFolioStateResult {
	RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_OK = 0;
	RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_MISSING_HOUSE_ACCOUNT = 1;
}

message ReservationFolioSvcGetFolioStateResponse {
	ReservationFolioSvcGetFolioStateResult result = 1;
	.holms.types.folio.ReservationFolioState folio_state = 2;
}

message ReservationFolioSvcPostCheckPaymentRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	.holms.types.primitive.MonetaryAmount amount = 2;
}

message CardAuthorizationFromPresentCardRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	holms.types.primitive.MonetaryAmount amount = 2;
	holms.types.money.cards.CardSalePurpose purpose = 3;
}

message CardAuthorizationFromNotPresentCardRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	.holms.types.money.cards.NotPresentPaymentCard card = 2;
	holms.types.primitive.MonetaryAmount amount = 3;
	holms.types.money.cards.CardSalePurpose purpose = 4;
}

message ReservationFolioSvcPostCardPaymentRequest {
	holms.types.booking.indicators.ReservationIndicator reservation = 1;
	holms.types.money.cards.transactions.PaymentCardSaleIndicator sale = 2;
	holms.types.primitive.MonetaryAmount amount = 3;
	holms.types.money.cards.CardSalePurpose purpose = 4;
}

message ReservationFolioSvcPostCashPaymentRequest {
	holms.types.primitive.MonetaryAmount amount_paid = 1;
	holms.types.booking.indicators.ReservationIndicator reservation = 2;
}

message ReservationFolioSvcPostLodgingChargeCorrectionRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	string description = 2;
	.holms.types.primitive.MonetaryAmount adjustment_subtotal = 3;
	bool adjustment_taken_from_guest = 4;
}

message ReservationFolioSvcPostIncidentalChargeCorrectionRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	.holms.types.supply.incidental_items.IncidentalItemIndicator incidental_item = 2;
	string description = 3;
	.holms.types.primitive.MonetaryAmount adjustment_subtotal = 4;
	bool adjustment_taken_from_guest = 5;
}

message ReservationFolioSvcPostMiscChargeCorrectionRequest {
	.holms.types.booking.indicators.ReservationIndicator reservation = 1;
	string description = 2;
	.holms.types.primitive.MonetaryAmount adjustment_subtotal = 3;
	bool adjustment_taken_from_guest = 4;
}

message ReservationFolioSvcPaymentCardRefundRequest {
	holms.types.booking.indicators.ReservationIndicator reservation = 1;
	holms.types.primitive.MonetaryAmount amount = 2;
	holms.types.money.cards.CustomerPaymentCardIndicator card = 3;
	string description = 4;
}

service ReservationFolioSvc {
	// Get info
	rpc GetReservationFolioState(.holms.types.booking.indicators.ReservationIndicator)
		returns(ReservationFolioSvcGetFolioStateResponse);
	rpc GetOnFileCards(holms.types.booking.indicators.ReservationIndicator) 
		returns(FolioSvcGetOnFileCardsResponse);
	rpc GetFolioSummaries(ReservationFolioSvcGetSummariesRequest)
		returns(ReservationFolioSvcGetSummariesResponse);

	// Card authorization
	rpc AddCardAuthorizationFromStoredCard(ReservationFolioSvcCardAuthorizationFromStoredCardRequest)
		returns (.holms.types.money.cards.transactions.CardAuthorizationResponse);
	rpc AddCardAuthorizationFromPresentedCard(CardAuthorizationFromPresentCardRequest)
		returns (.holms.types.money.cards.transactions.CardAuthorizationResponse);
	rpc AddCardAuthorizationFromNotPresentCard(CardAuthorizationFromNotPresentCardRequest)
		returns (.holms.types.money.cards.transactions.CardAuthorizationResponse);
	rpc ChangeAuthorizationAmount(FolioSvcAuthorizationModificationRequest)
		returns (FolioSvcAuthorizationModificationResponse);
	
	// Payment application/cancellation/refund
	rpc PostCardPayment(ReservationFolioSvcPostCardPaymentRequest)
		returns (FolioSvcPostCardPaymentResponse);
	rpc PostCheckPayment(ReservationFolioSvcPostCheckPaymentRequest)
		returns (FolioSvcPostCheckPaymentResponse);
	rpc PostCashPayment(ReservationFolioSvcPostCashPaymentRequest)
		returns (FolioSvcPostCashPaymentResponse);
	rpc CancelCashCheckPayment(FolioCheckCashPaymentIndicator)
		returns (google.protobuf.Empty);
	rpc CancelCardPayment(holms.types.money.cards.transactions.PaymentCardSaleIndicator)
		returns (FolioSvcCancelPaymentResponse);
	rpc RefundTokenizedCard(ReservationFolioSvcPaymentCardRefundRequest)
		returns (FolioSvcRefundResponse);

	// Charge correction
	rpc PostLodgingChargeCorrection (ReservationFolioSvcPostLodgingChargeCorrectionRequest)
		returns (google.protobuf.Empty);
	rpc PostIncidentalChargeCorrection (ReservationFolioSvcPostIncidentalChargeCorrectionRequest)
		returns (google.protobuf.Empty);
	rpc PostMiscChargeCorrection (ReservationFolioSvcPostMiscChargeCorrectionRequest)
		returns (google.protobuf.Empty);
}

