syntax = "proto3";

package holms.types.crm.rpc;
option csharp_namespace = "HOLMS.Types.CRM.RPC";

import "booking/indicators/group_booking_indicator.proto";
import "booking/indicators/reservation_indicator.proto";
import "booking/reservations/reservation_contact_person.proto";
import "crm/guests/guest_indicator.proto";
import "primitive/pb_local_date.proto";
import "reporting/outputs/html_report_response.proto";
import "tenancy_config/property_arrival_letter_text.proto";
import "tenancy_config/property_cancellation_letter_text.proto";
import "tenancy_config/property_confirmation_letter_text.proto";
import "money/cards/transactions/payment_card_refund_indicator.proto";
import "money/cards/transactions/payment_card_sale_indicator.proto";
import "folio/folio_check_cash_payment_indicator.proto";
import "primitive/uuid.proto";

message CorrespondenceRequest {
	holms.types.booking.indicators.ReservationIndicator reservation = 1;
	repeated holms.types.crm.guests.GuestIndicator guests = 2;
	repeated holms.types.booking.reservations.ReservationContactPerson contacts = 3;

}

message CorrespondenceRequestWithExclusions {
	holms.types.booking.indicators.ReservationIndicator reservation = 1;
	repeated holms.types.crm.guests.GuestIndicator guests = 2;
	repeated holms.types.booking.reservations.ReservationContactPerson contacts = 3;
	PrintReservationRequest exclusions = 4;
}

enum CorrespondenceServiceEmailSendStatus {
	EMAIL_SEND_STATUS_SUCCESS = 0;
	EMAIL_SEND_STATUS_SERVER_FAILURE = 1;
	EMAIL_SEND_STATUS_UNKNOWN_FAILURE = 2;
	EMAIL_SEND_STATUS_INVALID_RECIPIENT = 3;
}

message CorrespondenceServiceEmailSendResult {
	CorrespondenceServiceEmailSendStatus send_status = 1;
	string recipient_email_address = 2;
}

message CorrespondenceServiceEmailSendResponse {
	repeated CorrespondenceServiceEmailSendResult results = 1;
}

message PrintReservationRequest{
	.holms.types.booking.indicators.ReservationIndicator ri = 1;
	repeated .holms.types.folio.FolioCheckCashPaymentIndicator checkcash_payment_indicators = 2;
	repeated .holms.types.money.cards.transactions.PaymentCardSaleIndicator card_payment_indicators = 3;
	repeated .holms.types.money.cards.transactions.PaymentCardRefundIndicator refund_indicators = 4;
	repeated .holms.types.primitive.Uuid folio_event_id = 5;

}

message PrintGroupReservationRequest{
	.holms.types.booking.indicators.GroupBookingIndicator gbi = 1;
	repeated .holms.types.folio.FolioCheckCashPaymentIndicator checkcash_payment_indicators = 2;
	repeated .holms.types.money.cards.transactions.PaymentCardSaleIndicator card_payment_indicators = 3;
	repeated .holms.types.money.cards.transactions.PaymentCardRefundIndicator refund_indicators = 4;
	repeated .holms.types.primitive.Uuid folio_event_id = 5;

}


service CorrespondenceSvc {
	// Email
	rpc SendConfirmationLetter(CorrespondenceRequest) returns(CorrespondenceServiceEmailSendResponse);
	rpc SendCancellationEmail(CorrespondenceRequest) returns(CorrespondenceServiceEmailSendResponse);
	rpc SendGuestFolio(CorrespondenceRequest) returns (CorrespondenceServiceEmailSendResponse);

	// Print (get HTML)
	rpc PreviewArrivalLetter(.holms.types.tenancy_config.PropertyArrivalLetterText)
		returns(.holms.types.reporting.outputs.HtmlReportResponse);
	rpc GetArrivalLetterDocumentsArrivingOn(.holms.types.primitive.PbLocalDate)
		returns(.holms.types.reporting.outputs.HtmlReportResponse);
	rpc GetArrivalLetterDocument(.holms.types.booking.indicators.ReservationIndicator)
		returns(.holms.types.reporting.outputs.HtmlReportResponse);

	rpc PreviewConfirmationLetter(holms.types.tenancy_config.PropertyConfirmationLetterText)
		returns(.holms.types.reporting.outputs.HtmlReportResponse);
	// Don't think this is used?
	rpc PreviewCancellationEmail(holms.types.tenancy_config.PropertyCancellationLetterText)
		returns(.holms.types.reporting.outputs.HtmlReportResponse);
	rpc GetReservationFolioPrintDoc(.holms.types.booking.indicators.ReservationIndicator)
		returns(.holms.types.reporting.outputs.HtmlReportResponse); 
	rpc GetGroupBookingFolioPrintDoc(holms.types.booking.indicators.GroupBookingIndicator)
		returns(.holms.types.reporting.outputs.HtmlReportResponse); 	
	rpc GetReservationConfirmationPrintDoc(holms.types.booking.indicators.ReservationIndicator)
		returns(.holms.types.reporting.outputs.HtmlReportResponse);


	rpc GetReservationFolioPrintDocExcluded(PrintReservationRequest)
		returns(.holms.types.reporting.outputs.HtmlReportResponse); 

	rpc GetGroupBookingFolioPrintDocExcluded(PrintGroupReservationRequest)
		returns(.holms.types.reporting.outputs.HtmlReportResponse); 	
	
	rpc SendGuestFolioExcluded(CorrespondenceRequestWithExclusions) 
		returns (CorrespondenceServiceEmailSendResponse);

}

