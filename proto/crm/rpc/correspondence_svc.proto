syntax = "proto3";

package holms.types.crm.rpc;
option csharp_namespace = "HOLMS.Types.CRM.RPC";

import "booking/indicators/group_booking_indicator.proto";
import "booking/indicators/reservation_indicator.proto";
import "booking/reservations/reservation_contact_person.proto";
import "crm/guests/guest_indicator.proto";
import "primitive/pb_local_date.proto";
import "tenancy_config/property_arrival_letter_text.proto";
import "tenancy_config/property_cancellation_letter_text.proto";
import "tenancy_config/property_confirmation_letter_text.proto";

message CorrespondenceRequest {
	holms.types.booking.indicators.ReservationIndicator reservation = 1;
	repeated holms.types.crm.guests.GuestIndicator guests = 2;
	repeated holms.types.booking.reservations.ReservationContactPerson contacts = 3;
}

message CorrespondenceServiceDocumentResponse {
	string document = 1;
}

enum CorrespondenceServiceEmailSendStatus {
	EMAIL_SEND_STATUS_SUCCESS = 0;
	EMAIL_SEND_STATUS_SERVER_FAILURE = 1;
	EMAIL_SEND_STATUS_UNKNOWN_FAILURE = 2;
	EMAIL_SEND_STATUS_INVALID_RECIPIENT = 3;
}

message CorrespondenceServiceEmailSendResult {
	CorrespondenceServiceEmailSendStatus send_status = 1;
	string recipient_email = 2;
}

message CorrespondenceServiceEmailSendResponse {
	repeated CorrespondenceServiceEmailSendResult results = 1;
}

service CorrespondenceSvc {
	// Email
	rpc SendConfirmationLetter(CorrespondenceRequest) returns(CorrespondenceServiceEmailSendResponse);
	rpc SendCancellationEmail(CorrespondenceRequest) returns(CorrespondenceServiceEmailSendResponse);
	rpc SendGuestFolio(CorrespondenceRequest) returns (CorrespondenceServiceEmailSendResponse);

	// Print (get HTML)
	rpc PreviewArrivalLetter(.holms.types.tenancy_config.PropertyArrivalLetterText)
		returns(CorrespondenceServiceDocumentResponse);
	rpc GetArrivalLetterDocumentsArrivingOn(.holms.types.primitive.PbLocalDate)
		returns(CorrespondenceServiceDocumentResponse);
	rpc GetArrivalLetterDocument(.holms.types.booking.indicators.ReservationIndicator)
		returns(CorrespondenceServiceDocumentResponse);
	rpc GetBookingAssociatedFoliosSummary(.holms.types.booking.indicators.GroupBookingIndicator)
		returns(CorrespondenceServiceDocumentResponse);

	rpc PreviewConfirmationLetter(holms.types.tenancy_config.PropertyConfirmationLetterText)
		returns(CorrespondenceServiceDocumentResponse);
	rpc PreviewCancellationEmail(holms.types.tenancy_config.PropertyCancellationLetterText)
		returns(CorrespondenceServiceDocumentResponse);
	rpc GetReservationFolioPrintDoc(.holms.types.booking.indicators.ReservationIndicator)
		returns(CorrespondenceServiceDocumentResponse); 
	rpc GetGroupBookingFolioPrintDoc(holms.types.booking.indicators.GroupBookingIndicator)
		returns(CorrespondenceServiceDocumentResponse); 	
	rpc GetReservationConfirmationPrintDoc(holms.types.booking.indicators.ReservationIndicator)
		returns(CorrespondenceServiceDocumentResponse);
}

