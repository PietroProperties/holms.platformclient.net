syntax = "proto3";

package holms.types.crm.rpc;
option csharp_namespace = "HOLMS.Types.CRM.RPC";
option go_package = "crm/rpc";

import "google/protobuf/empty.proto";
import "crm/guests/guest_indicator.proto";
import "crm/guests/guest.proto";
import "crm/guests/reservation_note_template.proto";
import "crm/guests/reservation_note_template_indicator.proto";
import "crm/guests/guest_lite.proto";

message GuestSvcManyGuestsResponse {
	repeated .holms.types.crm.guests.Guest guests = 1;
}

message GuestSvcGetManyRequest {
	repeated .holms.types.crm.guests.GuestIndicator ids = 1;
}

message GuestSvcPrefixSearchRequest {
	string family_name_prefix = 1;
	string given_name_prefix = 2;
	bool include_indirect_channel_guests = 3;
}

message GuestSvcSearchByEmailRequest {
	string email_address = 1;
}

message GuestSvcGetNoteTemplatesForGuestResponse {
	repeated .holms.types.crm.guests.ReservationNoteTemplate templates = 1;
}

message MergeGuestRequest {
	repeated .holms.types.crm.guests.GuestIndicator oldGuests= 1;
	.holms.types.crm.guests.Guest merged_guest = 2;
}

message GuestSvcRequestPage {
	int32 page_number = 1;
	int32 page_size = 2;
}

message GuestCountResponse {
	int32 guest_count = 1;	
}

message GuestLiteResponse {
	repeated .holms.types.crm.guests.GuestLite guests = 1;
	
}

service GuestSvc {
	rpc All(google.protobuf.Empty) 
		returns (GuestSvcManyGuestsResponse);
		
	rpc GetById (.holms.types.crm.guests.GuestIndicator) 
		returns (.holms.types.crm.guests.Guest);
		
	rpc GetSeveralById (GuestSvcGetManyRequest) 
		returns (GuestSvcManyGuestsResponse);
		
	rpc SearchByNamePrefix (GuestSvcPrefixSearchRequest) 
		returns (GuestSvcManyGuestsResponse);
		
	rpc SearchByEmailAddress (GuestSvcSearchByEmailRequest) 
		returns (GuestSvcManyGuestsResponse);
		
	rpc Create (.holms.types.crm.guests.Guest) 
		returns (.holms.types.crm.guests.Guest);
		
	rpc Update (.holms.types.crm.guests.Guest) 
		returns (.holms.types.crm.guests.Guest);

	rpc AddNoteTemplateToGuest(.holms.types.crm.guests.ReservationNoteTemplate)
		returns (google.protobuf.Empty);

	rpc AmendNoteTemplate(.holms.types.crm.guests.ReservationNoteTemplate)
		returns (google.protobuf.Empty);

	rpc RemoveNoteTemplateFromGuest(.holms.types.crm.guests.ReservationNoteTemplateIndicator)
		returns (google.protobuf.Empty);

	rpc GetNoteTemplatesForGuest(.holms.types.crm.guests.GuestIndicator)
		returns(GuestSvcGetNoteTemplatesForGuestResponse);

	rpc MergeGuests(MergeGuestRequest )
		returns (google.protobuf.Empty);
		
	rpc GetByPage(GuestSvcRequestPage) 
		returns (GuestSvcManyGuestsResponse);
		
	rpc GetGuestCount(google.protobuf.Empty) 
		returns (GuestCountResponse);
		
	rpc AllGuestLite(google.protobuf.Empty) 
		returns (GuestLiteResponse);

}
