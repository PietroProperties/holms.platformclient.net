syntax = "proto3";

package holms.types.tenancy_config.rpc;
option csharp_namespace = "HOLMS.Types.TenancyConfig.RPC";
option go_package = "tenancyconfig/rpc";

import "tenancy_config/kcr_config.proto";
import "google/protobuf/empty.proto";

message SetKCRConfigResponse {
	KCRSvcSetKCRConfigResult result = 1;
}

enum KCRSvcSetKCRConfigResult {
	SET_KCR_CONFIG_INVALID_IP_ADDRESS = 0;
	SET_KCR_CONFIG_INVALID_ENCODER_NUMBER = 1;
	SET_KCR_CONFIG_INVALID_PWD = 2;
	SET_KCR_CONFIG_UNKNOWN_FAILURE = 3;
	SET_KCR_CONFIG_SUCCESS = 4;
}

service KCRConfigSvc {
	rpc Get(google.protobuf.Empty) 
		returns (.holms.types.tenancy_config.KCRConfig);

	rpc Set(.holms.types.tenancy_config.KCRConfig)
		returns (SetKCRConfigResponse);
}