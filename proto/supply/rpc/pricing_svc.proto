syntax = "proto3";

package holms.types.supply.rpc;
option csharp_namespace = "HOLMS.Types.Supply.RPC";
option go_package = "supply/rpc";

import "google/protobuf/empty.proto";
import "primitive/pb_inclusive_opsdate_range.proto";
import "supply/room_types/room_type_indicator.proto";
import "supply/price_update_request.proto";
import "supply/rate_schedule_indicator.proto";
import "supply/scheduled_price.proto";
import "tenancy_config/indicators/property_indicator.proto";

message PricingSvcRoomTypeQueryRequest {
	.holms.types.supply.RateScheduleIndicator rate_schedule = 1;
	repeated .holms.types.supply.room_types.RoomTypeIndicator room_types = 2;
	.holms.types.primitive.PbInclusiveOpsdateRange date_range = 3;
}

message PricingSvcPropertyQueryRequest {
	.holms.types.supply.RateScheduleIndicator rate_schedule = 1;
	.holms.types.tenancy_config.indicators.PropertyIndicator property = 2;
	.holms.types.primitive.PbInclusiveOpsdateRange date_range = 3;
}

message PricingSvcWithoutPropertyQueryRequest {
	.holms.types.supply.RateScheduleIndicator rate_schedule = 1;	
	.holms.types.primitive.PbInclusiveOpsdateRange date_range = 2;
}

message PricingSvcQueryResponse {
	repeated .holms.types.supply.ScheduledPrice prices = 1;
}

message PricingSvcUpdateRequest {
	.holms.types.supply.RateScheduleIndicator rate_schedule = 1;
	repeated .holms.types.supply.PriceUpdateRequest price_updates = 2;
}

service PricingSvc {
	rpc QueryByRoomType (PricingSvcRoomTypeQueryRequest) returns (PricingSvcQueryResponse);
	rpc QueryByProperty (PricingSvcPropertyQueryRequest) returns (PricingSvcQueryResponse);
	rpc Update (PricingSvcUpdateRequest) returns (google.protobuf.Empty);
	rpc QueryByWithoutProperty (PricingSvcWithoutPropertyQueryRequest) returns (PricingSvcQueryResponse);
}
