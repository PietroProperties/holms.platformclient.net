syntax = "proto3";

package holms.types.booking.rpc;
option csharp_namespace = "HOLMS.Types.Booking.RPC";
option go_package = "booking/rpc";

import "google/protobuf/empty.proto";
import "booking/reservations/book_genesis_reservation_request.proto";
import "booking/reservations/genesis_booking_result.proto";
import "booking/indicators/reservation_indicator.proto";
import "booking/reservations/complete_open_reservation.proto";
import "booking/reservations/add_guest_to_reservation_request.proto";
import "booking/reservations/remove_guest_from_reservation_request.proto";
import "booking/reservations/reservation_frp_amendment_request.proto";
import "booking/reservations/frp_amendment_response.proto";
import "booking/reservations/reservation_channel_amendment_request.proto";

message GetReservationNamesRequest{
	repeated .holms.types.booking.indicators.ReservationIndicator reservation_indicators=1;
}
message ReservationNamesResponse{
	repeated string reservation_names=1;
}
message SwapChargesRequest{
	.holms.types.booking.indicators.ReservationIndicator reservation_indicator =1;
	bool is_master_reservation_indicator=2;
}
message SwapChargesResponse{
	bool charges_present_and_moved=1;
}
service LodgingBookingSvc {
	rpc BookGenesisReservation(.holms.types.booking.reservations.BookGenesisReservationRequest)
		returns (.holms.types.booking.reservations.GenesisBookingResult);
	
	rpc GetOpenReservation (.holms.types.booking.indicators.ReservationIndicator)
		returns (.holms.types.booking.reservations.CompleteOpenReservation);

	rpc RequestAddGuestToReservation (.holms.types.booking.reservations.AddGuestToReservationRequest)
		returns (google.protobuf.Empty);

	rpc RequestRemoveGuestFromReservation (.holms.types.booking.reservations.RemoveGuestFromReservationRequest)
		returns (google.protobuf.Empty);

	rpc AmendOpenReservationParameters (.holms.types.booking.reservations.ReservationFRPAmendmentRequest)
		returns (.holms.types.booking.reservations.FRPAmendmentResponse);

	rpc RequestChangePrimaryGuestInReservation (.holms.types.booking.reservations.AddGuestToReservationRequest)
		returns (google.protobuf.Empty);

	rpc RequestUpdateChannelDetailsReservation(.holms.types.booking.reservations.ReservationChannelAmendmentRequest)
		returns (google.protobuf.Empty);

	rpc GetReservationNames(GetReservationNamesRequest)
		returns(ReservationNamesResponse);

	rpc SwapExtraStayCharges(SwapChargesRequest)
		returns(SwapChargesResponse);
}
