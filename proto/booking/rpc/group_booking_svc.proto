syntax = "proto3";

package holms.types.booking.rpc;
option csharp_namespace = "HOLMS.Types.Booking.RPC";
option go_package = "booking/rpc";

import "google/protobuf/empty.proto";
import "booking/groups/group_booking.proto";
import "booking/groups/group_booking_ext.proto";
import "booking/indicators/group_booking_indicator.proto";
import "booking/groups/group_booking_room_type_quantity.proto";
import "crm/groups/group_indicator.proto";
import "supply/price_update_request.proto";
import "booking/reservations/reservation_summary.proto";
import "booking/groups/payment_reservation_mapping.proto";
import "booking/groups/group_bookings_invoices.proto";
import "booking/groups/reservation_invoices.proto";
import "primitive/uuid.proto";
import "iam/staff_member_indicator.proto";
import "google/protobuf/timestamp.proto";
import "supply/room_types/room_type_indicator.proto";
import "primitive/pb_inclusive_opsdate_range.proto";

message GroupBookingSvcAllBookings {
	repeated .holms.types.booking.groups.GroupBookingExt bookings = 1;
}

message GroupBookingSvcPriceUpdateRequest {
	.holms.types.booking.indicators.GroupBookingIndicator booking = 1;
	repeated .holms.types.supply.PriceUpdateRequest prices = 2;
}

message GroupBookingSvcQuantityUpdateRequest {
	.holms.types.booking.indicators.GroupBookingIndicator booking = 1;
	repeated .holms.types.booking.groups.GroupBookingRoomTypeQuantity quantities = 2;
}

message GroupBookingSvcGetReservationsWithTagResponse {
	repeated .holms.types.booking.reservations.ReservationSummary reservations = 1;
}

message GroupBookingSvcGetByIdsRequest {
	repeated .holms.types.booking.indicators.GroupBookingIndicator bookings = 1;
}

message GroupBookingSvcGetByIdsResponse {
	repeated .holms.types.booking.groups.GroupBooking booking = 1;
}

message PaymentReservationMappingRequest{
	repeated .holms.types.booking.groups.PaymentReservationMapping payment_mapping = 1; 
}

message GroupBookingPaymentMappingResponse{
	repeated .holms.types.booking.groups.PaymentReservationMapping payment_mapping = 1;
}

message GroupBookingInvoiceMappingRequest{
	repeated .holms.types.booking.groups.GroupBookingInvoiceMapping  group_bookings_invoices = 1;
}

message GroupBookingInvoiceMappingResponse{
	.holms.types.primitive.Uuid invoice_id =1;
	int32 invoice_number =2;
}

message GroupBookingInvoiceResponse{
	repeated .holms.types.booking.groups.GroupBookingInvoiceMapping  group_bookings_invoices = 1;
}

message ReservationInvoiceMappingRequest{
	repeated .holms.types.booking.groups.ReservationInvoiceMapping  reservation_invoices = 1;
}

message ReservationInvoiceMappingResponse{
	repeated .holms.types.booking.groups.ReservationInvoiceMapping  reservation_invoices = 1;
}

message InvoiceVoidRequest{
	.holms.types.primitive.Uuid invoice_id =1;
	holms.types.iam.StaffMemberIndicator staff_id=2;
	google.protobuf.Timestamp voided_at=3;
}

message IncreaseGroupHoldForReservationRequest{
	.holms.types.booking.indicators.GroupBookingIndicator booking = 1;
	holms.types.supply.room_types.RoomTypeIndicator room_type = 2;
}

message IncreaseGroupHoldForReservationResponse{
	bool result=1;
}

service GroupBookingSvc {
	rpc All (google.protobuf.Empty) 
		returns (GroupBookingSvcAllBookings);

	rpc Create (.holms.types.crm.groups.GroupIndicator)
		returns (.holms.types.booking.groups.GroupBookingExt);

	rpc Update (.holms.types.booking.groups.GroupBooking)
		returns (.holms.types.booking.groups.GroupBookingExt);

	rpc UpdateGroupBookingPrices (GroupBookingSvcPriceUpdateRequest)
		returns (google.protobuf.Empty);

	rpc UpdateQuantities (GroupBookingSvcQuantityUpdateRequest)
		returns (google.protobuf.Empty);

	rpc GetReservationSummariesWithGBTag (.holms.types.booking.indicators.GroupBookingIndicator)
		returns (GroupBookingSvcGetReservationsWithTagResponse);

	rpc GetById(.holms.types.booking.indicators.GroupBookingIndicator)
		returns( .holms.types.booking.groups.GroupBooking);

	rpc GetByIdFull(.holms.types.booking.indicators.GroupBookingIndicator)
		returns(.holms.types.booking.groups.GroupBookingExt);

	rpc GetByIds(GroupBookingSvcGetByIdsRequest)
		returns(GroupBookingSvcGetByIdsResponse);

	rpc MapPaymentWithReservation(PaymentReservationMappingRequest)
		returns(google.protobuf.Empty);
	
	rpc GetPaymentMappingById(.holms.types.booking.indicators.GroupBookingIndicator)
		returns(GroupBookingPaymentMappingResponse);

	rpc GetGroupBookingInvoices(.holms.types.booking.indicators.GroupBookingIndicator)
		returns(GroupBookingInvoiceResponse);

	rpc CreateInvoiceForGroupBooking(GroupBookingInvoiceMappingRequest)
		returns(GroupBookingInvoiceMappingResponse);

	rpc CreateReservationInvoiceMappings(ReservationInvoiceMappingRequest)
		returns(google.protobuf.Empty);

	rpc GetReservationInvoiceFromGroupId(.holms.types.booking.indicators.GroupBookingIndicator)
		returns(ReservationInvoiceMappingResponse);

	rpc VoidInvoiceById(InvoiceVoidRequest)
		returns(google.protobuf.Empty);

    	rpc CreateWithoutSave(.holms.types.crm.groups.GroupIndicator)
		returns (.holms.types.booking.groups.GroupBookingExt);

	rpc IncreaseEventGroupHoldForNewReservation(IncreaseGroupHoldForReservationRequest)
		returns(IncreaseGroupHoldForReservationResponse);

	rpc FolioSync(.holms.types.booking.groups.GroupBooking)
		returns(google.protobuf.Empty);

	rpc AllByDateRange(.holms.types.primitive.PbInclusiveOpsdateRange)
		returns(GroupBookingSvcAllBookings);

	rpc DropUnusedHolds (GroupBookingSvcQuantityUpdateRequest)
		returns (google.protobuf.Empty);
}
