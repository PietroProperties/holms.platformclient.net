syntax = "proto3";

package holms.types.booking.rpc;
option csharp_namespace = "HOLMS.Types.Booking.RPC";

import "booking/indicators/reservation_indicator.proto";
import "booking/query_filter.proto";
import "booking/reservations/reservation_summary.proto";
import "primitive/pb_local_date.proto";
import "operations/rooms/room.proto";
import "booking/reservations/reservation_management_hold.proto";

message ReservationSearchSvcGetFilteredReservationListRequest {
	.holms.types.booking.QueryFilter filter = 1;
	bool include_canceled = 2;
	bool include_limited = 3;
}

message ReservationSearchSvcGetDateFilteredReservationListRequest {
	.holms.types.primitive.PbLocalDate date = 1;
	bool include_canceled = 2;
	bool include_limited = 3;
}

message ReservationSearchSvcGetFilteredReservationListResponse {
	repeated .holms.types.booking.reservations.ReservationSummary reservations = 1;
	repeated .holms.types.operations.rooms.Room rooms = 2;
}

enum ReservationSearchSvcGetReservationSummaryResult {
	RESERVATION_SEARCH_SVC_GET_RESERVATION_SUMMARY_RESULT_OK = 0;
	RESERVATION_SEARCH_SVC_GET_RESERVATION_SUMMARY_RESULT_NOT_FOUND = 1;
}

message ReservationSearchSvcSearchReservationsRequest {
	string search_arg = 1;
}

message ReservationSearchSvcGetReservationSummaryResponse {
	ReservationSearchSvcGetReservationSummaryResult result = 1;
	.holms.types.booking.reservations.ReservationSummary reservation_summary = 2;
}

message GetReservationSummariesRequest {
	repeated .holms.types.booking.indicators.ReservationIndicator reservations = 1;
}

message ReservationSearchSvcGetAssociatedHoldsResponse {
	.holms.types.booking.reservations.ReservationWithManagementHold reservation_with_management_hold = 1;
}

message ReservationSearchDuringDateRangeRequest {
	.holms.types.primitive.PbLocalDate start_date= 1;
	.holms.types.primitive.PbLocalDate end_date= 2;
	bool include_canceled = 3;
}

service ReservationSearchSvc {
	// Get all of type - no date
	rpc GetFilteredReservationList (ReservationSearchSvcGetFilteredReservationListRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);
	
	// Date-scoped searches
	rpc GetArrivalsByCalendarDate(ReservationSearchSvcGetDateFilteredReservationListRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);

	rpc GetDeparturesByCalendarDate(ReservationSearchSvcGetDateFilteredReservationListRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);

	rpc GetNoShowsByDate(ReservationSearchSvcGetDateFilteredReservationListRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);

	rpc GetStayOversByDate(ReservationSearchSvcGetDateFilteredReservationListRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);

	rpc GetAllDuringDate(ReservationSearchSvcGetDateFilteredReservationListRequest)
		returns	(ReservationSearchSvcGetFilteredReservationListResponse);
		

	// Search/GetById(s)
	rpc GetReservationSummary(.holms.types.booking.indicators.ReservationIndicator) 
		returns (ReservationSearchSvcGetReservationSummaryResponse);

	rpc GetReservationSummaries(GetReservationSummariesRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);

	rpc SearchReservations(ReservationSearchSvcSearchReservationsRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);
	rpc GetAssociatedManagementHolds(.holms.types.booking.indicators.ReservationIndicator)
		returns (ReservationSearchSvcGetAssociatedHoldsResponse);

	rpc GetReservationsInDateRange(ReservationSearchDuringDateRangeRequest)
		returns (ReservationSearchSvcGetFilteredReservationListResponse);
}

