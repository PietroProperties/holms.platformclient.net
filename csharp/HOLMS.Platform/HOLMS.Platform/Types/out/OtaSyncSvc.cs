// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/ota_sync_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.RPC {

  /// <summary>Holder for reflection information generated from booking/rpc/ota_sync_svc.proto</summary>
  public static partial class OtaSyncSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/rpc/ota_sync_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OtaSyncSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5ib29raW5nL3JwYy9vdGFfc3luY19zdmMucHJvdG8SF2hvbG1zLnR5cGVz",
            "LmJvb2tpbmcucnBjGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aH2dv",
            "b2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iSAoRU2VydmVyVGFza0Rl",
            "dGFpbHMSMwoPbGFzdF93b3JraW5nX2F0GAEgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcCI7Ch1TY2hlZHVsZXJTdGFydEF0dGVtcHRSZXNwb25z",
            "ZRIaChJJc1NjaGVkdWxlclN0YXJ0ZWQYASABKAgiPQoeUEJYU2VydmljZVN0",
            "YXJ0QXR0ZW1wdFJlc3BvbnNlEhsKE0lzUEJYU2VydmljZVN0YXJ0ZWQYASAB",
            "KAgyhwMKCk9UQVN5bmNTdmMSQgoQU3luY1Jlc2VydmF0aW9ucxIWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJhChtH",
            "ZXRTY2hlZHVsZXJMYXN0V29ya2luZ1RpbWUSFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkaKi5ob2xtcy50eXBlcy5ib29raW5nLnJwYy5TZXJ2ZXJUYXNrRGV0",
            "YWlscxJnChVBdHRlbXB0U3RhcnRTY2hlZHVsZXISFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaNi5ob2xtcy50eXBlcy5ib29raW5nLnJwYy5TY2hlZHVsZXJT",
            "dGFydEF0dGVtcHRSZXNwb25zZRJpChZBdHRlbXB0U3RhcnRQQlhTZXJ2aWNl",
            "EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GjcuaG9sbXMudHlwZXMuYm9va2lu",
            "Zy5ycGMuUEJYU2VydmljZVN0YXJ0QXR0ZW1wdFJlc3BvbnNlQhqqAhdIT0xN",
            "Uy5UeXBlcy5Cb29raW5nLlJQQ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ServerTaskDetails), global::HOLMS.Types.Booking.RPC.ServerTaskDetails.Parser, new[]{ "LastWorkingAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.SchedulerStartAttemptResponse), global::HOLMS.Types.Booking.RPC.SchedulerStartAttemptResponse.Parser, new[]{ "IsSchedulerStarted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.PBXServiceStartAttemptResponse), global::HOLMS.Types.Booking.RPC.PBXServiceStartAttemptResponse.Parser, new[]{ "IsPBXServiceStarted" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ServerTaskDetails : pb::IMessage<ServerTaskDetails> {
    private static readonly pb::MessageParser<ServerTaskDetails> _parser = new pb::MessageParser<ServerTaskDetails>(() => new ServerTaskDetails());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerTaskDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OtaSyncSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerTaskDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerTaskDetails(ServerTaskDetails other) : this() {
      LastWorkingAt = other.lastWorkingAt_ != null ? other.LastWorkingAt.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerTaskDetails Clone() {
      return new ServerTaskDetails(this);
    }

    /// <summary>Field number for the "last_working_at" field.</summary>
    public const int LastWorkingAtFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastWorkingAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastWorkingAt {
      get { return lastWorkingAt_; }
      set {
        lastWorkingAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerTaskDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerTaskDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastWorkingAt, other.LastWorkingAt)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastWorkingAt_ != null) hash ^= LastWorkingAt.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lastWorkingAt_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastWorkingAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastWorkingAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastWorkingAt);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerTaskDetails other) {
      if (other == null) {
        return;
      }
      if (other.lastWorkingAt_ != null) {
        if (lastWorkingAt_ == null) {
          lastWorkingAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastWorkingAt.MergeFrom(other.LastWorkingAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (lastWorkingAt_ == null) {
              lastWorkingAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastWorkingAt_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SchedulerStartAttemptResponse : pb::IMessage<SchedulerStartAttemptResponse> {
    private static readonly pb::MessageParser<SchedulerStartAttemptResponse> _parser = new pb::MessageParser<SchedulerStartAttemptResponse>(() => new SchedulerStartAttemptResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SchedulerStartAttemptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OtaSyncSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulerStartAttemptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulerStartAttemptResponse(SchedulerStartAttemptResponse other) : this() {
      isSchedulerStarted_ = other.isSchedulerStarted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulerStartAttemptResponse Clone() {
      return new SchedulerStartAttemptResponse(this);
    }

    /// <summary>Field number for the "IsSchedulerStarted" field.</summary>
    public const int IsSchedulerStartedFieldNumber = 1;
    private bool isSchedulerStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSchedulerStarted {
      get { return isSchedulerStarted_; }
      set {
        isSchedulerStarted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SchedulerStartAttemptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SchedulerStartAttemptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSchedulerStarted != other.IsSchedulerStarted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSchedulerStarted != false) hash ^= IsSchedulerStarted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSchedulerStarted != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSchedulerStarted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSchedulerStarted != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SchedulerStartAttemptResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSchedulerStarted != false) {
        IsSchedulerStarted = other.IsSchedulerStarted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsSchedulerStarted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PBXServiceStartAttemptResponse : pb::IMessage<PBXServiceStartAttemptResponse> {
    private static readonly pb::MessageParser<PBXServiceStartAttemptResponse> _parser = new pb::MessageParser<PBXServiceStartAttemptResponse>(() => new PBXServiceStartAttemptResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBXServiceStartAttemptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OtaSyncSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBXServiceStartAttemptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBXServiceStartAttemptResponse(PBXServiceStartAttemptResponse other) : this() {
      isPBXServiceStarted_ = other.isPBXServiceStarted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBXServiceStartAttemptResponse Clone() {
      return new PBXServiceStartAttemptResponse(this);
    }

    /// <summary>Field number for the "IsPBXServiceStarted" field.</summary>
    public const int IsPBXServiceStartedFieldNumber = 1;
    private bool isPBXServiceStarted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPBXServiceStarted {
      get { return isPBXServiceStarted_; }
      set {
        isPBXServiceStarted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBXServiceStartAttemptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBXServiceStartAttemptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsPBXServiceStarted != other.IsPBXServiceStarted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsPBXServiceStarted != false) hash ^= IsPBXServiceStarted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsPBXServiceStarted != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsPBXServiceStarted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsPBXServiceStarted != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBXServiceStartAttemptResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsPBXServiceStarted != false) {
        IsPBXServiceStarted = other.IsPBXServiceStarted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsPBXServiceStarted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
