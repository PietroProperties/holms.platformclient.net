// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/folio/posted_card_authorization.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Folio {

  /// <summary>Holder for reflection information generated from money/folio/posted_card_authorization.proto</summary>
  public static partial class PostedCardAuthorizationReflection {

    #region Descriptor
    /// <summary>File descriptor for money/folio/posted_card_authorization.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PostedCardAuthorizationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cittb25leS9mb2xpby9wb3N0ZWRfY2FyZF9hdXRob3JpemF0aW9uLnByb3Rv",
            "Ehdob2xtcy50eXBlcy5tb25leS5mb2xpbxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90bxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90",
            "bxosbW9uZXkvY2FyZHMvY2FyZF9hdXRob3JpemF0aW9uX3B1cnBvc2UucHJv",
            "dG8aKm1vbmV5L2NhcmRzL2NhcmRfYXV0aG9yaXphdGlvbl9zdGF0ZS5wcm90",
            "bxoybW9uZXkvY2FyZHMvbWVyY2hhbnRfYXV0aG9yaXphdGlvbl9pbmRpY2F0",
            "b3IucHJvdG8aKG1vbmV5L2NhcmRzL21lcmNoYW50X2F1dGhvcml6YXRpb24u",
            "cHJvdG8aKG1vbmV5L2NhcmRzL3BheW1lbnRfY2FyZF9pbmRpY2F0b3IucHJv",
            "dG8aJG1vbmV5L2NhcmRzL3BheW1lbnRfY2FyZF9icmFuZC5wcm90byKOBQoX",
            "UG9zdGVkQ2FyZEF1dGhvcml6YXRpb24SSgoJZW50aXR5X2lkGAEgASgLMjcu",
            "aG9sbXMudHlwZXMubW9uZXkuY2FyZHMuTWVyY2hhbnRBdXRob3JpemF0aW9u",
            "SW5kaWNhdG9yEi0KCXBvc3RlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASNQoGYW1vdW50GAMgASgLMiUuaG9sbXMudHlwZXMucHJp",
            "bWl0aXZlLk1vbmV0YXJ5QW1vdW50Ej4KBXN0YXRlGAQgASgOMi8uaG9sbXMu",
            "dHlwZXMubW9uZXkuY2FyZHMuQ2FyZEF1dGhvcml6YXRpb25TdGF0ZRI7CgRj",
            "YXJkGAUgASgLMi0uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuUGF5bWVudENh",
            "cmRJbmRpY2F0b3ISEgoKbWFza2VkX3BhbhgGIAEoCRIXCg9jYXJkbWVtYmVy",
            "X25hbWUYByABKAkSQgoHcHVycG9zZRgIIAEoDjIxLmhvbG1zLnR5cGVzLm1v",
            "bmV5LmNhcmRzLkNhcmRBdXRob3JpemF0aW9uUHVycG9zZRI4CgVicmFuZBgJ",
            "IAEoDjIpLmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLlBheW1lbnRDYXJkQnJh",
            "bmQSDgoGdHhuX2lkGAogASgJEkcKDGVudHJ5X21ldGhvZBgLIAEoDjIxLmhv",
            "bG1zLnR5cGVzLm1vbmV5LmNhcmRzLkF1dGhvcml6YXRpb25FbnRyeU1ldGhv",
            "ZBIVCg1hcHByb3ZhbF9jb2RlGAwgASgJEhgKEGFwcGxpY2F0aW9uX25hbWUY",
            "DSABKAkSDwoHYV9yX3FfYxgOIAEoCUInWgttb25leS9mb2xpb6oCF0hPTE1T",
            "LlR5cGVzLk1vbmV5LkZvbGlvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardAuthorizationPurposeReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardAuthorizationStateReflection.Descriptor, global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.MerchantAuthorizationReflection.Descriptor, global::HOLMS.Types.Money.Cards.PaymentCardIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.PaymentCardBrandReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Folio.PostedCardAuthorization), global::HOLMS.Types.Money.Folio.PostedCardAuthorization.Parser, new[]{ "EntityId", "PostedAt", "Amount", "State", "Card", "MaskedPan", "CardmemberName", "Purpose", "Brand", "TxnId", "EntryMethod", "ApprovalCode", "ApplicationName", "ARQC" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PostedCardAuthorization : pb::IMessage<PostedCardAuthorization> {
    private static readonly pb::MessageParser<PostedCardAuthorization> _parser = new pb::MessageParser<PostedCardAuthorization>(() => new PostedCardAuthorization());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostedCardAuthorization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Folio.PostedCardAuthorizationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostedCardAuthorization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostedCardAuthorization(PostedCardAuthorization other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      PostedAt = other.postedAt_ != null ? other.PostedAt.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      state_ = other.state_;
      Card = other.card_ != null ? other.Card.Clone() : null;
      maskedPan_ = other.maskedPan_;
      cardmemberName_ = other.cardmemberName_;
      purpose_ = other.purpose_;
      brand_ = other.brand_;
      txnId_ = other.txnId_;
      entryMethod_ = other.entryMethod_;
      approvalCode_ = other.approvalCode_;
      applicationName_ = other.applicationName_;
      aRQC_ = other.aRQC_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostedCardAuthorization Clone() {
      return new PostedCardAuthorization(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "posted_at" field.</summary>
    public const int PostedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp postedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PostedAt {
      get { return postedAt_; }
      set {
        postedAt_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardAuthorizationState state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardAuthorizationState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 5;
    private global::HOLMS.Types.Money.Cards.PaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.PaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "masked_pan" field.</summary>
    public const int MaskedPanFieldNumber = 6;
    private string maskedPan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskedPan {
      get { return maskedPan_; }
      set {
        maskedPan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cardmember_name" field.</summary>
    public const int CardmemberNameFieldNumber = 7;
    private string cardmemberName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardmemberName {
      get { return cardmemberName_; }
      set {
        cardmemberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 8;
    private global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose purpose_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 9;
    private global::HOLMS.Types.Money.Cards.PaymentCardBrand brand_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.PaymentCardBrand Brand {
      get { return brand_; }
      set {
        brand_ = value;
      }
    }

    /// <summary>Field number for the "txn_id" field.</summary>
    public const int TxnIdFieldNumber = 10;
    private string txnId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TxnId {
      get { return txnId_; }
      set {
        txnId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry_method" field.</summary>
    public const int EntryMethodFieldNumber = 11;
    private global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod entryMethod_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod EntryMethod {
      get { return entryMethod_; }
      set {
        entryMethod_ = value;
      }
    }

    /// <summary>Field number for the "approval_code" field.</summary>
    public const int ApprovalCodeFieldNumber = 12;
    private string approvalCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApprovalCode {
      get { return approvalCode_; }
      set {
        approvalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_name" field.</summary>
    public const int ApplicationNameFieldNumber = 13;
    private string applicationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationName {
      get { return applicationName_; }
      set {
        applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_r_q_c" field.</summary>
    public const int ARQCFieldNumber = 14;
    private string aRQC_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ARQC {
      get { return aRQC_; }
      set {
        aRQC_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostedCardAuthorization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostedCardAuthorization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (!object.Equals(PostedAt, other.PostedAt)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (MaskedPan != other.MaskedPan) return false;
      if (CardmemberName != other.CardmemberName) return false;
      if (Purpose != other.Purpose) return false;
      if (Brand != other.Brand) return false;
      if (TxnId != other.TxnId) return false;
      if (EntryMethod != other.EntryMethod) return false;
      if (ApprovalCode != other.ApprovalCode) return false;
      if (ApplicationName != other.ApplicationName) return false;
      if (ARQC != other.ARQC) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (postedAt_ != null) hash ^= PostedAt.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (MaskedPan.Length != 0) hash ^= MaskedPan.GetHashCode();
      if (CardmemberName.Length != 0) hash ^= CardmemberName.GetHashCode();
      if (Purpose != 0) hash ^= Purpose.GetHashCode();
      if (Brand != 0) hash ^= Brand.GetHashCode();
      if (TxnId.Length != 0) hash ^= TxnId.GetHashCode();
      if (EntryMethod != 0) hash ^= EntryMethod.GetHashCode();
      if (ApprovalCode.Length != 0) hash ^= ApprovalCode.GetHashCode();
      if (ApplicationName.Length != 0) hash ^= ApplicationName.GetHashCode();
      if (ARQC.Length != 0) hash ^= ARQC.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (postedAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PostedAt);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (card_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Card);
      }
      if (MaskedPan.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MaskedPan);
      }
      if (CardmemberName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CardmemberName);
      }
      if (Purpose != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Purpose);
      }
      if (Brand != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Brand);
      }
      if (TxnId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TxnId);
      }
      if (EntryMethod != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) EntryMethod);
      }
      if (ApprovalCode.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ApprovalCode);
      }
      if (ApplicationName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ApplicationName);
      }
      if (ARQC.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ARQC);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (postedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedAt);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (MaskedPan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskedPan);
      }
      if (CardmemberName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardmemberName);
      }
      if (Purpose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Purpose);
      }
      if (Brand != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Brand);
      }
      if (TxnId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TxnId);
      }
      if (EntryMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntryMethod);
      }
      if (ApprovalCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApprovalCode);
      }
      if (ApplicationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
      }
      if (ARQC.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ARQC);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostedCardAuthorization other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.postedAt_ != null) {
        if (postedAt_ == null) {
          postedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PostedAt.MergeFrom(other.PostedAt);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.PaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.MaskedPan.Length != 0) {
        MaskedPan = other.MaskedPan;
      }
      if (other.CardmemberName.Length != 0) {
        CardmemberName = other.CardmemberName;
      }
      if (other.Purpose != 0) {
        Purpose = other.Purpose;
      }
      if (other.Brand != 0) {
        Brand = other.Brand;
      }
      if (other.TxnId.Length != 0) {
        TxnId = other.TxnId;
      }
      if (other.EntryMethod != 0) {
        EntryMethod = other.EntryMethod;
      }
      if (other.ApprovalCode.Length != 0) {
        ApprovalCode = other.ApprovalCode;
      }
      if (other.ApplicationName.Length != 0) {
        ApplicationName = other.ApplicationName;
      }
      if (other.ARQC.Length != 0) {
        ARQC = other.ARQC;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            if (postedAt_ == null) {
              postedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(postedAt_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 32: {
            state_ = (global::HOLMS.Types.Money.Cards.CardAuthorizationState) input.ReadEnum();
            break;
          }
          case 42: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.PaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 50: {
            MaskedPan = input.ReadString();
            break;
          }
          case 58: {
            CardmemberName = input.ReadString();
            break;
          }
          case 64: {
            purpose_ = (global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose) input.ReadEnum();
            break;
          }
          case 72: {
            brand_ = (global::HOLMS.Types.Money.Cards.PaymentCardBrand) input.ReadEnum();
            break;
          }
          case 82: {
            TxnId = input.ReadString();
            break;
          }
          case 88: {
            entryMethod_ = (global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod) input.ReadEnum();
            break;
          }
          case 98: {
            ApprovalCode = input.ReadString();
            break;
          }
          case 106: {
            ApplicationName = input.ReadString();
            break;
          }
          case 114: {
            ARQC = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
