// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operations/rpc/calendar_msg_svc.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace HOLMS.Types.Operations.RPC {
  public static class CalendarMsgSvc
  {
    static readonly string __ServiceName = "holms.types.operations.rpc.CalendarMsgSvc";

    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> __Marshaller_CalendarMsgSvcEnumResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Operations.CalendarMessageIndicator> __Marshaller_CalendarMessageIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Operations.CalendarMessageIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Operations.CalendarMessage> __Marshaller_CalendarMessage = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Operations.CalendarMessage.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Primitive.ServerActionConfirmation> __Marshaller_ServerActionConfirmation = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Primitive.ServerActionConfirmation.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange> __Marshaller_PbInclusiveOpsdateRange = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange.Parser.ParseFrom);

    static readonly Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> __Method_All = new Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse>(
        MethodType.Unary,
        __ServiceName,
        "All",
        __Marshaller_Empty,
        __Marshaller_CalendarMsgSvcEnumResponse);

    static readonly Method<global::HOLMS.Types.Operations.CalendarMessageIndicator, global::HOLMS.Types.Operations.CalendarMessage> __Method_GetById = new Method<global::HOLMS.Types.Operations.CalendarMessageIndicator, global::HOLMS.Types.Operations.CalendarMessage>(
        MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_CalendarMessageIndicator,
        __Marshaller_CalendarMessage);

    static readonly Method<global::HOLMS.Types.Operations.CalendarMessage, global::HOLMS.Types.Operations.CalendarMessage> __Method_Create = new Method<global::HOLMS.Types.Operations.CalendarMessage, global::HOLMS.Types.Operations.CalendarMessage>(
        MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_CalendarMessage,
        __Marshaller_CalendarMessage);

    static readonly Method<global::HOLMS.Types.Operations.CalendarMessage, global::HOLMS.Types.Operations.CalendarMessage> __Method_Update = new Method<global::HOLMS.Types.Operations.CalendarMessage, global::HOLMS.Types.Operations.CalendarMessage>(
        MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_CalendarMessage,
        __Marshaller_CalendarMessage);

    static readonly Method<global::HOLMS.Types.Operations.CalendarMessage, global::HOLMS.Types.Primitive.ServerActionConfirmation> __Method_Delete = new Method<global::HOLMS.Types.Operations.CalendarMessage, global::HOLMS.Types.Primitive.ServerActionConfirmation>(
        MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_CalendarMessage,
        __Marshaller_ServerActionConfirmation);

    static readonly Method<global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange, global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> __Method_AllDuring = new Method<global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange, global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse>(
        MethodType.Unary,
        __ServiceName,
        "AllDuring",
        __Marshaller_PbInclusiveOpsdateRange,
        __Marshaller_CalendarMsgSvcEnumResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Operations.RPC.CalendarMsgSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CalendarMsgSvc</summary>
    public abstract class CalendarMsgSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> All(global::Google.Protobuf.WellKnownTypes.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Operations.CalendarMessage> GetById(global::HOLMS.Types.Operations.CalendarMessageIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Operations.CalendarMessage> Create(global::HOLMS.Types.Operations.CalendarMessage request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Operations.CalendarMessage> Update(global::HOLMS.Types.Operations.CalendarMessage request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Primitive.ServerActionConfirmation> Delete(global::HOLMS.Types.Operations.CalendarMessage request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> AllDuring(global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CalendarMsgSvc</summary>
    public class CalendarMsgSvcClient : ClientBase<CalendarMsgSvcClient>
    {
      /// <summary>Creates a new client for CalendarMsgSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CalendarMsgSvcClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CalendarMsgSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CalendarMsgSvcClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CalendarMsgSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CalendarMsgSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse All(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return All(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse All(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_All, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AllAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_All, null, options, request);
      }
      public virtual global::HOLMS.Types.Operations.CalendarMessage GetById(global::HOLMS.Types.Operations.CalendarMessageIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetById(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Operations.CalendarMessage GetById(global::HOLMS.Types.Operations.CalendarMessageIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.CalendarMessage> GetByIdAsync(global::HOLMS.Types.Operations.CalendarMessageIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.CalendarMessage> GetByIdAsync(global::HOLMS.Types.Operations.CalendarMessageIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual global::HOLMS.Types.Operations.CalendarMessage Create(global::HOLMS.Types.Operations.CalendarMessage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Operations.CalendarMessage Create(global::HOLMS.Types.Operations.CalendarMessage request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.CalendarMessage> CreateAsync(global::HOLMS.Types.Operations.CalendarMessage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.CalendarMessage> CreateAsync(global::HOLMS.Types.Operations.CalendarMessage request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::HOLMS.Types.Operations.CalendarMessage Update(global::HOLMS.Types.Operations.CalendarMessage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Operations.CalendarMessage Update(global::HOLMS.Types.Operations.CalendarMessage request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.CalendarMessage> UpdateAsync(global::HOLMS.Types.Operations.CalendarMessage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.CalendarMessage> UpdateAsync(global::HOLMS.Types.Operations.CalendarMessage request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::HOLMS.Types.Primitive.ServerActionConfirmation Delete(global::HOLMS.Types.Operations.CalendarMessage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Delete(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Primitive.ServerActionConfirmation Delete(global::HOLMS.Types.Operations.CalendarMessage request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Primitive.ServerActionConfirmation> DeleteAsync(global::HOLMS.Types.Operations.CalendarMessage request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Primitive.ServerActionConfirmation> DeleteAsync(global::HOLMS.Types.Operations.CalendarMessage request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse AllDuring(global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AllDuring(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse AllDuring(global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AllDuring, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> AllDuringAsync(global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AllDuringAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Operations.RPC.CalendarMsgSvcEnumResponse> AllDuringAsync(global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AllDuring, null, options, request);
      }
      protected override CalendarMsgSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CalendarMsgSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(CalendarMsgSvcBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_All, serviceImpl.All)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete)
          .AddMethod(__Method_AllDuring, serviceImpl.AllDuring).Build();
    }

  }
}
#endregion
