// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/incidental_items/incidental_item_availability_response.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.IncidentalItems {

  /// <summary>Holder for reflection information generated from supply/incidental_items/incidental_item_availability_response.proto</summary>
  public static partial class IncidentalItemAvailabilityResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/incidental_items/incidental_item_availability_response.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IncidentalItemAvailabilityResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkNzdXBwbHkvaW5jaWRlbnRhbF9pdGVtcy9pbmNpZGVudGFsX2l0ZW1fYXZh",
            "aWxhYmlsaXR5X3Jlc3BvbnNlLnByb3RvEiNob2xtcy50eXBlcy5zdXBwbHku",
            "aW5jaWRlbnRhbF9pdGVtcxoqcHJpbWl0aXZlL3BiX2luY2x1c2l2ZV9vcHNk",
            "YXRlX3JhbmdlLnByb3RvGjdzdXBwbHkvaW5jaWRlbnRhbF9pdGVtcy9pbmNp",
            "ZGVudGFsX2l0ZW1faW5kaWNhdG9yLnByb3RvItkBCiJJbmNpZGVudGFsSXRl",
            "bUF2YWlsYWJpbGl0eVJlc3BvbnNlEhgKEG51bWJlcl9hdmFpbGFibGUYASAB",
            "KAUSQgoKZGF0ZV9yYW5nZRgCIAEoCzIuLmhvbG1zLnR5cGVzLnByaW1pdGl2",
            "ZS5QYkluY2x1c2l2ZU9wc2RhdGVSYW5nZRJVCg9pbmNpZGVudGFsX2l0ZW0Y",
            "AyABKAsyPC5ob2xtcy50eXBlcy5zdXBwbHkuaW5jaWRlbnRhbF9pdGVtcy5J",
            "bmNpZGVudGFsSXRlbUluZGljYXRvckI9WhZzdXBwbHkvaW5jaWRlbnRhbGl0",
            "ZW1zqgIiSE9MTVMuVHlwZXMuU3VwcGx5LkluY2lkZW50YWxJdGVtc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemAvailabilityResponse), global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemAvailabilityResponse.Parser, new[]{ "NumberAvailable", "DateRange", "IncidentalItem" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IncidentalItemAvailabilityResponse : pb::IMessage<IncidentalItemAvailabilityResponse> {
    private static readonly pb::MessageParser<IncidentalItemAvailabilityResponse> _parser = new pb::MessageParser<IncidentalItemAvailabilityResponse>(() => new IncidentalItemAvailabilityResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncidentalItemAvailabilityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemAvailabilityResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentalItemAvailabilityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentalItemAvailabilityResponse(IncidentalItemAvailabilityResponse other) : this() {
      numberAvailable_ = other.numberAvailable_;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      IncidentalItem = other.incidentalItem_ != null ? other.IncidentalItem.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentalItemAvailabilityResponse Clone() {
      return new IncidentalItemAvailabilityResponse(this);
    }

    /// <summary>Field number for the "number_available" field.</summary>
    public const int NumberAvailableFieldNumber = 1;
    private int numberAvailable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberAvailable {
      get { return numberAvailable_; }
      set {
        numberAvailable_ = value;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "incidental_item" field.</summary>
    public const int IncidentalItemFieldNumber = 3;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator incidentalItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator IncidentalItem {
      get { return incidentalItem_; }
      set {
        incidentalItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncidentalItemAvailabilityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncidentalItemAvailabilityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumberAvailable != other.NumberAvailable) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(IncidentalItem, other.IncidentalItem)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NumberAvailable != 0) hash ^= NumberAvailable.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (incidentalItem_ != null) hash ^= IncidentalItem.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NumberAvailable != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NumberAvailable);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateRange);
      }
      if (incidentalItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IncidentalItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NumberAvailable != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberAvailable);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (incidentalItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalItem);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncidentalItemAvailabilityResponse other) {
      if (other == null) {
        return;
      }
      if (other.NumberAvailable != 0) {
        NumberAvailable = other.NumberAvailable;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.incidentalItem_ != null) {
        if (incidentalItem_ == null) {
          incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        IncidentalItem.MergeFrom(other.IncidentalItem);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            NumberAvailable = input.ReadInt32();
            break;
          }
          case 18: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 26: {
            if (incidentalItem_ == null) {
              incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(incidentalItem_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
