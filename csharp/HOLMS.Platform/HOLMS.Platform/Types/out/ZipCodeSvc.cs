// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenancy_config/rpc/zip_code_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.TenancyConfig.RPC {

  /// <summary>Holder for reflection information generated from tenancy_config/rpc/zip_code_svc.proto</summary>
  public static partial class ZipCodeSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for tenancy_config/rpc/zip_code_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ZipCodeSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiV0ZW5hbmN5X2NvbmZpZy9ycGMvemlwX2NvZGVfc3ZjLnByb3RvEh5ob2xt",
            "cy50eXBlcy50ZW5hbmN5X2NvbmZpZy5ycGMaGHByaW1pdGl2ZS96aXBfY29k",
            "ZS5wcm90byIyCh5aaXBDb2RlU3ZjR2V0Q2l0eVN0YXRlQnlaaXBSZXESEAoI",
            "emlwX2NvZGUYASABKAkygQEKClppcENvZGVTdmMScwoRR2V0Q2l0eVN0YXRl",
            "QnlaaXASPi5ob2xtcy50eXBlcy50ZW5hbmN5X2NvbmZpZy5ycGMuWmlwQ29k",
            "ZVN2Y0dldENpdHlTdGF0ZUJ5WmlwUmVxGh4uaG9sbXMudHlwZXMucHJpbWl0",
            "aXZlLlppcENvZGVCM1oRdGVuYW5jeWNvbmZpZy9ycGOqAh1IT0xNUy5UeXBl",
            "cy5UZW5hbmN5Q29uZmlnLlJQQ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.ZipCodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.TenancyConfig.RPC.ZipCodeSvcGetCityStateByZipReq), global::HOLMS.Types.TenancyConfig.RPC.ZipCodeSvcGetCityStateByZipReq.Parser, new[]{ "ZipCode" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ZipCodeSvcGetCityStateByZipReq : pb::IMessage<ZipCodeSvcGetCityStateByZipReq> {
    private static readonly pb::MessageParser<ZipCodeSvcGetCityStateByZipReq> _parser = new pb::MessageParser<ZipCodeSvcGetCityStateByZipReq>(() => new ZipCodeSvcGetCityStateByZipReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ZipCodeSvcGetCityStateByZipReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.TenancyConfig.RPC.ZipCodeSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZipCodeSvcGetCityStateByZipReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZipCodeSvcGetCityStateByZipReq(ZipCodeSvcGetCityStateByZipReq other) : this() {
      zipCode_ = other.zipCode_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ZipCodeSvcGetCityStateByZipReq Clone() {
      return new ZipCodeSvcGetCityStateByZipReq(this);
    }

    /// <summary>Field number for the "zip_code" field.</summary>
    public const int ZipCodeFieldNumber = 1;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ZipCodeSvcGetCityStateByZipReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ZipCodeSvcGetCityStateByZipReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZipCode != other.ZipCode) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ZipCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ZipCode);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ZipCodeSvcGetCityStateByZipReq other) {
      if (other == null) {
        return;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ZipCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
