// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/pricing/genesis_price_estimate_request_dto.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Pricing {

  /// <summary>Holder for reflection information generated from booking/pricing/genesis_price_estimate_request_dto.proto</summary>
  public static partial class GenesisPriceEstimateRequestDtoReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/pricing/genesis_price_estimate_request_dto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GenesisPriceEstimateRequestDtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjhib29raW5nL3ByaWNpbmcvZ2VuZXNpc19wcmljZV9lc3RpbWF0ZV9yZXF1",
            "ZXN0X2R0by5wcm90bxIbaG9sbXMudHlwZXMuYm9va2luZy5wcmljaW5nGipw",
            "cmltaXRpdmUvcGJfaW5jbHVzaXZlX29wc2RhdGVfcmFuZ2UucHJvdG8aK3N1",
            "cHBseS9yb29tX3R5cGVzL3Jvb21fdHlwZV9pbmRpY2F0b3IucHJvdG8iigIK",
            "HkdlbmVzaXNQcmljZUVzdGltYXRlUmVxdWVzdERUTxJCCgpkYXRlX3Jhbmdl",
            "GAEgASgLMi4uaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiSW5jbHVzaXZlT3Bz",
            "ZGF0ZVJhbmdlEkMKCXJvb21fdHlwZRgCIAEoCzIwLmhvbG1zLnR5cGVzLnN1",
            "cHBseS5yb29tX3R5cGVzLlJvb21UeXBlSW5kaWNhdG9yEhsKE251bWJlcl9h",
            "ZHVsdF9ndWVzdHMYBCABKAUSGAoQcmVzZXJ2YXRpb25fdGFncxgFIAMoCRIo",
            "CiBpc19tb2NrX3ByaWNlX3JlcXVpcmVkX2Zvcl9ncm91cBgGIAEoCEIvWg9i",
            "b29raW5nL3ByaWNpbmeqAhtIT0xNUy5UeXBlcy5Cb29raW5nLlByaWNpbmdi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO), global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO.Parser, new[]{ "DateRange", "RoomType", "NumberAdultGuests", "ReservationTags", "IsMockPriceRequiredForGroup" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GenesisPriceEstimateRequestDTO : pb::IMessage<GenesisPriceEstimateRequestDTO> {
    private static readonly pb::MessageParser<GenesisPriceEstimateRequestDTO> _parser = new pb::MessageParser<GenesisPriceEstimateRequestDTO>(() => new GenesisPriceEstimateRequestDTO());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenesisPriceEstimateRequestDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenesisPriceEstimateRequestDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenesisPriceEstimateRequestDTO(GenesisPriceEstimateRequestDTO other) : this() {
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      RoomType = other.roomType_ != null ? other.RoomType.Clone() : null;
      numberAdultGuests_ = other.numberAdultGuests_;
      reservationTags_ = other.reservationTags_.Clone();
      isMockPriceRequiredForGroup_ = other.isMockPriceRequiredForGroup_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenesisPriceEstimateRequestDTO Clone() {
      return new GenesisPriceEstimateRequestDTO(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 2;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomType {
      get { return roomType_; }
      set {
        roomType_ = value;
      }
    }

    /// <summary>Field number for the "number_adult_guests" field.</summary>
    public const int NumberAdultGuestsFieldNumber = 4;
    private int numberAdultGuests_;
    /// <summary>
    /// NOTE(DA) qual tombstone = 3
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberAdultGuests {
      get { return numberAdultGuests_; }
      set {
        numberAdultGuests_ = value;
      }
    }

    /// <summary>Field number for the "reservation_tags" field.</summary>
    public const int ReservationTagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_reservationTags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> reservationTags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReservationTags {
      get { return reservationTags_; }
    }

    /// <summary>Field number for the "is_mock_price_required_for_group" field.</summary>
    public const int IsMockPriceRequiredForGroupFieldNumber = 6;
    private bool isMockPriceRequiredForGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMockPriceRequiredForGroup {
      get { return isMockPriceRequiredForGroup_; }
      set {
        isMockPriceRequiredForGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenesisPriceEstimateRequestDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenesisPriceEstimateRequestDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(RoomType, other.RoomType)) return false;
      if (NumberAdultGuests != other.NumberAdultGuests) return false;
      if(!reservationTags_.Equals(other.reservationTags_)) return false;
      if (IsMockPriceRequiredForGroup != other.IsMockPriceRequiredForGroup) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (roomType_ != null) hash ^= RoomType.GetHashCode();
      if (NumberAdultGuests != 0) hash ^= NumberAdultGuests.GetHashCode();
      hash ^= reservationTags_.GetHashCode();
      if (IsMockPriceRequiredForGroup != false) hash ^= IsMockPriceRequiredForGroup.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (roomType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomType);
      }
      if (NumberAdultGuests != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberAdultGuests);
      }
      reservationTags_.WriteTo(output, _repeated_reservationTags_codec);
      if (IsMockPriceRequiredForGroup != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsMockPriceRequiredForGroup);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (roomType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomType);
      }
      if (NumberAdultGuests != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberAdultGuests);
      }
      size += reservationTags_.CalculateSize(_repeated_reservationTags_codec);
      if (IsMockPriceRequiredForGroup != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenesisPriceEstimateRequestDTO other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.roomType_ != null) {
        if (roomType_ == null) {
          roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomType.MergeFrom(other.RoomType);
      }
      if (other.NumberAdultGuests != 0) {
        NumberAdultGuests = other.NumberAdultGuests;
      }
      reservationTags_.Add(other.reservationTags_);
      if (other.IsMockPriceRequiredForGroup != false) {
        IsMockPriceRequiredForGroup = other.IsMockPriceRequiredForGroup;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 18: {
            if (roomType_ == null) {
              roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomType_);
            break;
          }
          case 32: {
            NumberAdultGuests = input.ReadInt32();
            break;
          }
          case 42: {
            reservationTags_.AddEntriesFrom(input, _repeated_reservationTags_codec);
            break;
          }
          case 48: {
            IsMockPriceRequiredForGroup = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
