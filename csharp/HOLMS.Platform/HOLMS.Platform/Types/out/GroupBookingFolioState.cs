// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/group_booking_folio_state.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio {

  /// <summary>Holder for reflection information generated from folio/group_booking_folio_state.proto</summary>
  public static partial class GroupBookingFolioStateReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/group_booking_folio_state.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupBookingFolioStateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVmb2xpby9ncm91cF9ib29raW5nX2ZvbGlvX3N0YXRlLnByb3RvEhFob2xt",
            "cy50eXBlcy5mb2xpbxofZm9saW8vZm9saW9fYXRvbWljX2NoYXJnZS5wcm90",
            "bxodZm9saW8vZm9saW9fY2FyZF9yZWZ1bmQucHJvdG8aG2ZvbGlvL2ZvbGlv",
            "X2NhcmRfc2FsZS5wcm90bxokZm9saW8vZm9saW9fY2hlY2tfY2FzaF9wYXlt",
            "ZW50LnByb3RvGhtmb2xpby9mb2xpb19pbmRpY2F0b3IucHJvdG8aIGZvbGlv",
            "L2ZvbGlvX3RheF9hc3Nlc3NtZW50LnByb3RvGh9wcmltaXRpdmUvbW9uZXRh",
            "cnlfYW1vdW50LnByb3RvIoQIChZHcm91cEJvb2tpbmdGb2xpb1N0YXRlEj8K",
            "EWVmZmVjdGl2ZV9jaGFyZ2VzGAEgAygLMiQuaG9sbXMudHlwZXMuZm9saW8u",
            "Rm9saW9BdG9taWNDaGFyZ2USOAoMY2FyZF9yZWZ1bmRzGAIgAygLMiIuaG9s",
            "bXMudHlwZXMuZm9saW8uRm9saW9DYXJkUmVmdW5kEjQKCmNhcmRfc2FsZXMY",
            "AyADKAsyIC5ob2xtcy50eXBlcy5mb2xpby5Gb2xpb0NhcmRTYWxlEkUKE2No",
            "ZWNrX2Nhc2hfcGF5bWVudHMYBCADKAsyKC5ob2xtcy50eXBlcy5mb2xpby5G",
            "b2xpb0NoZWNrQ2FzaFBheW1lbnQSRgoXY3VycmVudF90YXhfYXNzZXNzbWVu",
            "dHMYBSADKAsyJS5ob2xtcy50eXBlcy5mb2xpby5Gb2xpb1RheEFzc2Vzc21l",
            "bnQSUAohYW50aWNpcGF0ZWRfZW5kaW5nX3RheF9hc3Nlc3NtZW50GAYgAygL",
            "MiUuaG9sbXMudHlwZXMuZm9saW8uRm9saW9UYXhBc3Nlc3NtZW50EjwKDm5h",
            "dGl2ZV9jaGFyZ2VzGAcgAygLMiQuaG9sbXMudHlwZXMuZm9saW8uRm9saW9B",
            "dG9taWNDaGFyZ2USTwohaW1wb3J0ZWRfZnJvbV9vdGhlcl9mb2xpb19jaGFy",
            "Z2VzGAggAygLMiQuaG9sbXMudHlwZXMuZm9saW8uRm9saW9BdG9taWNDaGFy",
            "Z2USPgoPY3VycmVudF9jaGFyZ2VzGAkgASgLMiUuaG9sbXMudHlwZXMucHJp",
            "bWl0aXZlLk1vbmV0YXJ5QW1vdW50EkIKE2FudGljaXBhdGVkX2NoYXJnZXMY",
            "CiABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQS",
            "PgoPcG9zdGVkX3BheW1lbnRzGAsgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0",
            "aXZlLk1vbmV0YXJ5QW1vdW50Ej0KDnBvc3RlZF9yZWZ1bmRzGAwgASgLMiUu",
            "aG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EkUKFmN1cnJl",
            "bnRfZHVlX2Zyb21fZ3JvdXAYDSABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRp",
            "dmUuTW9uZXRhcnlBbW91bnQSSQoaYW50aWNpcGF0ZWRfZHVlX2Zyb21fZ3Jv",
            "dXAYDiABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91",
            "bnQSNAoJZW50aXR5X2lkGA8gASgLMiEuaG9sbXMudHlwZXMuZm9saW8uRm9s",
            "aW9JbmRpY2F0b3JCFKoCEUhPTE1TLlR5cGVzLkZvbGlvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Folio.FolioAtomicChargeReflection.Descriptor, global::HOLMS.Types.Folio.FolioCardRefundReflection.Descriptor, global::HOLMS.Types.Folio.FolioCardSaleReflection.Descriptor, global::HOLMS.Types.Folio.FolioCheckCashPaymentReflection.Descriptor, global::HOLMS.Types.Folio.FolioIndicatorReflection.Descriptor, global::HOLMS.Types.Folio.FolioTaxAssessmentReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.GroupBookingFolioState), global::HOLMS.Types.Folio.GroupBookingFolioState.Parser, new[]{ "EffectiveCharges", "CardRefunds", "CardSales", "CheckCashPayments", "CurrentTaxAssessments", "AnticipatedEndingTaxAssessment", "NativeCharges", "ImportedFromOtherFolioCharges", "CurrentCharges", "AnticipatedCharges", "PostedPayments", "PostedRefunds", "CurrentDueFromGroup", "AnticipatedDueFromGroup", "EntityId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GroupBookingFolioState : pb::IMessage<GroupBookingFolioState> {
    private static readonly pb::MessageParser<GroupBookingFolioState> _parser = new pb::MessageParser<GroupBookingFolioState>(() => new GroupBookingFolioState());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.GroupBookingFolioStateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioState(GroupBookingFolioState other) : this() {
      effectiveCharges_ = other.effectiveCharges_.Clone();
      cardRefunds_ = other.cardRefunds_.Clone();
      cardSales_ = other.cardSales_.Clone();
      checkCashPayments_ = other.checkCashPayments_.Clone();
      currentTaxAssessments_ = other.currentTaxAssessments_.Clone();
      anticipatedEndingTaxAssessment_ = other.anticipatedEndingTaxAssessment_.Clone();
      nativeCharges_ = other.nativeCharges_.Clone();
      importedFromOtherFolioCharges_ = other.importedFromOtherFolioCharges_.Clone();
      CurrentCharges = other.currentCharges_ != null ? other.CurrentCharges.Clone() : null;
      AnticipatedCharges = other.anticipatedCharges_ != null ? other.AnticipatedCharges.Clone() : null;
      PostedPayments = other.postedPayments_ != null ? other.PostedPayments.Clone() : null;
      PostedRefunds = other.postedRefunds_ != null ? other.PostedRefunds.Clone() : null;
      CurrentDueFromGroup = other.currentDueFromGroup_ != null ? other.CurrentDueFromGroup.Clone() : null;
      AnticipatedDueFromGroup = other.anticipatedDueFromGroup_ != null ? other.AnticipatedDueFromGroup.Clone() : null;
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioState Clone() {
      return new GroupBookingFolioState(this);
    }

    /// <summary>Field number for the "effective_charges" field.</summary>
    public const int EffectiveChargesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_effectiveCharges_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> effectiveCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> EffectiveCharges {
      get { return effectiveCharges_; }
    }

    /// <summary>Field number for the "card_refunds" field.</summary>
    public const int CardRefundsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioCardRefund> _repeated_cardRefunds_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Folio.FolioCardRefund.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardRefund> cardRefunds_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardRefund>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardRefund> CardRefunds {
      get { return cardRefunds_; }
    }

    /// <summary>Field number for the "card_sales" field.</summary>
    public const int CardSalesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioCardSale> _repeated_cardSales_codec
        = pb::FieldCodec.ForMessage(26, global::HOLMS.Types.Folio.FolioCardSale.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardSale> cardSales_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardSale>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardSale> CardSales {
      get { return cardSales_; }
    }

    /// <summary>Field number for the "check_cash_payments" field.</summary>
    public const int CheckCashPaymentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioCheckCashPayment> _repeated_checkCashPayments_codec
        = pb::FieldCodec.ForMessage(34, global::HOLMS.Types.Folio.FolioCheckCashPayment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCheckCashPayment> checkCashPayments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCheckCashPayment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCheckCashPayment> CheckCashPayments {
      get { return checkCashPayments_; }
    }

    /// <summary>Field number for the "current_tax_assessments" field.</summary>
    public const int CurrentTaxAssessmentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioTaxAssessment> _repeated_currentTaxAssessments_codec
        = pb::FieldCodec.ForMessage(42, global::HOLMS.Types.Folio.FolioTaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment> currentTaxAssessments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment> CurrentTaxAssessments {
      get { return currentTaxAssessments_; }
    }

    /// <summary>Field number for the "anticipated_ending_tax_assessment" field.</summary>
    public const int AnticipatedEndingTaxAssessmentFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioTaxAssessment> _repeated_anticipatedEndingTaxAssessment_codec
        = pb::FieldCodec.ForMessage(50, global::HOLMS.Types.Folio.FolioTaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment> anticipatedEndingTaxAssessment_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment> AnticipatedEndingTaxAssessment {
      get { return anticipatedEndingTaxAssessment_; }
    }

    /// <summary>Field number for the "native_charges" field.</summary>
    public const int NativeChargesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_nativeCharges_codec
        = pb::FieldCodec.ForMessage(58, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> nativeCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> NativeCharges {
      get { return nativeCharges_; }
    }

    /// <summary>Field number for the "imported_from_other_folio_charges" field.</summary>
    public const int ImportedFromOtherFolioChargesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_importedFromOtherFolioCharges_codec
        = pb::FieldCodec.ForMessage(66, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> importedFromOtherFolioCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> ImportedFromOtherFolioCharges {
      get { return importedFromOtherFolioCharges_; }
    }

    /// <summary>Field number for the "current_charges" field.</summary>
    public const int CurrentChargesFieldNumber = 9;
    private global::HOLMS.Types.Primitive.MonetaryAmount currentCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CurrentCharges {
      get { return currentCharges_; }
      set {
        currentCharges_ = value;
      }
    }

    /// <summary>Field number for the "anticipated_charges" field.</summary>
    public const int AnticipatedChargesFieldNumber = 10;
    private global::HOLMS.Types.Primitive.MonetaryAmount anticipatedCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AnticipatedCharges {
      get { return anticipatedCharges_; }
      set {
        anticipatedCharges_ = value;
      }
    }

    /// <summary>Field number for the "posted_payments" field.</summary>
    public const int PostedPaymentsFieldNumber = 11;
    private global::HOLMS.Types.Primitive.MonetaryAmount postedPayments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PostedPayments {
      get { return postedPayments_; }
      set {
        postedPayments_ = value;
      }
    }

    /// <summary>Field number for the "posted_refunds" field.</summary>
    public const int PostedRefundsFieldNumber = 12;
    private global::HOLMS.Types.Primitive.MonetaryAmount postedRefunds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PostedRefunds {
      get { return postedRefunds_; }
      set {
        postedRefunds_ = value;
      }
    }

    /// <summary>Field number for the "current_due_from_group" field.</summary>
    public const int CurrentDueFromGroupFieldNumber = 13;
    private global::HOLMS.Types.Primitive.MonetaryAmount currentDueFromGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CurrentDueFromGroup {
      get { return currentDueFromGroup_; }
      set {
        currentDueFromGroup_ = value;
      }
    }

    /// <summary>Field number for the "anticipated_due_from_group" field.</summary>
    public const int AnticipatedDueFromGroupFieldNumber = 14;
    private global::HOLMS.Types.Primitive.MonetaryAmount anticipatedDueFromGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AnticipatedDueFromGroup {
      get { return anticipatedDueFromGroup_; }
      set {
        anticipatedDueFromGroup_ = value;
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 15;
    private global::HOLMS.Types.Folio.FolioIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FolioIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!effectiveCharges_.Equals(other.effectiveCharges_)) return false;
      if(!cardRefunds_.Equals(other.cardRefunds_)) return false;
      if(!cardSales_.Equals(other.cardSales_)) return false;
      if(!checkCashPayments_.Equals(other.checkCashPayments_)) return false;
      if(!currentTaxAssessments_.Equals(other.currentTaxAssessments_)) return false;
      if(!anticipatedEndingTaxAssessment_.Equals(other.anticipatedEndingTaxAssessment_)) return false;
      if(!nativeCharges_.Equals(other.nativeCharges_)) return false;
      if(!importedFromOtherFolioCharges_.Equals(other.importedFromOtherFolioCharges_)) return false;
      if (!object.Equals(CurrentCharges, other.CurrentCharges)) return false;
      if (!object.Equals(AnticipatedCharges, other.AnticipatedCharges)) return false;
      if (!object.Equals(PostedPayments, other.PostedPayments)) return false;
      if (!object.Equals(PostedRefunds, other.PostedRefunds)) return false;
      if (!object.Equals(CurrentDueFromGroup, other.CurrentDueFromGroup)) return false;
      if (!object.Equals(AnticipatedDueFromGroup, other.AnticipatedDueFromGroup)) return false;
      if (!object.Equals(EntityId, other.EntityId)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= effectiveCharges_.GetHashCode();
      hash ^= cardRefunds_.GetHashCode();
      hash ^= cardSales_.GetHashCode();
      hash ^= checkCashPayments_.GetHashCode();
      hash ^= currentTaxAssessments_.GetHashCode();
      hash ^= anticipatedEndingTaxAssessment_.GetHashCode();
      hash ^= nativeCharges_.GetHashCode();
      hash ^= importedFromOtherFolioCharges_.GetHashCode();
      if (currentCharges_ != null) hash ^= CurrentCharges.GetHashCode();
      if (anticipatedCharges_ != null) hash ^= AnticipatedCharges.GetHashCode();
      if (postedPayments_ != null) hash ^= PostedPayments.GetHashCode();
      if (postedRefunds_ != null) hash ^= PostedRefunds.GetHashCode();
      if (currentDueFromGroup_ != null) hash ^= CurrentDueFromGroup.GetHashCode();
      if (anticipatedDueFromGroup_ != null) hash ^= AnticipatedDueFromGroup.GetHashCode();
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      effectiveCharges_.WriteTo(output, _repeated_effectiveCharges_codec);
      cardRefunds_.WriteTo(output, _repeated_cardRefunds_codec);
      cardSales_.WriteTo(output, _repeated_cardSales_codec);
      checkCashPayments_.WriteTo(output, _repeated_checkCashPayments_codec);
      currentTaxAssessments_.WriteTo(output, _repeated_currentTaxAssessments_codec);
      anticipatedEndingTaxAssessment_.WriteTo(output, _repeated_anticipatedEndingTaxAssessment_codec);
      nativeCharges_.WriteTo(output, _repeated_nativeCharges_codec);
      importedFromOtherFolioCharges_.WriteTo(output, _repeated_importedFromOtherFolioCharges_codec);
      if (currentCharges_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CurrentCharges);
      }
      if (anticipatedCharges_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AnticipatedCharges);
      }
      if (postedPayments_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PostedPayments);
      }
      if (postedRefunds_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PostedRefunds);
      }
      if (currentDueFromGroup_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CurrentDueFromGroup);
      }
      if (anticipatedDueFromGroup_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AnticipatedDueFromGroup);
      }
      if (entityId_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(EntityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += effectiveCharges_.CalculateSize(_repeated_effectiveCharges_codec);
      size += cardRefunds_.CalculateSize(_repeated_cardRefunds_codec);
      size += cardSales_.CalculateSize(_repeated_cardSales_codec);
      size += checkCashPayments_.CalculateSize(_repeated_checkCashPayments_codec);
      size += currentTaxAssessments_.CalculateSize(_repeated_currentTaxAssessments_codec);
      size += anticipatedEndingTaxAssessment_.CalculateSize(_repeated_anticipatedEndingTaxAssessment_codec);
      size += nativeCharges_.CalculateSize(_repeated_nativeCharges_codec);
      size += importedFromOtherFolioCharges_.CalculateSize(_repeated_importedFromOtherFolioCharges_codec);
      if (currentCharges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentCharges);
      }
      if (anticipatedCharges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnticipatedCharges);
      }
      if (postedPayments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedPayments);
      }
      if (postedRefunds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedRefunds);
      }
      if (currentDueFromGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentDueFromGroup);
      }
      if (anticipatedDueFromGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnticipatedDueFromGroup);
      }
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioState other) {
      if (other == null) {
        return;
      }
      effectiveCharges_.Add(other.effectiveCharges_);
      cardRefunds_.Add(other.cardRefunds_);
      cardSales_.Add(other.cardSales_);
      checkCashPayments_.Add(other.checkCashPayments_);
      currentTaxAssessments_.Add(other.currentTaxAssessments_);
      anticipatedEndingTaxAssessment_.Add(other.anticipatedEndingTaxAssessment_);
      nativeCharges_.Add(other.nativeCharges_);
      importedFromOtherFolioCharges_.Add(other.importedFromOtherFolioCharges_);
      if (other.currentCharges_ != null) {
        if (currentCharges_ == null) {
          currentCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CurrentCharges.MergeFrom(other.CurrentCharges);
      }
      if (other.anticipatedCharges_ != null) {
        if (anticipatedCharges_ == null) {
          anticipatedCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AnticipatedCharges.MergeFrom(other.AnticipatedCharges);
      }
      if (other.postedPayments_ != null) {
        if (postedPayments_ == null) {
          postedPayments_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PostedPayments.MergeFrom(other.PostedPayments);
      }
      if (other.postedRefunds_ != null) {
        if (postedRefunds_ == null) {
          postedRefunds_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PostedRefunds.MergeFrom(other.PostedRefunds);
      }
      if (other.currentDueFromGroup_ != null) {
        if (currentDueFromGroup_ == null) {
          currentDueFromGroup_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CurrentDueFromGroup.MergeFrom(other.CurrentDueFromGroup);
      }
      if (other.anticipatedDueFromGroup_ != null) {
        if (anticipatedDueFromGroup_ == null) {
          anticipatedDueFromGroup_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AnticipatedDueFromGroup.MergeFrom(other.AnticipatedDueFromGroup);
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Folio.FolioIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            effectiveCharges_.AddEntriesFrom(input, _repeated_effectiveCharges_codec);
            break;
          }
          case 18: {
            cardRefunds_.AddEntriesFrom(input, _repeated_cardRefunds_codec);
            break;
          }
          case 26: {
            cardSales_.AddEntriesFrom(input, _repeated_cardSales_codec);
            break;
          }
          case 34: {
            checkCashPayments_.AddEntriesFrom(input, _repeated_checkCashPayments_codec);
            break;
          }
          case 42: {
            currentTaxAssessments_.AddEntriesFrom(input, _repeated_currentTaxAssessments_codec);
            break;
          }
          case 50: {
            anticipatedEndingTaxAssessment_.AddEntriesFrom(input, _repeated_anticipatedEndingTaxAssessment_codec);
            break;
          }
          case 58: {
            nativeCharges_.AddEntriesFrom(input, _repeated_nativeCharges_codec);
            break;
          }
          case 66: {
            importedFromOtherFolioCharges_.AddEntriesFrom(input, _repeated_importedFromOtherFolioCharges_codec);
            break;
          }
          case 74: {
            if (currentCharges_ == null) {
              currentCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(currentCharges_);
            break;
          }
          case 82: {
            if (anticipatedCharges_ == null) {
              anticipatedCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(anticipatedCharges_);
            break;
          }
          case 90: {
            if (postedPayments_ == null) {
              postedPayments_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(postedPayments_);
            break;
          }
          case 98: {
            if (postedRefunds_ == null) {
              postedRefunds_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(postedRefunds_);
            break;
          }
          case 106: {
            if (currentDueFromGroup_ == null) {
              currentDueFromGroup_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(currentDueFromGroup_);
            break;
          }
          case 114: {
            if (anticipatedDueFromGroup_ == null) {
              anticipatedDueFromGroup_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(anticipatedDueFromGroup_);
            break;
          }
          case 122: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Folio.FolioIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
