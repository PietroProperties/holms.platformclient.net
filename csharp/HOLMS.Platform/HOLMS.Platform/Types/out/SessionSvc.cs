// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iam/rpc/session_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.IAM.RPC {

  /// <summary>Holder for reflection information generated from iam/rpc/session_svc.proto</summary>
  public static partial class SessionSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for iam/rpc/session_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlpYW0vcnBjL3Nlc3Npb25fc3ZjLnByb3RvEhNob2xtcy50eXBlcy5pYW0u",
            "cnBjGiNpYW0vY2xpZW50X2luc3RhbmNlX2luZGljYXRvci5wcm90bxofcHJp",
            "bWl0aXZlL3Nlc3Npb25fY29udGV4dC5wcm90byK2AQodU2Vzc2lvblN2Y1N0",
            "YXJ0U2Vzc2lvblJlcXVlc3QSGgoSY2FuZGlkYXRlX3VzZXJuYW1lGAEgASgJ",
            "EhoKEmNhbmRpZGF0ZV9wYXNzd29yZBgCIAEoCRJEChJjbGllbnRfaW5zdGFu",
            "Y2VfaWQYAyABKAsyKC5ob2xtcy50eXBlcy5pYW0uQ2xpZW50SW5zdGFuY2VJ",
            "bmRpY2F0b3ISFwoPb2F1dGhfY2xpZW50X2lkGAQgASgJIk8KE1Rva2VuUmVm",
            "cmVzaFJlcXVlc3QSEgoKZ3JhbnRfdHlwZRgBIAEoCRIVCg1yZWZyZXNoX3Rv",
            "a2VuGAIgASgJEg0KBXNjb3BlGAMgASgJIjEKGFRva2VuSW52YWxpZGF0aW9u",
            "UmVxdWVzdBIVCg1yZWZyZXNoX3Rva2VuGAEgASgJIlkKGVRva2VuSW52YWxp",
            "ZGF0aW9uUmVzcG9uc2USPAoGcmVzdWx0GAEgASgOMiwuaG9sbXMudHlwZXMu",
            "aWFtLnJwYy5Ub2tlbkludmFsaWRhdGlvblJlc3VsdCKjAQoeU2Vzc2lvblN2",
            "Y1N0YXJ0U2Vzc2lvblJlc3BvbnNlEkEKBnJlc3VsdBgBIAEoDjIxLmhvbG1z",
            "LnR5cGVzLmlhbS5ycGMuU2Vzc2lvblN2Y1N0YXJ0U2Vzc2lvblJlc3VsdBI+",
            "Cg9zZXNzaW9uX2NvbnRleHQYAiABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRp",
            "dmUuU2Vzc2lvbkNvbnRleHQqRgocU2Vzc2lvblN2Y1N0YXJ0U2Vzc2lvblJl",
            "c3VsdBILCgdTVUNDRVNTEAASDAoISU5BQ1RJVkUQARILCgdGQUlMVVJFEAIq",
            "TQoXVG9rZW5JbnZhbGlkYXRpb25SZXN1bHQSGAoUSU5WQUxJREFUSU9OX1NV",
            "Q0NFU1MQABIYChRJTlZBTElEQVRJT05fRkFJTFVSRRABMvYCCgpTZXNzaW9u",
            "U3ZjEnoKD1RyeVN0YXJ0U2Vzc2lvbhIyLmhvbG1zLnR5cGVzLmlhbS5ycGMu",
            "U2Vzc2lvblN2Y1N0YXJ0U2Vzc2lvblJlcXVlc3QaMy5ob2xtcy50eXBlcy5p",
            "YW0ucnBjLlNlc3Npb25TdmNTdGFydFNlc3Npb25SZXNwb25zZRJzChJSZWZy",
            "ZXNoQWNjZXNzVG9rZW4SKC5ob2xtcy50eXBlcy5pYW0ucnBjLlRva2VuUmVm",
            "cmVzaFJlcXVlc3QaMy5ob2xtcy50eXBlcy5pYW0ucnBjLlNlc3Npb25TdmNT",
            "dGFydFNlc3Npb25SZXNwb25zZRJ3ChZJbnZhbGlkYXRlUmVmcmVzaFRva2Vu",
            "Ei0uaG9sbXMudHlwZXMuaWFtLnJwYy5Ub2tlbkludmFsaWRhdGlvblJlcXVl",
            "c3QaLi5ob2xtcy50eXBlcy5pYW0ucnBjLlRva2VuSW52YWxpZGF0aW9uUmVz",
            "cG9uc2VCH1oHaWFtL3JwY6oCE0hPTE1TLlR5cGVzLklBTS5SUENiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.IAM.ClientInstanceIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.SessionContextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionResult), typeof(global::HOLMS.Types.IAM.RPC.TokenInvalidationResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionRequest), global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionRequest.Parser, new[]{ "CandidateUsername", "CandidatePassword", "ClientInstanceId", "OauthClientId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.IAM.RPC.TokenRefreshRequest), global::HOLMS.Types.IAM.RPC.TokenRefreshRequest.Parser, new[]{ "GrantType", "RefreshToken", "Scope" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.IAM.RPC.TokenInvalidationRequest), global::HOLMS.Types.IAM.RPC.TokenInvalidationRequest.Parser, new[]{ "RefreshToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.IAM.RPC.TokenInvalidationResponse), global::HOLMS.Types.IAM.RPC.TokenInvalidationResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionResponse), global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionResponse.Parser, new[]{ "Result", "SessionContext" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SessionSvcStartSessionResult {
    [pbr::OriginalName("SUCCESS")] Success = 0,
    [pbr::OriginalName("INACTIVE")] Inactive = 1,
    [pbr::OriginalName("FAILURE")] Failure = 2,
  }

  public enum TokenInvalidationResult {
    [pbr::OriginalName("INVALIDATION_SUCCESS")] InvalidationSuccess = 0,
    [pbr::OriginalName("INVALIDATION_FAILURE")] InvalidationFailure = 1,
  }

  #endregion

  #region Messages
  public sealed partial class SessionSvcStartSessionRequest : pb::IMessage<SessionSvcStartSessionRequest> {
    private static readonly pb::MessageParser<SessionSvcStartSessionRequest> _parser = new pb::MessageParser<SessionSvcStartSessionRequest>(() => new SessionSvcStartSessionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionSvcStartSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.IAM.RPC.SessionSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSvcStartSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSvcStartSessionRequest(SessionSvcStartSessionRequest other) : this() {
      candidateUsername_ = other.candidateUsername_;
      candidatePassword_ = other.candidatePassword_;
      ClientInstanceId = other.clientInstanceId_ != null ? other.ClientInstanceId.Clone() : null;
      oauthClientId_ = other.oauthClientId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSvcStartSessionRequest Clone() {
      return new SessionSvcStartSessionRequest(this);
    }

    /// <summary>Field number for the "candidate_username" field.</summary>
    public const int CandidateUsernameFieldNumber = 1;
    private string candidateUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CandidateUsername {
      get { return candidateUsername_; }
      set {
        candidateUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "candidate_password" field.</summary>
    public const int CandidatePasswordFieldNumber = 2;
    private string candidatePassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CandidatePassword {
      get { return candidatePassword_; }
      set {
        candidatePassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_instance_id" field.</summary>
    public const int ClientInstanceIdFieldNumber = 3;
    private global::HOLMS.Types.IAM.ClientInstanceIndicator clientInstanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.ClientInstanceIndicator ClientInstanceId {
      get { return clientInstanceId_; }
      set {
        clientInstanceId_ = value;
      }
    }

    /// <summary>Field number for the "oauth_client_id" field.</summary>
    public const int OauthClientIdFieldNumber = 4;
    private string oauthClientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthClientId {
      get { return oauthClientId_; }
      set {
        oauthClientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionSvcStartSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionSvcStartSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CandidateUsername != other.CandidateUsername) return false;
      if (CandidatePassword != other.CandidatePassword) return false;
      if (!object.Equals(ClientInstanceId, other.ClientInstanceId)) return false;
      if (OauthClientId != other.OauthClientId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CandidateUsername.Length != 0) hash ^= CandidateUsername.GetHashCode();
      if (CandidatePassword.Length != 0) hash ^= CandidatePassword.GetHashCode();
      if (clientInstanceId_ != null) hash ^= ClientInstanceId.GetHashCode();
      if (OauthClientId.Length != 0) hash ^= OauthClientId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CandidateUsername.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CandidateUsername);
      }
      if (CandidatePassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CandidatePassword);
      }
      if (clientInstanceId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientInstanceId);
      }
      if (OauthClientId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OauthClientId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CandidateUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CandidateUsername);
      }
      if (CandidatePassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CandidatePassword);
      }
      if (clientInstanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInstanceId);
      }
      if (OauthClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthClientId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionSvcStartSessionRequest other) {
      if (other == null) {
        return;
      }
      if (other.CandidateUsername.Length != 0) {
        CandidateUsername = other.CandidateUsername;
      }
      if (other.CandidatePassword.Length != 0) {
        CandidatePassword = other.CandidatePassword;
      }
      if (other.clientInstanceId_ != null) {
        if (clientInstanceId_ == null) {
          clientInstanceId_ = new global::HOLMS.Types.IAM.ClientInstanceIndicator();
        }
        ClientInstanceId.MergeFrom(other.ClientInstanceId);
      }
      if (other.OauthClientId.Length != 0) {
        OauthClientId = other.OauthClientId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            CandidateUsername = input.ReadString();
            break;
          }
          case 18: {
            CandidatePassword = input.ReadString();
            break;
          }
          case 26: {
            if (clientInstanceId_ == null) {
              clientInstanceId_ = new global::HOLMS.Types.IAM.ClientInstanceIndicator();
            }
            input.ReadMessage(clientInstanceId_);
            break;
          }
          case 34: {
            OauthClientId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenRefreshRequest : pb::IMessage<TokenRefreshRequest> {
    private static readonly pb::MessageParser<TokenRefreshRequest> _parser = new pb::MessageParser<TokenRefreshRequest>(() => new TokenRefreshRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenRefreshRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.IAM.RPC.SessionSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRefreshRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRefreshRequest(TokenRefreshRequest other) : this() {
      grantType_ = other.grantType_;
      refreshToken_ = other.refreshToken_;
      scope_ = other.scope_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenRefreshRequest Clone() {
      return new TokenRefreshRequest(this);
    }

    /// <summary>Field number for the "grant_type" field.</summary>
    public const int GrantTypeFieldNumber = 1;
    private string grantType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GrantType {
      get { return grantType_; }
      set {
        grantType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 2;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 3;
    private string scope_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenRefreshRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenRefreshRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GrantType != other.GrantType) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (Scope != other.Scope) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GrantType.Length != 0) hash ^= GrantType.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GrantType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GrantType);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RefreshToken);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Scope);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GrantType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GrantType);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (Scope.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenRefreshRequest other) {
      if (other == null) {
        return;
      }
      if (other.GrantType.Length != 0) {
        GrantType = other.GrantType;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GrantType = input.ReadString();
            break;
          }
          case 18: {
            RefreshToken = input.ReadString();
            break;
          }
          case 26: {
            Scope = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenInvalidationRequest : pb::IMessage<TokenInvalidationRequest> {
    private static readonly pb::MessageParser<TokenInvalidationRequest> _parser = new pb::MessageParser<TokenInvalidationRequest>(() => new TokenInvalidationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenInvalidationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.IAM.RPC.SessionSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInvalidationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInvalidationRequest(TokenInvalidationRequest other) : this() {
      refreshToken_ = other.refreshToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInvalidationRequest Clone() {
      return new TokenInvalidationRequest(this);
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 1;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenInvalidationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenInvalidationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshToken != other.RefreshToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RefreshToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenInvalidationRequest other) {
      if (other == null) {
        return;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RefreshToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenInvalidationResponse : pb::IMessage<TokenInvalidationResponse> {
    private static readonly pb::MessageParser<TokenInvalidationResponse> _parser = new pb::MessageParser<TokenInvalidationResponse>(() => new TokenInvalidationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenInvalidationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.IAM.RPC.SessionSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInvalidationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInvalidationResponse(TokenInvalidationResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenInvalidationResponse Clone() {
      return new TokenInvalidationResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.IAM.RPC.TokenInvalidationResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.RPC.TokenInvalidationResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenInvalidationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenInvalidationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenInvalidationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.IAM.RPC.TokenInvalidationResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SessionSvcStartSessionResponse : pb::IMessage<SessionSvcStartSessionResponse> {
    private static readonly pb::MessageParser<SessionSvcStartSessionResponse> _parser = new pb::MessageParser<SessionSvcStartSessionResponse>(() => new SessionSvcStartSessionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SessionSvcStartSessionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.IAM.RPC.SessionSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSvcStartSessionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSvcStartSessionResponse(SessionSvcStartSessionResponse other) : this() {
      result_ = other.result_;
      SessionContext = other.sessionContext_ != null ? other.SessionContext.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SessionSvcStartSessionResponse Clone() {
      return new SessionSvcStartSessionResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "session_context" field.</summary>
    public const int SessionContextFieldNumber = 2;
    private global::HOLMS.Types.Primitive.SessionContext sessionContext_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.SessionContext SessionContext {
      get { return sessionContext_; }
      set {
        sessionContext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SessionSvcStartSessionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SessionSvcStartSessionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(SessionContext, other.SessionContext)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (sessionContext_ != null) hash ^= SessionContext.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (sessionContext_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SessionContext);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (sessionContext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionContext);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SessionSvcStartSessionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.sessionContext_ != null) {
        if (sessionContext_ == null) {
          sessionContext_ = new global::HOLMS.Types.Primitive.SessionContext();
        }
        SessionContext.MergeFrom(other.SessionContext);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.IAM.RPC.SessionSvcStartSessionResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (sessionContext_ == null) {
              sessionContext_ = new global::HOLMS.Types.Primitive.SessionContext();
            }
            input.ReadMessage(sessionContext_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
