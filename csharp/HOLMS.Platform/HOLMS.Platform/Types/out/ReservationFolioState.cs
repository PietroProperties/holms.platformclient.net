// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/reservation_folio_state.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio {

  /// <summary>Holder for reflection information generated from folio/reservation_folio_state.proto</summary>
  public static partial class ReservationFolioStateReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/reservation_folio_state.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationFolioStateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNmb2xpby9yZXNlcnZhdGlvbl9mb2xpb19zdGF0ZS5wcm90bxIRaG9sbXMu",
            "dHlwZXMuZm9saW8aH2ZvbGlvL2ZvbGlvX2F0b21pY19jaGFyZ2UucHJvdG8a",
            "HWZvbGlvL2ZvbGlvX2NhcmRfcmVmdW5kLnByb3RvGhtmb2xpby9mb2xpb19j",
            "YXJkX3NhbGUucHJvdG8aJGZvbGlvL2ZvbGlvX2NoZWNrX2Nhc2hfcGF5bWVu",
            "dC5wcm90bxolZm9saW8vcmVzZXJ2YXRpb25fZm9saW9fc3VtbWFyeS5wcm90",
            "bxoaZm9saW8vdGF4X2Fzc2Vzc21lbnQucHJvdG8aH3ByaW1pdGl2ZS9tb25l",
            "dGFyeV9hbW91bnQucHJvdG8aJ21vbmV5L2NhcmRzL2N1c3RvbWVyX3BheW1l",
            "bnRfY2FyZC5wcm90byL6DgoVUmVzZXJ2YXRpb25Gb2xpb1N0YXRlEj8KEWVm",
            "ZmVjdGl2ZV9jaGFyZ2VzGAEgAygLMiQuaG9sbXMudHlwZXMuZm9saW8uRm9s",
            "aW9BdG9taWNDaGFyZ2USOAoMY2FyZF9yZWZ1bmRzGAIgAygLMiIuaG9sbXMu",
            "dHlwZXMuZm9saW8uRm9saW9DYXJkUmVmdW5kEjQKCmNhcmRfc2FsZXMYAyAD",
            "KAsyIC5ob2xtcy50eXBlcy5mb2xpby5Gb2xpb0NhcmRTYWxlEkUKE2NoZWNr",
            "X2Nhc2hfcGF5bWVudHMYBCADKAsyKC5ob2xtcy50eXBlcy5mb2xpby5Gb2xp",
            "b0NoZWNrQ2FzaFBheW1lbnQSQQoXY3VycmVudF90YXhfYXNzZXNzbWVudHMY",
            "BSADKAsyIC5ob2xtcy50eXBlcy5mb2xpby5UYXhBc3Nlc3NtZW50EksKIWFu",
            "dGljaXBhdGVkX2VuZGluZ190YXhfYXNzZXNzbWVudBgGIAMoCzIgLmhvbG1z",
            "LnR5cGVzLmZvbGlvLlRheEFzc2Vzc21lbnQSPAoObmF0aXZlX2NoYXJnZXMY",
            "ByADKAsyJC5ob2xtcy50eXBlcy5mb2xpby5Gb2xpb0F0b21pY0NoYXJnZRJN",
            "Ch9leHBvcnRlZF90b19vdGhlcl9mb2xpb19jaGFyZ2VzGAggAygLMiQuaG9s",
            "bXMudHlwZXMuZm9saW8uRm9saW9BdG9taWNDaGFyZ2USTwohaW1wb3J0ZWRf",
            "ZnJvbV9vdGhlcl9mb2xpb19jaGFyZ2VzGAkgAygLMiQuaG9sbXMudHlwZXMu",
            "Zm9saW8uRm9saW9BdG9taWNDaGFyZ2USPgoPY3VycmVudF9jaGFyZ2VzGAog",
            "ASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EkIK",
            "E2FudGljaXBhdGVkX2NoYXJnZXMYCyABKAsyJS5ob2xtcy50eXBlcy5wcmlt",
            "aXRpdmUuTW9uZXRhcnlBbW91bnQSPgoPcG9zdGVkX3BheW1lbnRzGAwgASgL",
            "MiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50Ej0KDnBv",
            "c3RlZF9yZWZ1bmRzGA0gASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1v",
            "bmV0YXJ5QW1vdW50EkwKHXVudXNlZF9wYXltZW50X2F1dGhvcml6YXRpb25z",
            "GBAgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50",
            "Ek4KH3VudXNlZF9ndWFyYW50ZWVfYXV0aG9yaXphdGlvbnMYESABKAsyJS5o",
            "b2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSRQoWY3VycmVu",
            "dF9kdWVfZnJvbV9ndWVzdBgSIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2",
            "ZS5Nb25ldGFyeUFtb3VudBJSCiNhbnRpY2lwYXRlZF9jaGVja291dF9kdWVf",
            "ZnJvbV9ndWVzdBgTIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25l",
            "dGFyeUFtb3VudBIhChlncmFjZWZ1bF9jbG9zdXJlX3Bvc3NpYmxlGBQgASgI",
            "EjsKB3N1bW1hcnkYFSABKAsyKi5ob2xtcy50eXBlcy5mb2xpby5SZXNlcnZh",
            "dGlvbkZvbGlvU3VtbWFyeRIsCiRtYXN0ZXJfZm9saW9fYWNjcnVlc19sb2Rn",
            "aW5nX2NoYXJnZXMYFiABKAgSLwonbWFzdGVyX2ZvbGlvX2FjY3J1ZXNfaW5j",
            "aWRlbnRhbF9jaGFyZ2VzGBcgASgIElYKJ3JlbWFpbmluZ190ZW5kZXJfcmVx",
            "dWlyZWRfZm9yX2d1YXJhbnRlZRgYIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1p",
            "dGl2ZS5Nb25ldGFyeUFtb3VudBJDChR0b3RhbF9tYXN0ZXJfY2hhcmdlcxgZ",
            "IAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBJB",
            "ChJ0b3RhbF9tYXN0ZXJfdGF4ZXMYGiABKAsyJS5ob2xtcy50eXBlcy5wcmlt",
            "aXRpdmUuTW9uZXRhcnlBbW91bnQSQAoRdG90YWxfbWFzdGVyX2ZlZXMYGyAB",
            "KAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSOQoK",
            "bWF4X3JlZnVuZBgcIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25l",
            "dGFyeUFtb3VudBIeChZpc19ndWFyYW50ZWVfYnlfbWFzdGVyGB0gASgIEiYK",
            "HmlzX2d1YXJhbnRlZWRfYnlfZ3JvdXBfYm9va2luZxgeIAEoCBJDCg12ZXJp",
            "ZmllZF9jYXJkGB8gAygLMiwuaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuQ3Vz",
            "dG9tZXJQYXltZW50Q2FyZBIWCg5ib29raW5nX251bWJlchggIAEoCUIUqgIR",
            "SE9MTVMuVHlwZXMuRm9saW9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Folio.FolioAtomicChargeReflection.Descriptor, global::HOLMS.Types.Folio.FolioCardRefundReflection.Descriptor, global::HOLMS.Types.Folio.FolioCardSaleReflection.Descriptor, global::HOLMS.Types.Folio.FolioCheckCashPaymentReflection.Descriptor, global::HOLMS.Types.Folio.ReservationFolioSummaryReflection.Descriptor, global::HOLMS.Types.Folio.TaxAssessmentReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Money.Cards.CustomerPaymentCardReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.ReservationFolioState), global::HOLMS.Types.Folio.ReservationFolioState.Parser, new[]{ "EffectiveCharges", "CardRefunds", "CardSales", "CheckCashPayments", "CurrentTaxAssessments", "AnticipatedEndingTaxAssessment", "NativeCharges", "ExportedToOtherFolioCharges", "ImportedFromOtherFolioCharges", "CurrentCharges", "AnticipatedCharges", "PostedPayments", "PostedRefunds", "UnusedPaymentAuthorizations", "UnusedGuaranteeAuthorizations", "CurrentDueFromGuest", "AnticipatedCheckoutDueFromGuest", "GracefulClosurePossible", "Summary", "MasterFolioAccruesLodgingCharges", "MasterFolioAccruesIncidentalCharges", "RemainingTenderRequiredForGuarantee", "TotalMasterCharges", "TotalMasterTaxes", "TotalMasterFees", "MaxRefund", "IsGuaranteeByMaster", "IsGuaranteedByGroupBooking", "VerifiedCard", "BookingNumber" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReservationFolioState : pb::IMessage<ReservationFolioState> {
    private static readonly pb::MessageParser<ReservationFolioState> _parser = new pb::MessageParser<ReservationFolioState>(() => new ReservationFolioState());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.ReservationFolioStateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioState(ReservationFolioState other) : this() {
      effectiveCharges_ = other.effectiveCharges_.Clone();
      cardRefunds_ = other.cardRefunds_.Clone();
      cardSales_ = other.cardSales_.Clone();
      checkCashPayments_ = other.checkCashPayments_.Clone();
      currentTaxAssessments_ = other.currentTaxAssessments_.Clone();
      anticipatedEndingTaxAssessment_ = other.anticipatedEndingTaxAssessment_.Clone();
      nativeCharges_ = other.nativeCharges_.Clone();
      exportedToOtherFolioCharges_ = other.exportedToOtherFolioCharges_.Clone();
      importedFromOtherFolioCharges_ = other.importedFromOtherFolioCharges_.Clone();
      CurrentCharges = other.currentCharges_ != null ? other.CurrentCharges.Clone() : null;
      AnticipatedCharges = other.anticipatedCharges_ != null ? other.AnticipatedCharges.Clone() : null;
      PostedPayments = other.postedPayments_ != null ? other.PostedPayments.Clone() : null;
      PostedRefunds = other.postedRefunds_ != null ? other.PostedRefunds.Clone() : null;
      UnusedPaymentAuthorizations = other.unusedPaymentAuthorizations_ != null ? other.UnusedPaymentAuthorizations.Clone() : null;
      UnusedGuaranteeAuthorizations = other.unusedGuaranteeAuthorizations_ != null ? other.UnusedGuaranteeAuthorizations.Clone() : null;
      CurrentDueFromGuest = other.currentDueFromGuest_ != null ? other.CurrentDueFromGuest.Clone() : null;
      AnticipatedCheckoutDueFromGuest = other.anticipatedCheckoutDueFromGuest_ != null ? other.AnticipatedCheckoutDueFromGuest.Clone() : null;
      gracefulClosurePossible_ = other.gracefulClosurePossible_;
      Summary = other.summary_ != null ? other.Summary.Clone() : null;
      masterFolioAccruesLodgingCharges_ = other.masterFolioAccruesLodgingCharges_;
      masterFolioAccruesIncidentalCharges_ = other.masterFolioAccruesIncidentalCharges_;
      RemainingTenderRequiredForGuarantee = other.remainingTenderRequiredForGuarantee_ != null ? other.RemainingTenderRequiredForGuarantee.Clone() : null;
      TotalMasterCharges = other.totalMasterCharges_ != null ? other.TotalMasterCharges.Clone() : null;
      TotalMasterTaxes = other.totalMasterTaxes_ != null ? other.TotalMasterTaxes.Clone() : null;
      TotalMasterFees = other.totalMasterFees_ != null ? other.TotalMasterFees.Clone() : null;
      MaxRefund = other.maxRefund_ != null ? other.MaxRefund.Clone() : null;
      isGuaranteeByMaster_ = other.isGuaranteeByMaster_;
      isGuaranteedByGroupBooking_ = other.isGuaranteedByGroupBooking_;
      verifiedCard_ = other.verifiedCard_.Clone();
      bookingNumber_ = other.bookingNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioState Clone() {
      return new ReservationFolioState(this);
    }

    /// <summary>Field number for the "effective_charges" field.</summary>
    public const int EffectiveChargesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_effectiveCharges_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> effectiveCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> EffectiveCharges {
      get { return effectiveCharges_; }
    }

    /// <summary>Field number for the "card_refunds" field.</summary>
    public const int CardRefundsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioCardRefund> _repeated_cardRefunds_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Folio.FolioCardRefund.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardRefund> cardRefunds_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardRefund>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardRefund> CardRefunds {
      get { return cardRefunds_; }
    }

    /// <summary>Field number for the "card_sales" field.</summary>
    public const int CardSalesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioCardSale> _repeated_cardSales_codec
        = pb::FieldCodec.ForMessage(26, global::HOLMS.Types.Folio.FolioCardSale.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardSale> cardSales_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardSale>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCardSale> CardSales {
      get { return cardSales_; }
    }

    /// <summary>Field number for the "check_cash_payments" field.</summary>
    public const int CheckCashPaymentsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioCheckCashPayment> _repeated_checkCashPayments_codec
        = pb::FieldCodec.ForMessage(34, global::HOLMS.Types.Folio.FolioCheckCashPayment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCheckCashPayment> checkCashPayments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCheckCashPayment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioCheckCashPayment> CheckCashPayments {
      get { return checkCashPayments_; }
    }

    /// <summary>Field number for the "current_tax_assessments" field.</summary>
    public const int CurrentTaxAssessmentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxAssessment> _repeated_currentTaxAssessments_codec
        = pb::FieldCodec.ForMessage(42, global::HOLMS.Types.Folio.TaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> currentTaxAssessments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> CurrentTaxAssessments {
      get { return currentTaxAssessments_; }
    }

    /// <summary>Field number for the "anticipated_ending_tax_assessment" field.</summary>
    public const int AnticipatedEndingTaxAssessmentFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxAssessment> _repeated_anticipatedEndingTaxAssessment_codec
        = pb::FieldCodec.ForMessage(50, global::HOLMS.Types.Folio.TaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> anticipatedEndingTaxAssessment_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> AnticipatedEndingTaxAssessment {
      get { return anticipatedEndingTaxAssessment_; }
    }

    /// <summary>Field number for the "native_charges" field.</summary>
    public const int NativeChargesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_nativeCharges_codec
        = pb::FieldCodec.ForMessage(58, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> nativeCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> NativeCharges {
      get { return nativeCharges_; }
    }

    /// <summary>Field number for the "exported_to_other_folio_charges" field.</summary>
    public const int ExportedToOtherFolioChargesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_exportedToOtherFolioCharges_codec
        = pb::FieldCodec.ForMessage(66, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> exportedToOtherFolioCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> ExportedToOtherFolioCharges {
      get { return exportedToOtherFolioCharges_; }
    }

    /// <summary>Field number for the "imported_from_other_folio_charges" field.</summary>
    public const int ImportedFromOtherFolioChargesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioAtomicCharge> _repeated_importedFromOtherFolioCharges_codec
        = pb::FieldCodec.ForMessage(74, global::HOLMS.Types.Folio.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> importedFromOtherFolioCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioAtomicCharge> ImportedFromOtherFolioCharges {
      get { return importedFromOtherFolioCharges_; }
    }

    /// <summary>Field number for the "current_charges" field.</summary>
    public const int CurrentChargesFieldNumber = 10;
    private global::HOLMS.Types.Primitive.MonetaryAmount currentCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CurrentCharges {
      get { return currentCharges_; }
      set {
        currentCharges_ = value;
      }
    }

    /// <summary>Field number for the "anticipated_charges" field.</summary>
    public const int AnticipatedChargesFieldNumber = 11;
    private global::HOLMS.Types.Primitive.MonetaryAmount anticipatedCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AnticipatedCharges {
      get { return anticipatedCharges_; }
      set {
        anticipatedCharges_ = value;
      }
    }

    /// <summary>Field number for the "posted_payments" field.</summary>
    public const int PostedPaymentsFieldNumber = 12;
    private global::HOLMS.Types.Primitive.MonetaryAmount postedPayments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PostedPayments {
      get { return postedPayments_; }
      set {
        postedPayments_ = value;
      }
    }

    /// <summary>Field number for the "posted_refunds" field.</summary>
    public const int PostedRefundsFieldNumber = 13;
    private global::HOLMS.Types.Primitive.MonetaryAmount postedRefunds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PostedRefunds {
      get { return postedRefunds_; }
      set {
        postedRefunds_ = value;
      }
    }

    /// <summary>Field number for the "unused_payment_authorizations" field.</summary>
    public const int UnusedPaymentAuthorizationsFieldNumber = 16;
    private global::HOLMS.Types.Primitive.MonetaryAmount unusedPaymentAuthorizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount UnusedPaymentAuthorizations {
      get { return unusedPaymentAuthorizations_; }
      set {
        unusedPaymentAuthorizations_ = value;
      }
    }

    /// <summary>Field number for the "unused_guarantee_authorizations" field.</summary>
    public const int UnusedGuaranteeAuthorizationsFieldNumber = 17;
    private global::HOLMS.Types.Primitive.MonetaryAmount unusedGuaranteeAuthorizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount UnusedGuaranteeAuthorizations {
      get { return unusedGuaranteeAuthorizations_; }
      set {
        unusedGuaranteeAuthorizations_ = value;
      }
    }

    /// <summary>Field number for the "current_due_from_guest" field.</summary>
    public const int CurrentDueFromGuestFieldNumber = 18;
    private global::HOLMS.Types.Primitive.MonetaryAmount currentDueFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CurrentDueFromGuest {
      get { return currentDueFromGuest_; }
      set {
        currentDueFromGuest_ = value;
      }
    }

    /// <summary>Field number for the "anticipated_checkout_due_from_guest" field.</summary>
    public const int AnticipatedCheckoutDueFromGuestFieldNumber = 19;
    private global::HOLMS.Types.Primitive.MonetaryAmount anticipatedCheckoutDueFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AnticipatedCheckoutDueFromGuest {
      get { return anticipatedCheckoutDueFromGuest_; }
      set {
        anticipatedCheckoutDueFromGuest_ = value;
      }
    }

    /// <summary>Field number for the "graceful_closure_possible" field.</summary>
    public const int GracefulClosurePossibleFieldNumber = 20;
    private bool gracefulClosurePossible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GracefulClosurePossible {
      get { return gracefulClosurePossible_; }
      set {
        gracefulClosurePossible_ = value;
      }
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 21;
    private global::HOLMS.Types.Folio.ReservationFolioSummary summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.ReservationFolioSummary Summary {
      get { return summary_; }
      set {
        summary_ = value;
      }
    }

    /// <summary>Field number for the "master_folio_accrues_lodging_charges" field.</summary>
    public const int MasterFolioAccruesLodgingChargesFieldNumber = 22;
    private bool masterFolioAccruesLodgingCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MasterFolioAccruesLodgingCharges {
      get { return masterFolioAccruesLodgingCharges_; }
      set {
        masterFolioAccruesLodgingCharges_ = value;
      }
    }

    /// <summary>Field number for the "master_folio_accrues_incidental_charges" field.</summary>
    public const int MasterFolioAccruesIncidentalChargesFieldNumber = 23;
    private bool masterFolioAccruesIncidentalCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MasterFolioAccruesIncidentalCharges {
      get { return masterFolioAccruesIncidentalCharges_; }
      set {
        masterFolioAccruesIncidentalCharges_ = value;
      }
    }

    /// <summary>Field number for the "remaining_tender_required_for_guarantee" field.</summary>
    public const int RemainingTenderRequiredForGuaranteeFieldNumber = 24;
    private global::HOLMS.Types.Primitive.MonetaryAmount remainingTenderRequiredForGuarantee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount RemainingTenderRequiredForGuarantee {
      get { return remainingTenderRequiredForGuarantee_; }
      set {
        remainingTenderRequiredForGuarantee_ = value;
      }
    }

    /// <summary>Field number for the "total_master_charges" field.</summary>
    public const int TotalMasterChargesFieldNumber = 25;
    private global::HOLMS.Types.Primitive.MonetaryAmount totalMasterCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount TotalMasterCharges {
      get { return totalMasterCharges_; }
      set {
        totalMasterCharges_ = value;
      }
    }

    /// <summary>Field number for the "total_master_taxes" field.</summary>
    public const int TotalMasterTaxesFieldNumber = 26;
    private global::HOLMS.Types.Primitive.MonetaryAmount totalMasterTaxes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount TotalMasterTaxes {
      get { return totalMasterTaxes_; }
      set {
        totalMasterTaxes_ = value;
      }
    }

    /// <summary>Field number for the "total_master_fees" field.</summary>
    public const int TotalMasterFeesFieldNumber = 27;
    private global::HOLMS.Types.Primitive.MonetaryAmount totalMasterFees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount TotalMasterFees {
      get { return totalMasterFees_; }
      set {
        totalMasterFees_ = value;
      }
    }

    /// <summary>Field number for the "max_refund" field.</summary>
    public const int MaxRefundFieldNumber = 28;
    private global::HOLMS.Types.Primitive.MonetaryAmount maxRefund_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount MaxRefund {
      get { return maxRefund_; }
      set {
        maxRefund_ = value;
      }
    }

    /// <summary>Field number for the "is_guarantee_by_master" field.</summary>
    public const int IsGuaranteeByMasterFieldNumber = 29;
    private bool isGuaranteeByMaster_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGuaranteeByMaster {
      get { return isGuaranteeByMaster_; }
      set {
        isGuaranteeByMaster_ = value;
      }
    }

    /// <summary>Field number for the "is_guaranteed_by_group_booking" field.</summary>
    public const int IsGuaranteedByGroupBookingFieldNumber = 30;
    private bool isGuaranteedByGroupBooking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGuaranteedByGroupBooking {
      get { return isGuaranteedByGroupBooking_; }
      set {
        isGuaranteedByGroupBooking_ = value;
      }
    }

    /// <summary>Field number for the "verified_card" field.</summary>
    public const int VerifiedCardFieldNumber = 31;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.CustomerPaymentCard> _repeated_verifiedCard_codec
        = pb::FieldCodec.ForMessage(250, global::HOLMS.Types.Money.Cards.CustomerPaymentCard.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.CustomerPaymentCard> verifiedCard_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.CustomerPaymentCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.CustomerPaymentCard> VerifiedCard {
      get { return verifiedCard_; }
    }

    /// <summary>Field number for the "booking_number" field.</summary>
    public const int BookingNumberFieldNumber = 32;
    private string bookingNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingNumber {
      get { return bookingNumber_; }
      set {
        bookingNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!effectiveCharges_.Equals(other.effectiveCharges_)) return false;
      if(!cardRefunds_.Equals(other.cardRefunds_)) return false;
      if(!cardSales_.Equals(other.cardSales_)) return false;
      if(!checkCashPayments_.Equals(other.checkCashPayments_)) return false;
      if(!currentTaxAssessments_.Equals(other.currentTaxAssessments_)) return false;
      if(!anticipatedEndingTaxAssessment_.Equals(other.anticipatedEndingTaxAssessment_)) return false;
      if(!nativeCharges_.Equals(other.nativeCharges_)) return false;
      if(!exportedToOtherFolioCharges_.Equals(other.exportedToOtherFolioCharges_)) return false;
      if(!importedFromOtherFolioCharges_.Equals(other.importedFromOtherFolioCharges_)) return false;
      if (!object.Equals(CurrentCharges, other.CurrentCharges)) return false;
      if (!object.Equals(AnticipatedCharges, other.AnticipatedCharges)) return false;
      if (!object.Equals(PostedPayments, other.PostedPayments)) return false;
      if (!object.Equals(PostedRefunds, other.PostedRefunds)) return false;
      if (!object.Equals(UnusedPaymentAuthorizations, other.UnusedPaymentAuthorizations)) return false;
      if (!object.Equals(UnusedGuaranteeAuthorizations, other.UnusedGuaranteeAuthorizations)) return false;
      if (!object.Equals(CurrentDueFromGuest, other.CurrentDueFromGuest)) return false;
      if (!object.Equals(AnticipatedCheckoutDueFromGuest, other.AnticipatedCheckoutDueFromGuest)) return false;
      if (GracefulClosurePossible != other.GracefulClosurePossible) return false;
      if (!object.Equals(Summary, other.Summary)) return false;
      if (MasterFolioAccruesLodgingCharges != other.MasterFolioAccruesLodgingCharges) return false;
      if (MasterFolioAccruesIncidentalCharges != other.MasterFolioAccruesIncidentalCharges) return false;
      if (!object.Equals(RemainingTenderRequiredForGuarantee, other.RemainingTenderRequiredForGuarantee)) return false;
      if (!object.Equals(TotalMasterCharges, other.TotalMasterCharges)) return false;
      if (!object.Equals(TotalMasterTaxes, other.TotalMasterTaxes)) return false;
      if (!object.Equals(TotalMasterFees, other.TotalMasterFees)) return false;
      if (!object.Equals(MaxRefund, other.MaxRefund)) return false;
      if (IsGuaranteeByMaster != other.IsGuaranteeByMaster) return false;
      if (IsGuaranteedByGroupBooking != other.IsGuaranteedByGroupBooking) return false;
      if(!verifiedCard_.Equals(other.verifiedCard_)) return false;
      if (BookingNumber != other.BookingNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= effectiveCharges_.GetHashCode();
      hash ^= cardRefunds_.GetHashCode();
      hash ^= cardSales_.GetHashCode();
      hash ^= checkCashPayments_.GetHashCode();
      hash ^= currentTaxAssessments_.GetHashCode();
      hash ^= anticipatedEndingTaxAssessment_.GetHashCode();
      hash ^= nativeCharges_.GetHashCode();
      hash ^= exportedToOtherFolioCharges_.GetHashCode();
      hash ^= importedFromOtherFolioCharges_.GetHashCode();
      if (currentCharges_ != null) hash ^= CurrentCharges.GetHashCode();
      if (anticipatedCharges_ != null) hash ^= AnticipatedCharges.GetHashCode();
      if (postedPayments_ != null) hash ^= PostedPayments.GetHashCode();
      if (postedRefunds_ != null) hash ^= PostedRefunds.GetHashCode();
      if (unusedPaymentAuthorizations_ != null) hash ^= UnusedPaymentAuthorizations.GetHashCode();
      if (unusedGuaranteeAuthorizations_ != null) hash ^= UnusedGuaranteeAuthorizations.GetHashCode();
      if (currentDueFromGuest_ != null) hash ^= CurrentDueFromGuest.GetHashCode();
      if (anticipatedCheckoutDueFromGuest_ != null) hash ^= AnticipatedCheckoutDueFromGuest.GetHashCode();
      if (GracefulClosurePossible != false) hash ^= GracefulClosurePossible.GetHashCode();
      if (summary_ != null) hash ^= Summary.GetHashCode();
      if (MasterFolioAccruesLodgingCharges != false) hash ^= MasterFolioAccruesLodgingCharges.GetHashCode();
      if (MasterFolioAccruesIncidentalCharges != false) hash ^= MasterFolioAccruesIncidentalCharges.GetHashCode();
      if (remainingTenderRequiredForGuarantee_ != null) hash ^= RemainingTenderRequiredForGuarantee.GetHashCode();
      if (totalMasterCharges_ != null) hash ^= TotalMasterCharges.GetHashCode();
      if (totalMasterTaxes_ != null) hash ^= TotalMasterTaxes.GetHashCode();
      if (totalMasterFees_ != null) hash ^= TotalMasterFees.GetHashCode();
      if (maxRefund_ != null) hash ^= MaxRefund.GetHashCode();
      if (IsGuaranteeByMaster != false) hash ^= IsGuaranteeByMaster.GetHashCode();
      if (IsGuaranteedByGroupBooking != false) hash ^= IsGuaranteedByGroupBooking.GetHashCode();
      hash ^= verifiedCard_.GetHashCode();
      if (BookingNumber.Length != 0) hash ^= BookingNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      effectiveCharges_.WriteTo(output, _repeated_effectiveCharges_codec);
      cardRefunds_.WriteTo(output, _repeated_cardRefunds_codec);
      cardSales_.WriteTo(output, _repeated_cardSales_codec);
      checkCashPayments_.WriteTo(output, _repeated_checkCashPayments_codec);
      currentTaxAssessments_.WriteTo(output, _repeated_currentTaxAssessments_codec);
      anticipatedEndingTaxAssessment_.WriteTo(output, _repeated_anticipatedEndingTaxAssessment_codec);
      nativeCharges_.WriteTo(output, _repeated_nativeCharges_codec);
      exportedToOtherFolioCharges_.WriteTo(output, _repeated_exportedToOtherFolioCharges_codec);
      importedFromOtherFolioCharges_.WriteTo(output, _repeated_importedFromOtherFolioCharges_codec);
      if (currentCharges_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CurrentCharges);
      }
      if (anticipatedCharges_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AnticipatedCharges);
      }
      if (postedPayments_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PostedPayments);
      }
      if (postedRefunds_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PostedRefunds);
      }
      if (unusedPaymentAuthorizations_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(UnusedPaymentAuthorizations);
      }
      if (unusedGuaranteeAuthorizations_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(UnusedGuaranteeAuthorizations);
      }
      if (currentDueFromGuest_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CurrentDueFromGuest);
      }
      if (anticipatedCheckoutDueFromGuest_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(AnticipatedCheckoutDueFromGuest);
      }
      if (GracefulClosurePossible != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(GracefulClosurePossible);
      }
      if (summary_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Summary);
      }
      if (MasterFolioAccruesLodgingCharges != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(MasterFolioAccruesLodgingCharges);
      }
      if (MasterFolioAccruesIncidentalCharges != false) {
        output.WriteRawTag(184, 1);
        output.WriteBool(MasterFolioAccruesIncidentalCharges);
      }
      if (remainingTenderRequiredForGuarantee_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(RemainingTenderRequiredForGuarantee);
      }
      if (totalMasterCharges_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(TotalMasterCharges);
      }
      if (totalMasterTaxes_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(TotalMasterTaxes);
      }
      if (totalMasterFees_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(TotalMasterFees);
      }
      if (maxRefund_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(MaxRefund);
      }
      if (IsGuaranteeByMaster != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(IsGuaranteeByMaster);
      }
      if (IsGuaranteedByGroupBooking != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(IsGuaranteedByGroupBooking);
      }
      verifiedCard_.WriteTo(output, _repeated_verifiedCard_codec);
      if (BookingNumber.Length != 0) {
        output.WriteRawTag(130, 2);
        output.WriteString(BookingNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += effectiveCharges_.CalculateSize(_repeated_effectiveCharges_codec);
      size += cardRefunds_.CalculateSize(_repeated_cardRefunds_codec);
      size += cardSales_.CalculateSize(_repeated_cardSales_codec);
      size += checkCashPayments_.CalculateSize(_repeated_checkCashPayments_codec);
      size += currentTaxAssessments_.CalculateSize(_repeated_currentTaxAssessments_codec);
      size += anticipatedEndingTaxAssessment_.CalculateSize(_repeated_anticipatedEndingTaxAssessment_codec);
      size += nativeCharges_.CalculateSize(_repeated_nativeCharges_codec);
      size += exportedToOtherFolioCharges_.CalculateSize(_repeated_exportedToOtherFolioCharges_codec);
      size += importedFromOtherFolioCharges_.CalculateSize(_repeated_importedFromOtherFolioCharges_codec);
      if (currentCharges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentCharges);
      }
      if (anticipatedCharges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnticipatedCharges);
      }
      if (postedPayments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedPayments);
      }
      if (postedRefunds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedRefunds);
      }
      if (unusedPaymentAuthorizations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnusedPaymentAuthorizations);
      }
      if (unusedGuaranteeAuthorizations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnusedGuaranteeAuthorizations);
      }
      if (currentDueFromGuest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentDueFromGuest);
      }
      if (anticipatedCheckoutDueFromGuest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AnticipatedCheckoutDueFromGuest);
      }
      if (GracefulClosurePossible != false) {
        size += 2 + 1;
      }
      if (summary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Summary);
      }
      if (MasterFolioAccruesLodgingCharges != false) {
        size += 2 + 1;
      }
      if (MasterFolioAccruesIncidentalCharges != false) {
        size += 2 + 1;
      }
      if (remainingTenderRequiredForGuarantee_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemainingTenderRequiredForGuarantee);
      }
      if (totalMasterCharges_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalMasterCharges);
      }
      if (totalMasterTaxes_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalMasterTaxes);
      }
      if (totalMasterFees_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalMasterFees);
      }
      if (maxRefund_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaxRefund);
      }
      if (IsGuaranteeByMaster != false) {
        size += 2 + 1;
      }
      if (IsGuaranteedByGroupBooking != false) {
        size += 2 + 1;
      }
      size += verifiedCard_.CalculateSize(_repeated_verifiedCard_codec);
      if (BookingNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BookingNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioState other) {
      if (other == null) {
        return;
      }
      effectiveCharges_.Add(other.effectiveCharges_);
      cardRefunds_.Add(other.cardRefunds_);
      cardSales_.Add(other.cardSales_);
      checkCashPayments_.Add(other.checkCashPayments_);
      currentTaxAssessments_.Add(other.currentTaxAssessments_);
      anticipatedEndingTaxAssessment_.Add(other.anticipatedEndingTaxAssessment_);
      nativeCharges_.Add(other.nativeCharges_);
      exportedToOtherFolioCharges_.Add(other.exportedToOtherFolioCharges_);
      importedFromOtherFolioCharges_.Add(other.importedFromOtherFolioCharges_);
      if (other.currentCharges_ != null) {
        if (currentCharges_ == null) {
          currentCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CurrentCharges.MergeFrom(other.CurrentCharges);
      }
      if (other.anticipatedCharges_ != null) {
        if (anticipatedCharges_ == null) {
          anticipatedCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AnticipatedCharges.MergeFrom(other.AnticipatedCharges);
      }
      if (other.postedPayments_ != null) {
        if (postedPayments_ == null) {
          postedPayments_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PostedPayments.MergeFrom(other.PostedPayments);
      }
      if (other.postedRefunds_ != null) {
        if (postedRefunds_ == null) {
          postedRefunds_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PostedRefunds.MergeFrom(other.PostedRefunds);
      }
      if (other.unusedPaymentAuthorizations_ != null) {
        if (unusedPaymentAuthorizations_ == null) {
          unusedPaymentAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        UnusedPaymentAuthorizations.MergeFrom(other.UnusedPaymentAuthorizations);
      }
      if (other.unusedGuaranteeAuthorizations_ != null) {
        if (unusedGuaranteeAuthorizations_ == null) {
          unusedGuaranteeAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        UnusedGuaranteeAuthorizations.MergeFrom(other.UnusedGuaranteeAuthorizations);
      }
      if (other.currentDueFromGuest_ != null) {
        if (currentDueFromGuest_ == null) {
          currentDueFromGuest_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CurrentDueFromGuest.MergeFrom(other.CurrentDueFromGuest);
      }
      if (other.anticipatedCheckoutDueFromGuest_ != null) {
        if (anticipatedCheckoutDueFromGuest_ == null) {
          anticipatedCheckoutDueFromGuest_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AnticipatedCheckoutDueFromGuest.MergeFrom(other.AnticipatedCheckoutDueFromGuest);
      }
      if (other.GracefulClosurePossible != false) {
        GracefulClosurePossible = other.GracefulClosurePossible;
      }
      if (other.summary_ != null) {
        if (summary_ == null) {
          summary_ = new global::HOLMS.Types.Folio.ReservationFolioSummary();
        }
        Summary.MergeFrom(other.Summary);
      }
      if (other.MasterFolioAccruesLodgingCharges != false) {
        MasterFolioAccruesLodgingCharges = other.MasterFolioAccruesLodgingCharges;
      }
      if (other.MasterFolioAccruesIncidentalCharges != false) {
        MasterFolioAccruesIncidentalCharges = other.MasterFolioAccruesIncidentalCharges;
      }
      if (other.remainingTenderRequiredForGuarantee_ != null) {
        if (remainingTenderRequiredForGuarantee_ == null) {
          remainingTenderRequiredForGuarantee_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        RemainingTenderRequiredForGuarantee.MergeFrom(other.RemainingTenderRequiredForGuarantee);
      }
      if (other.totalMasterCharges_ != null) {
        if (totalMasterCharges_ == null) {
          totalMasterCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        TotalMasterCharges.MergeFrom(other.TotalMasterCharges);
      }
      if (other.totalMasterTaxes_ != null) {
        if (totalMasterTaxes_ == null) {
          totalMasterTaxes_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        TotalMasterTaxes.MergeFrom(other.TotalMasterTaxes);
      }
      if (other.totalMasterFees_ != null) {
        if (totalMasterFees_ == null) {
          totalMasterFees_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        TotalMasterFees.MergeFrom(other.TotalMasterFees);
      }
      if (other.maxRefund_ != null) {
        if (maxRefund_ == null) {
          maxRefund_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        MaxRefund.MergeFrom(other.MaxRefund);
      }
      if (other.IsGuaranteeByMaster != false) {
        IsGuaranteeByMaster = other.IsGuaranteeByMaster;
      }
      if (other.IsGuaranteedByGroupBooking != false) {
        IsGuaranteedByGroupBooking = other.IsGuaranteedByGroupBooking;
      }
      verifiedCard_.Add(other.verifiedCard_);
      if (other.BookingNumber.Length != 0) {
        BookingNumber = other.BookingNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            effectiveCharges_.AddEntriesFrom(input, _repeated_effectiveCharges_codec);
            break;
          }
          case 18: {
            cardRefunds_.AddEntriesFrom(input, _repeated_cardRefunds_codec);
            break;
          }
          case 26: {
            cardSales_.AddEntriesFrom(input, _repeated_cardSales_codec);
            break;
          }
          case 34: {
            checkCashPayments_.AddEntriesFrom(input, _repeated_checkCashPayments_codec);
            break;
          }
          case 42: {
            currentTaxAssessments_.AddEntriesFrom(input, _repeated_currentTaxAssessments_codec);
            break;
          }
          case 50: {
            anticipatedEndingTaxAssessment_.AddEntriesFrom(input, _repeated_anticipatedEndingTaxAssessment_codec);
            break;
          }
          case 58: {
            nativeCharges_.AddEntriesFrom(input, _repeated_nativeCharges_codec);
            break;
          }
          case 66: {
            exportedToOtherFolioCharges_.AddEntriesFrom(input, _repeated_exportedToOtherFolioCharges_codec);
            break;
          }
          case 74: {
            importedFromOtherFolioCharges_.AddEntriesFrom(input, _repeated_importedFromOtherFolioCharges_codec);
            break;
          }
          case 82: {
            if (currentCharges_ == null) {
              currentCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(currentCharges_);
            break;
          }
          case 90: {
            if (anticipatedCharges_ == null) {
              anticipatedCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(anticipatedCharges_);
            break;
          }
          case 98: {
            if (postedPayments_ == null) {
              postedPayments_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(postedPayments_);
            break;
          }
          case 106: {
            if (postedRefunds_ == null) {
              postedRefunds_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(postedRefunds_);
            break;
          }
          case 130: {
            if (unusedPaymentAuthorizations_ == null) {
              unusedPaymentAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(unusedPaymentAuthorizations_);
            break;
          }
          case 138: {
            if (unusedGuaranteeAuthorizations_ == null) {
              unusedGuaranteeAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(unusedGuaranteeAuthorizations_);
            break;
          }
          case 146: {
            if (currentDueFromGuest_ == null) {
              currentDueFromGuest_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(currentDueFromGuest_);
            break;
          }
          case 154: {
            if (anticipatedCheckoutDueFromGuest_ == null) {
              anticipatedCheckoutDueFromGuest_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(anticipatedCheckoutDueFromGuest_);
            break;
          }
          case 160: {
            GracefulClosurePossible = input.ReadBool();
            break;
          }
          case 170: {
            if (summary_ == null) {
              summary_ = new global::HOLMS.Types.Folio.ReservationFolioSummary();
            }
            input.ReadMessage(summary_);
            break;
          }
          case 176: {
            MasterFolioAccruesLodgingCharges = input.ReadBool();
            break;
          }
          case 184: {
            MasterFolioAccruesIncidentalCharges = input.ReadBool();
            break;
          }
          case 194: {
            if (remainingTenderRequiredForGuarantee_ == null) {
              remainingTenderRequiredForGuarantee_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(remainingTenderRequiredForGuarantee_);
            break;
          }
          case 202: {
            if (totalMasterCharges_ == null) {
              totalMasterCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(totalMasterCharges_);
            break;
          }
          case 210: {
            if (totalMasterTaxes_ == null) {
              totalMasterTaxes_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(totalMasterTaxes_);
            break;
          }
          case 218: {
            if (totalMasterFees_ == null) {
              totalMasterFees_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(totalMasterFees_);
            break;
          }
          case 226: {
            if (maxRefund_ == null) {
              maxRefund_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(maxRefund_);
            break;
          }
          case 232: {
            IsGuaranteeByMaster = input.ReadBool();
            break;
          }
          case 240: {
            IsGuaranteedByGroupBooking = input.ReadBool();
            break;
          }
          case 250: {
            verifiedCard_.AddEntriesFrom(input, _repeated_verifiedCard_codec);
            break;
          }
          case 258: {
            BookingNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
