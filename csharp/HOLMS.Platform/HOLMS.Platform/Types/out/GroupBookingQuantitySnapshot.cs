// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/snapshot/group_booking_quantity_snapshot.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.Snapshot {

  /// <summary>Holder for reflection information generated from supply/snapshot/group_booking_quantity_snapshot.proto</summary>
  public static partial class GroupBookingQuantitySnapshotReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/snapshot/group_booking_quantity_snapshot.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupBookingQuantitySnapshotReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVzdXBwbHkvc25hcHNob3QvZ3JvdXBfYm9va2luZ19xdWFudGl0eV9zbmFw",
            "c2hvdC5wcm90bxIbaG9sbXMudHlwZXMuc3VwcGx5LnNuYXBzaG90GjBib29r",
            "aW5nL2luZGljYXRvcnMvZ3JvdXBfYm9va2luZ19pbmRpY2F0b3IucHJvdG8i",
            "mwEKHEdyb3VwQm9va2luZ1F1YW50aXR5U25hcHNob3QSRgoHYm9va2luZxgB",
            "IAEoCzI1LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5Hcm91cEJv",
            "b2tpbmdJbmRpY2F0b3ISGQoRdG90YWxfaG9sZF9uaWdodHMYAiABKAUSGAoQ",
            "dXNlZF9ob2xkX25pZ2h0cxgDIAEoBUIeqgIbSE9MTVMuVHlwZXMuU3VwcGx5",
            "LlNuYXBzaG90YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.GroupBookingIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.Snapshot.GroupBookingQuantitySnapshot), global::HOLMS.Types.Supply.Snapshot.GroupBookingQuantitySnapshot.Parser, new[]{ "Booking", "TotalHoldNights", "UsedHoldNights" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GroupBookingQuantitySnapshot : pb::IMessage<GroupBookingQuantitySnapshot> {
    private static readonly pb::MessageParser<GroupBookingQuantitySnapshot> _parser = new pb::MessageParser<GroupBookingQuantitySnapshot>(() => new GroupBookingQuantitySnapshot());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingQuantitySnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.Snapshot.GroupBookingQuantitySnapshotReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingQuantitySnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingQuantitySnapshot(GroupBookingQuantitySnapshot other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      totalHoldNights_ = other.totalHoldNights_;
      usedHoldNights_ = other.usedHoldNights_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingQuantitySnapshot Clone() {
      return new GroupBookingQuantitySnapshot(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "total_hold_nights" field.</summary>
    public const int TotalHoldNightsFieldNumber = 2;
    private int totalHoldNights_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalHoldNights {
      get { return totalHoldNights_; }
      set {
        totalHoldNights_ = value;
      }
    }

    /// <summary>Field number for the "used_hold_nights" field.</summary>
    public const int UsedHoldNightsFieldNumber = 3;
    private int usedHoldNights_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsedHoldNights {
      get { return usedHoldNights_; }
      set {
        usedHoldNights_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingQuantitySnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingQuantitySnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (TotalHoldNights != other.TotalHoldNights) return false;
      if (UsedHoldNights != other.UsedHoldNights) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (TotalHoldNights != 0) hash ^= TotalHoldNights.GetHashCode();
      if (UsedHoldNights != 0) hash ^= UsedHoldNights.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (TotalHoldNights != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TotalHoldNights);
      }
      if (UsedHoldNights != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UsedHoldNights);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (TotalHoldNights != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalHoldNights);
      }
      if (UsedHoldNights != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsedHoldNights);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingQuantitySnapshot other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.TotalHoldNights != 0) {
        TotalHoldNights = other.TotalHoldNights;
      }
      if (other.UsedHoldNights != 0) {
        UsedHoldNights = other.UsedHoldNights;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 16: {
            TotalHoldNights = input.ReadInt32();
            break;
          }
          case 24: {
            UsedHoldNights = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
