// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/checkout/checkout_candidate_viability.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Checkout {

  /// <summary>Holder for reflection information generated from booking/checkout/checkout_candidate_viability.proto</summary>
  public static partial class CheckoutCandidateViabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/checkout/checkout_candidate_viability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CheckoutCandidateViabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNib29raW5nL2NoZWNrb3V0L2NoZWNrb3V0X2NhbmRpZGF0ZV92aWFiaWxp",
            "dHkucHJvdG8SHGhvbG1zLnR5cGVzLmJvb2tpbmcuY2hlY2tvdXQaPGJvb2tp",
            "bmcvY2hlY2tvdXQvZGVwYXJ0dXJlX2RhdGVfY2hlY2tvdXRfYWNjZXB0aWJp",
            "bGl0eS5wcm90bxouYm9va2luZy9pbmRpY2F0b3JzL3Jlc2VydmF0aW9uX2lu",
            "ZGljYXRvci5wcm90bxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90",
            "byKyAgoaQ2hlY2tvdXRDYW5kaWRhdGVWaWFiaWxpdHkSSQoLcmVzZXJ2YXRp",
            "b24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVz",
            "ZXJ2YXRpb25JbmRpY2F0b3ISXAoSZGF0ZV9hY2NlcHRpYmlsaXR5GAIgASgO",
            "MkAuaG9sbXMudHlwZXMuYm9va2luZy5jaGVja291dC5EZXBhcnR1cmVEYXRl",
            "Q2hlY2tvdXRBY2NlcHRpYmlsaXR5EjwKDWZvbGlvX2JhbGFuY2UYAyABKAsy",
            "JS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSLQolZm9s",
            "aW9fYmFsYW5jZV9hY2NlcHRpYmxlX2Zvcl9jaGVja291dBgEIAEoCEIfqgIc",
            "SE9MTVMuVHlwZXMuQm9va2luZy5DaGVja291dGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Checkout.DepartureDateCheckoutAcceptibilityReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Checkout.CheckoutCandidateViability), global::HOLMS.Types.Booking.Checkout.CheckoutCandidateViability.Parser, new[]{ "Reservation", "DateAcceptibility", "FolioBalance", "FolioBalanceAcceptibleForCheckout" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CheckoutCandidateViability : pb::IMessage<CheckoutCandidateViability> {
    private static readonly pb::MessageParser<CheckoutCandidateViability> _parser = new pb::MessageParser<CheckoutCandidateViability>(() => new CheckoutCandidateViability());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckoutCandidateViability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Checkout.CheckoutCandidateViabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutCandidateViability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutCandidateViability(CheckoutCandidateViability other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      dateAcceptibility_ = other.dateAcceptibility_;
      FolioBalance = other.folioBalance_ != null ? other.FolioBalance.Clone() : null;
      folioBalanceAcceptibleForCheckout_ = other.folioBalanceAcceptibleForCheckout_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckoutCandidateViability Clone() {
      return new CheckoutCandidateViability(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "date_acceptibility" field.</summary>
    public const int DateAcceptibilityFieldNumber = 2;
    private global::HOLMS.Types.Booking.Checkout.DepartureDateCheckoutAcceptibility dateAcceptibility_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Checkout.DepartureDateCheckoutAcceptibility DateAcceptibility {
      get { return dateAcceptibility_; }
      set {
        dateAcceptibility_ = value;
      }
    }

    /// <summary>Field number for the "folio_balance" field.</summary>
    public const int FolioBalanceFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount folioBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount FolioBalance {
      get { return folioBalance_; }
      set {
        folioBalance_ = value;
      }
    }

    /// <summary>Field number for the "folio_balance_acceptible_for_checkout" field.</summary>
    public const int FolioBalanceAcceptibleForCheckoutFieldNumber = 4;
    private bool folioBalanceAcceptibleForCheckout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FolioBalanceAcceptibleForCheckout {
      get { return folioBalanceAcceptibleForCheckout_; }
      set {
        folioBalanceAcceptibleForCheckout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckoutCandidateViability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckoutCandidateViability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (DateAcceptibility != other.DateAcceptibility) return false;
      if (!object.Equals(FolioBalance, other.FolioBalance)) return false;
      if (FolioBalanceAcceptibleForCheckout != other.FolioBalanceAcceptibleForCheckout) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (DateAcceptibility != 0) hash ^= DateAcceptibility.GetHashCode();
      if (folioBalance_ != null) hash ^= FolioBalance.GetHashCode();
      if (FolioBalanceAcceptibleForCheckout != false) hash ^= FolioBalanceAcceptibleForCheckout.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (DateAcceptibility != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DateAcceptibility);
      }
      if (folioBalance_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FolioBalance);
      }
      if (FolioBalanceAcceptibleForCheckout != false) {
        output.WriteRawTag(32);
        output.WriteBool(FolioBalanceAcceptibleForCheckout);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (DateAcceptibility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DateAcceptibility);
      }
      if (folioBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolioBalance);
      }
      if (FolioBalanceAcceptibleForCheckout != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckoutCandidateViability other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.DateAcceptibility != 0) {
        DateAcceptibility = other.DateAcceptibility;
      }
      if (other.folioBalance_ != null) {
        if (folioBalance_ == null) {
          folioBalance_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        FolioBalance.MergeFrom(other.FolioBalance);
      }
      if (other.FolioBalanceAcceptibleForCheckout != false) {
        FolioBalanceAcceptibleForCheckout = other.FolioBalanceAcceptibleForCheckout;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 16: {
            dateAcceptibility_ = (global::HOLMS.Types.Booking.Checkout.DepartureDateCheckoutAcceptibility) input.ReadEnum();
            break;
          }
          case 26: {
            if (folioBalance_ == null) {
              folioBalance_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(folioBalance_);
            break;
          }
          case 32: {
            FolioBalanceAcceptibleForCheckout = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
