// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/taxed_reservation_quote.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio {

  /// <summary>Holder for reflection information generated from folio/taxed_reservation_quote.proto</summary>
  public static partial class TaxedReservationQuoteReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/taxed_reservation_quote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TaxedReservationQuoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNmb2xpby90YXhlZF9yZXNlcnZhdGlvbl9xdW90ZS5wcm90bxIRaG9sbXMu",
            "dHlwZXMuZm9saW8aH3ByaW1pdGl2ZS9tb25ldGFyeV9hbW91bnQucHJvdG8a",
            "GmZvbGlvL3RheF9hc3Nlc3NtZW50LnByb3RvGitmb2xpby90YXhlZF9yZXNl",
            "cnZhdGlvbl9uaWdodGx5X3F1b3RlLnByb3RvGjZmb2xpby90YXhlZF9pbmNp",
            "ZGVudGFsX3Jlc2VydmF0aW9uX25pZ2h0bHlfcXVvdGUucHJvdG8aLmJvb2tp",
            "bmcvaW5kaWNhdG9ycy9yZXNlcnZhdGlvbl9pbmRpY2F0b3IucHJvdG8i9QMK",
            "FVRheGVkUmVzZXJ2YXRpb25RdW90ZRJHCg5sb2RnaW5nX3F1b3RlcxgBIAMo",
            "CzIvLmhvbG1zLnR5cGVzLmZvbGlvLlRheGVkUmVzZXJ2YXRpb25OaWdodGx5",
            "UXVvdGUSVAoRaW5jaWRlbnRhbF9xdW90ZXMYAiADKAsyOS5ob2xtcy50eXBl",
            "cy5mb2xpby5UYXhlZEluY2lkZW50YWxSZXNlcnZhdGlvbk5pZ2h0bHlRdW90",
            "ZRJMCh1wcmV0YXhfbG9kZ2luZ19wcmljZV9zdWJ0b3RhbBgDIAEoCzIlLmhv",
            "bG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBJPCiBwcmV0YXhf",
            "aW5jaWRlbnRhbF9wcmljZV9zdWJ0b3RhbBgEIAEoCzIlLmhvbG1zLnR5cGVz",
            "LnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI5Cg90YXhfYXNzZXNzbWVudHMY",
            "BSADKAsyIC5ob2xtcy50eXBlcy5mb2xpby5UYXhBc3Nlc3NtZW50EkkKC3Jl",
            "c2VydmF0aW9uGAYgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0",
            "b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yEhgKEHJlc2VydmF0aW9uX3RhZ3MY",
            "ByADKAlCG1oFZm9saW+qAhFIT0xNUy5UeXBlcy5Gb2xpb2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Folio.TaxAssessmentReflection.Descriptor, global::HOLMS.Types.Folio.TaxedReservationNightlyQuoteReflection.Descriptor, global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuoteReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.TaxedReservationQuote), global::HOLMS.Types.Folio.TaxedReservationQuote.Parser, new[]{ "LodgingQuotes", "IncidentalQuotes", "PretaxLodgingPriceSubtotal", "PretaxIncidentalPriceSubtotal", "TaxAssessments", "Reservation", "ReservationTags" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TaxedReservationQuote : pb::IMessage<TaxedReservationQuote> {
    private static readonly pb::MessageParser<TaxedReservationQuote> _parser = new pb::MessageParser<TaxedReservationQuote>(() => new TaxedReservationQuote());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxedReservationQuote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.TaxedReservationQuoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxedReservationQuote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxedReservationQuote(TaxedReservationQuote other) : this() {
      lodgingQuotes_ = other.lodgingQuotes_.Clone();
      incidentalQuotes_ = other.incidentalQuotes_.Clone();
      PretaxLodgingPriceSubtotal = other.pretaxLodgingPriceSubtotal_ != null ? other.PretaxLodgingPriceSubtotal.Clone() : null;
      PretaxIncidentalPriceSubtotal = other.pretaxIncidentalPriceSubtotal_ != null ? other.PretaxIncidentalPriceSubtotal.Clone() : null;
      taxAssessments_ = other.taxAssessments_.Clone();
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      reservationTags_ = other.reservationTags_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxedReservationQuote Clone() {
      return new TaxedReservationQuote(this);
    }

    /// <summary>Field number for the "lodging_quotes" field.</summary>
    public const int LodgingQuotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote> _repeated_lodgingQuotes_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.TaxedReservationNightlyQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote> lodgingQuotes_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote> LodgingQuotes {
      get { return lodgingQuotes_; }
    }

    /// <summary>Field number for the "incidental_quotes" field.</summary>
    public const int IncidentalQuotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote> _repeated_incidentalQuotes_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote> incidentalQuotes_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote> IncidentalQuotes {
      get { return incidentalQuotes_; }
    }

    /// <summary>Field number for the "pretax_lodging_price_subtotal" field.</summary>
    public const int PretaxLodgingPriceSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount pretaxLodgingPriceSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PretaxLodgingPriceSubtotal {
      get { return pretaxLodgingPriceSubtotal_; }
      set {
        pretaxLodgingPriceSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "pretax_incidental_price_subtotal" field.</summary>
    public const int PretaxIncidentalPriceSubtotalFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount pretaxIncidentalPriceSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PretaxIncidentalPriceSubtotal {
      get { return pretaxIncidentalPriceSubtotal_; }
      set {
        pretaxIncidentalPriceSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "tax_assessments" field.</summary>
    public const int TaxAssessmentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxAssessment> _repeated_taxAssessments_codec
        = pb::FieldCodec.ForMessage(42, global::HOLMS.Types.Folio.TaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> taxAssessments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> TaxAssessments {
      get { return taxAssessments_; }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 6;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "reservation_tags" field.</summary>
    public const int ReservationTagsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_reservationTags_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> reservationTags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReservationTags {
      get { return reservationTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxedReservationQuote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxedReservationQuote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lodgingQuotes_.Equals(other.lodgingQuotes_)) return false;
      if(!incidentalQuotes_.Equals(other.incidentalQuotes_)) return false;
      if (!object.Equals(PretaxLodgingPriceSubtotal, other.PretaxLodgingPriceSubtotal)) return false;
      if (!object.Equals(PretaxIncidentalPriceSubtotal, other.PretaxIncidentalPriceSubtotal)) return false;
      if(!taxAssessments_.Equals(other.taxAssessments_)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if(!reservationTags_.Equals(other.reservationTags_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lodgingQuotes_.GetHashCode();
      hash ^= incidentalQuotes_.GetHashCode();
      if (pretaxLodgingPriceSubtotal_ != null) hash ^= PretaxLodgingPriceSubtotal.GetHashCode();
      if (pretaxIncidentalPriceSubtotal_ != null) hash ^= PretaxIncidentalPriceSubtotal.GetHashCode();
      hash ^= taxAssessments_.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      hash ^= reservationTags_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lodgingQuotes_.WriteTo(output, _repeated_lodgingQuotes_codec);
      incidentalQuotes_.WriteTo(output, _repeated_incidentalQuotes_codec);
      if (pretaxLodgingPriceSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PretaxLodgingPriceSubtotal);
      }
      if (pretaxIncidentalPriceSubtotal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PretaxIncidentalPriceSubtotal);
      }
      taxAssessments_.WriteTo(output, _repeated_taxAssessments_codec);
      if (reservation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Reservation);
      }
      reservationTags_.WriteTo(output, _repeated_reservationTags_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lodgingQuotes_.CalculateSize(_repeated_lodgingQuotes_codec);
      size += incidentalQuotes_.CalculateSize(_repeated_incidentalQuotes_codec);
      if (pretaxLodgingPriceSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PretaxLodgingPriceSubtotal);
      }
      if (pretaxIncidentalPriceSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PretaxIncidentalPriceSubtotal);
      }
      size += taxAssessments_.CalculateSize(_repeated_taxAssessments_codec);
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      size += reservationTags_.CalculateSize(_repeated_reservationTags_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxedReservationQuote other) {
      if (other == null) {
        return;
      }
      lodgingQuotes_.Add(other.lodgingQuotes_);
      incidentalQuotes_.Add(other.incidentalQuotes_);
      if (other.pretaxLodgingPriceSubtotal_ != null) {
        if (pretaxLodgingPriceSubtotal_ == null) {
          pretaxLodgingPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PretaxLodgingPriceSubtotal.MergeFrom(other.PretaxLodgingPriceSubtotal);
      }
      if (other.pretaxIncidentalPriceSubtotal_ != null) {
        if (pretaxIncidentalPriceSubtotal_ == null) {
          pretaxIncidentalPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PretaxIncidentalPriceSubtotal.MergeFrom(other.PretaxIncidentalPriceSubtotal);
      }
      taxAssessments_.Add(other.taxAssessments_);
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      reservationTags_.Add(other.reservationTags_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lodgingQuotes_.AddEntriesFrom(input, _repeated_lodgingQuotes_codec);
            break;
          }
          case 18: {
            incidentalQuotes_.AddEntriesFrom(input, _repeated_incidentalQuotes_codec);
            break;
          }
          case 26: {
            if (pretaxLodgingPriceSubtotal_ == null) {
              pretaxLodgingPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(pretaxLodgingPriceSubtotal_);
            break;
          }
          case 34: {
            if (pretaxIncidentalPriceSubtotal_ == null) {
              pretaxIncidentalPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(pretaxIncidentalPriceSubtotal_);
            break;
          }
          case 42: {
            taxAssessments_.AddEntriesFrom(input, _repeated_taxAssessments_codec);
            break;
          }
          case 50: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 58: {
            reservationTags_.AddEntriesFrom(input, _repeated_reservationTags_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
