// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/taxed_reservation_quote.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio {

  /// <summary>Holder for reflection information generated from folio/taxed_reservation_quote.proto</summary>
  public static partial class TaxedReservationQuoteReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/taxed_reservation_quote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TaxedReservationQuoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNmb2xpby90YXhlZF9yZXNlcnZhdGlvbl9xdW90ZS5wcm90bxIRaG9sbXMu",
            "dHlwZXMuZm9saW8aH3ByaW1pdGl2ZS9tb25ldGFyeV9hbW91bnQucHJvdG8a",
            "GWZvbGlvL3RheF9mZWVfcXVvdGUucHJvdG8aK2ZvbGlvL3RheGVkX3Jlc2Vy",
            "dmF0aW9uX25pZ2h0bHlfcXVvdGUucHJvdG8aNmZvbGlvL3RheGVkX2luY2lk",
            "ZW50YWxfcmVzZXJ2YXRpb25fbmlnaHRseV9xdW90ZS5wcm90bxouYm9va2lu",
            "Zy9pbmRpY2F0b3JzL3Jlc2VydmF0aW9uX2luZGljYXRvci5wcm90byLKAwoV",
            "VGF4ZWRSZXNlcnZhdGlvblF1b3RlEkcKDmxvZGdpbmdfcXVvdGVzGAEgAygL",
            "Mi8uaG9sbXMudHlwZXMuZm9saW8uVGF4ZWRSZXNlcnZhdGlvbk5pZ2h0bHlR",
            "dW90ZRJUChFpbmNpZGVudGFsX3F1b3RlcxgCIAMoCzI5LmhvbG1zLnR5cGVz",
            "LmZvbGlvLlRheGVkSW5jaWRlbnRhbFJlc2VydmF0aW9uTmlnaHRseVF1b3Rl",
            "EkUKFmxvZGdpbmdfcHJpY2Vfc3VidG90YWwYAyABKAsyJS5ob2xtcy50eXBl",
            "cy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSSAoZaW5jaWRlbnRhbF9wcmlj",
            "ZV9zdWJ0b3RhbBgEIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25l",
            "dGFyeUFtb3VudBI2Cg50YXhfZmVlX3RvdGFscxgFIAMoCzIeLmhvbG1zLnR5",
            "cGVzLmZvbGlvLlRheEZlZVF1b3RlEkkKC3Jlc2VydmF0aW9uGAYgASgLMjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5k",
            "aWNhdG9yQhtaBWZvbGlvqgIRSE9MTVMuVHlwZXMuRm9saW9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Folio.TaxFeeQuoteReflection.Descriptor, global::HOLMS.Types.Folio.TaxedReservationNightlyQuoteReflection.Descriptor, global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuoteReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.TaxedReservationQuote), global::HOLMS.Types.Folio.TaxedReservationQuote.Parser, new[]{ "LodgingQuotes", "IncidentalQuotes", "LodgingPriceSubtotal", "IncidentalPriceSubtotal", "TaxFeeTotals", "Reservation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TaxedReservationQuote : pb::IMessage<TaxedReservationQuote> {
    private static readonly pb::MessageParser<TaxedReservationQuote> _parser = new pb::MessageParser<TaxedReservationQuote>(() => new TaxedReservationQuote());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxedReservationQuote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.TaxedReservationQuoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxedReservationQuote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxedReservationQuote(TaxedReservationQuote other) : this() {
      lodgingQuotes_ = other.lodgingQuotes_.Clone();
      incidentalQuotes_ = other.incidentalQuotes_.Clone();
      LodgingPriceSubtotal = other.lodgingPriceSubtotal_ != null ? other.LodgingPriceSubtotal.Clone() : null;
      IncidentalPriceSubtotal = other.incidentalPriceSubtotal_ != null ? other.IncidentalPriceSubtotal.Clone() : null;
      taxFeeTotals_ = other.taxFeeTotals_.Clone();
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxedReservationQuote Clone() {
      return new TaxedReservationQuote(this);
    }

    /// <summary>Field number for the "lodging_quotes" field.</summary>
    public const int LodgingQuotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote> _repeated_lodgingQuotes_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.TaxedReservationNightlyQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote> lodgingQuotes_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedReservationNightlyQuote> LodgingQuotes {
      get { return lodgingQuotes_; }
    }

    /// <summary>Field number for the "incidental_quotes" field.</summary>
    public const int IncidentalQuotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote> _repeated_incidentalQuotes_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote> incidentalQuotes_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxedIncidentalReservationNightlyQuote> IncidentalQuotes {
      get { return incidentalQuotes_; }
    }

    /// <summary>Field number for the "lodging_price_subtotal" field.</summary>
    public const int LodgingPriceSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount lodgingPriceSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount LodgingPriceSubtotal {
      get { return lodgingPriceSubtotal_; }
      set {
        lodgingPriceSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "incidental_price_subtotal" field.</summary>
    public const int IncidentalPriceSubtotalFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount incidentalPriceSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount IncidentalPriceSubtotal {
      get { return incidentalPriceSubtotal_; }
      set {
        incidentalPriceSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "tax_fee_totals" field.</summary>
    public const int TaxFeeTotalsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxFeeQuote> _repeated_taxFeeTotals_codec
        = pb::FieldCodec.ForMessage(42, global::HOLMS.Types.Folio.TaxFeeQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxFeeQuote> taxFeeTotals_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxFeeQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxFeeQuote> TaxFeeTotals {
      get { return taxFeeTotals_; }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 6;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxedReservationQuote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxedReservationQuote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lodgingQuotes_.Equals(other.lodgingQuotes_)) return false;
      if(!incidentalQuotes_.Equals(other.incidentalQuotes_)) return false;
      if (!object.Equals(LodgingPriceSubtotal, other.LodgingPriceSubtotal)) return false;
      if (!object.Equals(IncidentalPriceSubtotal, other.IncidentalPriceSubtotal)) return false;
      if(!taxFeeTotals_.Equals(other.taxFeeTotals_)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lodgingQuotes_.GetHashCode();
      hash ^= incidentalQuotes_.GetHashCode();
      if (lodgingPriceSubtotal_ != null) hash ^= LodgingPriceSubtotal.GetHashCode();
      if (incidentalPriceSubtotal_ != null) hash ^= IncidentalPriceSubtotal.GetHashCode();
      hash ^= taxFeeTotals_.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lodgingQuotes_.WriteTo(output, _repeated_lodgingQuotes_codec);
      incidentalQuotes_.WriteTo(output, _repeated_incidentalQuotes_codec);
      if (lodgingPriceSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LodgingPriceSubtotal);
      }
      if (incidentalPriceSubtotal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(IncidentalPriceSubtotal);
      }
      taxFeeTotals_.WriteTo(output, _repeated_taxFeeTotals_codec);
      if (reservation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lodgingQuotes_.CalculateSize(_repeated_lodgingQuotes_codec);
      size += incidentalQuotes_.CalculateSize(_repeated_incidentalQuotes_codec);
      if (lodgingPriceSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LodgingPriceSubtotal);
      }
      if (incidentalPriceSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalPriceSubtotal);
      }
      size += taxFeeTotals_.CalculateSize(_repeated_taxFeeTotals_codec);
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxedReservationQuote other) {
      if (other == null) {
        return;
      }
      lodgingQuotes_.Add(other.lodgingQuotes_);
      incidentalQuotes_.Add(other.incidentalQuotes_);
      if (other.lodgingPriceSubtotal_ != null) {
        if (lodgingPriceSubtotal_ == null) {
          lodgingPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        LodgingPriceSubtotal.MergeFrom(other.LodgingPriceSubtotal);
      }
      if (other.incidentalPriceSubtotal_ != null) {
        if (incidentalPriceSubtotal_ == null) {
          incidentalPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        IncidentalPriceSubtotal.MergeFrom(other.IncidentalPriceSubtotal);
      }
      taxFeeTotals_.Add(other.taxFeeTotals_);
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            lodgingQuotes_.AddEntriesFrom(input, _repeated_lodgingQuotes_codec);
            break;
          }
          case 18: {
            incidentalQuotes_.AddEntriesFrom(input, _repeated_incidentalQuotes_codec);
            break;
          }
          case 26: {
            if (lodgingPriceSubtotal_ == null) {
              lodgingPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(lodgingPriceSubtotal_);
            break;
          }
          case 34: {
            if (incidentalPriceSubtotal_ == null) {
              incidentalPriceSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(incidentalPriceSubtotal_);
            break;
          }
          case 42: {
            taxFeeTotals_.AddEntriesFrom(input, _repeated_taxFeeTotals_codec);
            break;
          }
          case 50: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
