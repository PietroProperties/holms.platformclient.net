// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/booking_pricing_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.Booking.RPC {
  public static partial class BookingPricingSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.BookingPricingSvc";

    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO> __Marshaller_GenesisPriceEstimateRequestDTO = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> __Marshaller_ReservationPriceEstimate = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest> __Marshaller_OpenPriceEstimateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> __Marshaller_ReservationIndicator = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Indicators.ReservationIndicator.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule> __Marshaller_OverridePriceSchedule = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Pricing.OverrideRequest> __Marshaller_OverrideRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Pricing.OverrideRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> __Method_EstimateGenesisReservation = new grpc::Method<global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateGenesisReservation",
        __Marshaller_GenesisPriceEstimateRequestDTO,
        __Marshaller_ReservationPriceEstimate);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> __Method_EstimateOpenReservation = new grpc::Method<global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateOpenReservation",
        __Marshaller_OpenPriceEstimateRequest,
        __Marshaller_ReservationPriceEstimate);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule> __Method_GetOverridesSchedule = new grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOverridesSchedule",
        __Marshaller_ReservationIndicator,
        __Marshaller_OverridePriceSchedule);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Pricing.OverrideRequest, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> __Method_EstimateForOverrides = new grpc::Method<global::HOLMS.Types.Booking.Pricing.OverrideRequest, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateForOverrides",
        __Marshaller_OverrideRequest,
        __Marshaller_ReservationPriceEstimate);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Pricing.OverrideRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ExecutePriceOverride = new grpc::Method<global::HOLMS.Types.Booking.Pricing.OverrideRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecutePriceOverride",
        __Marshaller_OverrideRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> __Method_EstimateOpenReservationAsIs = new grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateOpenReservationAsIs",
        __Marshaller_ReservationIndicator,
        __Marshaller_ReservationPriceEstimate);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Booking.RPC.BookingPricingSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BookingPricingSvc</summary>
    public abstract partial class BookingPricingSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateGenesisReservation(global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateOpenReservation(global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule> GetOverridesSchedule(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateForOverrides(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ExecutePriceOverride(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateOpenReservationAsIs(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BookingPricingSvc</summary>
    public partial class BookingPricingSvcClient : grpc::ClientBase<BookingPricingSvcClient>
    {
      /// <summary>Creates a new client for BookingPricingSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BookingPricingSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BookingPricingSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BookingPricingSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BookingPricingSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BookingPricingSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateGenesisReservation(global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateGenesisReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateGenesisReservation(global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateGenesisReservation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateGenesisReservationAsync(global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateGenesisReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateGenesisReservationAsync(global::HOLMS.Types.Booking.Pricing.GenesisPriceEstimateRequestDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateGenesisReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateOpenReservation(global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateOpenReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateOpenReservation(global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateOpenReservation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateOpenReservationAsync(global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateOpenReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateOpenReservationAsync(global::HOLMS.Types.Booking.Pricing.OpenPriceEstimateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateOpenReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule GetOverridesSchedule(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOverridesSchedule(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule GetOverridesSchedule(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOverridesSchedule, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule> GetOverridesScheduleAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOverridesScheduleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.OverridePriceSchedule> GetOverridesScheduleAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOverridesSchedule, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateForOverrides(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateForOverrides(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateForOverrides(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateForOverrides, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateForOverridesAsync(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateForOverridesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateForOverridesAsync(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateForOverrides, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ExecutePriceOverride(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExecutePriceOverride(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ExecutePriceOverride(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecutePriceOverride, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ExecutePriceOverrideAsync(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExecutePriceOverrideAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ExecutePriceOverrideAsync(global::HOLMS.Types.Booking.Pricing.OverrideRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecutePriceOverride, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateOpenReservationAsIs(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateOpenReservationAsIs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate EstimateOpenReservationAsIs(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateOpenReservationAsIs, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateOpenReservationAsIsAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateOpenReservationAsIsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Pricing.ReservationPriceEstimate> EstimateOpenReservationAsIsAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateOpenReservationAsIs, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BookingPricingSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BookingPricingSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(BookingPricingSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_EstimateGenesisReservation, serviceImpl.EstimateGenesisReservation)
          .AddMethod(__Method_EstimateOpenReservation, serviceImpl.EstimateOpenReservation)
          .AddMethod(__Method_GetOverridesSchedule, serviceImpl.GetOverridesSchedule)
          .AddMethod(__Method_EstimateForOverrides, serviceImpl.EstimateForOverrides)
          .AddMethod(__Method_ExecutePriceOverride, serviceImpl.ExecutePriceOverride)
          .AddMethod(__Method_EstimateOpenReservationAsIs, serviceImpl.EstimateOpenReservationAsIs).Build();
    }

  }
}
#endregion
