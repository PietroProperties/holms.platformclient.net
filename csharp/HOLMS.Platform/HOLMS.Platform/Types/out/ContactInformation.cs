// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitive/contact_information.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Primitive {

  /// <summary>Holder for reflection information generated from primitive/contact_information.proto</summary>
  public static partial class ContactInformationReflection {

    #region Descriptor
    /// <summary>File descriptor for primitive/contact_information.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContactInformationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNwcmltaXRpdmUvY29udGFjdF9pbmZvcm1hdGlvbi5wcm90bxIVaG9sbXMu",
            "dHlwZXMucHJpbWl0aXZlItQDChJDb250YWN0SW5mb3JtYXRpb24SEgoKZ2l2",
            "ZW5fbmFtZRgBIAEoCRIUCgxnaXZlbl9uYW1lXzIYAiABKAkSEwoLZmFtaWx5",
            "X25hbWUYAyABKAkSDQoFZW1haWwYBCABKAkSEgoKaG9tZV9waG9uZRgFIAEo",
            "CRIUCgxtb2JpbGVfcGhvbmUYBiABKAkSEgoKZmF4X251bWJlchgHIAEoCRIU",
            "CgxvZmZpY2VfcGhvbmUYCCABKAkSGAoQb2ZmaWNlX2FkZHJlc3NfMRgJIAEo",
            "CRIYChBvZmZpY2VfYWRkcmVzc18yGAogASgJEhMKC29mZmljZV9jaXR5GAsg",
            "ASgJEhQKDG9mZmljZV9zdGF0ZRgMIAEoCRISCgpvZmZpY2VfemlwGA0gASgJ",
            "EhUKDW9mZmljZV9uYXRpb24YDiABKAkSFgoOaG9tZV9hZGRyZXNzXzEYDyAB",
            "KAkSFgoOaG9tZV9hZGRyZXNzXzIYECABKAkSEQoJaG9tZV9jaXR5GBEgASgJ",
            "EhIKCmhvbWVfc3RhdGUYEiABKAkSEAoIaG9tZV96aXAYEyABKAkSEwoLaG9t",
            "ZV9uYXRpb24YFCABKAkSFAoMY29tcGFueV9uYW1lGBUgASgJQiNaCXByaW1p",
            "dGl2ZaoCFUhPTE1TLlR5cGVzLlByaW1pdGl2ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Primitive.ContactInformation), global::HOLMS.Types.Primitive.ContactInformation.Parser, new[]{ "GivenName", "GivenName2", "FamilyName", "Email", "HomePhone", "MobilePhone", "FaxNumber", "OfficePhone", "OfficeAddress1", "OfficeAddress2", "OfficeCity", "OfficeState", "OfficeZip", "OfficeNation", "HomeAddress1", "HomeAddress2", "HomeCity", "HomeState", "HomeZip", "HomeNation", "CompanyName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ContactInformation : pb::IMessage<ContactInformation> {
    private static readonly pb::MessageParser<ContactInformation> _parser = new pb::MessageParser<ContactInformation>(() => new ContactInformation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContactInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Primitive.ContactInformationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactInformation(ContactInformation other) : this() {
      givenName_ = other.givenName_;
      givenName2_ = other.givenName2_;
      familyName_ = other.familyName_;
      email_ = other.email_;
      homePhone_ = other.homePhone_;
      mobilePhone_ = other.mobilePhone_;
      faxNumber_ = other.faxNumber_;
      officePhone_ = other.officePhone_;
      officeAddress1_ = other.officeAddress1_;
      officeAddress2_ = other.officeAddress2_;
      officeCity_ = other.officeCity_;
      officeState_ = other.officeState_;
      officeZip_ = other.officeZip_;
      officeNation_ = other.officeNation_;
      homeAddress1_ = other.homeAddress1_;
      homeAddress2_ = other.homeAddress2_;
      homeCity_ = other.homeCity_;
      homeState_ = other.homeState_;
      homeZip_ = other.homeZip_;
      homeNation_ = other.homeNation_;
      companyName_ = other.companyName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContactInformation Clone() {
      return new ContactInformation(this);
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 1;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "given_name_2" field.</summary>
    public const int GivenName2FieldNumber = 2;
    private string givenName2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName2 {
      get { return givenName2_; }
      set {
        givenName2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 3;
    private string familyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_phone" field.</summary>
    public const int HomePhoneFieldNumber = 5;
    private string homePhone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomePhone {
      get { return homePhone_; }
      set {
        homePhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobile_phone" field.</summary>
    public const int MobilePhoneFieldNumber = 6;
    private string mobilePhone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobilePhone {
      get { return mobilePhone_; }
      set {
        mobilePhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fax_number" field.</summary>
    public const int FaxNumberFieldNumber = 7;
    private string faxNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaxNumber {
      get { return faxNumber_; }
      set {
        faxNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_phone" field.</summary>
    public const int OfficePhoneFieldNumber = 8;
    private string officePhone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficePhone {
      get { return officePhone_; }
      set {
        officePhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_address_1" field.</summary>
    public const int OfficeAddress1FieldNumber = 9;
    private string officeAddress1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficeAddress1 {
      get { return officeAddress1_; }
      set {
        officeAddress1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_address_2" field.</summary>
    public const int OfficeAddress2FieldNumber = 10;
    private string officeAddress2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficeAddress2 {
      get { return officeAddress2_; }
      set {
        officeAddress2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_city" field.</summary>
    public const int OfficeCityFieldNumber = 11;
    private string officeCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficeCity {
      get { return officeCity_; }
      set {
        officeCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_state" field.</summary>
    public const int OfficeStateFieldNumber = 12;
    private string officeState_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficeState {
      get { return officeState_; }
      set {
        officeState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_zip" field.</summary>
    public const int OfficeZipFieldNumber = 13;
    private string officeZip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficeZip {
      get { return officeZip_; }
      set {
        officeZip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "office_nation" field.</summary>
    public const int OfficeNationFieldNumber = 14;
    private string officeNation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfficeNation {
      get { return officeNation_; }
      set {
        officeNation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_address_1" field.</summary>
    public const int HomeAddress1FieldNumber = 15;
    private string homeAddress1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeAddress1 {
      get { return homeAddress1_; }
      set {
        homeAddress1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_address_2" field.</summary>
    public const int HomeAddress2FieldNumber = 16;
    private string homeAddress2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeAddress2 {
      get { return homeAddress2_; }
      set {
        homeAddress2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_city" field.</summary>
    public const int HomeCityFieldNumber = 17;
    private string homeCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeCity {
      get { return homeCity_; }
      set {
        homeCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_state" field.</summary>
    public const int HomeStateFieldNumber = 18;
    private string homeState_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeState {
      get { return homeState_; }
      set {
        homeState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_zip" field.</summary>
    public const int HomeZipFieldNumber = 19;
    private string homeZip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeZip {
      get { return homeZip_; }
      set {
        homeZip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "home_nation" field.</summary>
    public const int HomeNationFieldNumber = 20;
    private string homeNation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HomeNation {
      get { return homeNation_; }
      set {
        homeNation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "company_name" field.</summary>
    public const int CompanyNameFieldNumber = 21;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContactInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContactInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GivenName != other.GivenName) return false;
      if (GivenName2 != other.GivenName2) return false;
      if (FamilyName != other.FamilyName) return false;
      if (Email != other.Email) return false;
      if (HomePhone != other.HomePhone) return false;
      if (MobilePhone != other.MobilePhone) return false;
      if (FaxNumber != other.FaxNumber) return false;
      if (OfficePhone != other.OfficePhone) return false;
      if (OfficeAddress1 != other.OfficeAddress1) return false;
      if (OfficeAddress2 != other.OfficeAddress2) return false;
      if (OfficeCity != other.OfficeCity) return false;
      if (OfficeState != other.OfficeState) return false;
      if (OfficeZip != other.OfficeZip) return false;
      if (OfficeNation != other.OfficeNation) return false;
      if (HomeAddress1 != other.HomeAddress1) return false;
      if (HomeAddress2 != other.HomeAddress2) return false;
      if (HomeCity != other.HomeCity) return false;
      if (HomeState != other.HomeState) return false;
      if (HomeZip != other.HomeZip) return false;
      if (HomeNation != other.HomeNation) return false;
      if (CompanyName != other.CompanyName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (GivenName2.Length != 0) hash ^= GivenName2.GetHashCode();
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (HomePhone.Length != 0) hash ^= HomePhone.GetHashCode();
      if (MobilePhone.Length != 0) hash ^= MobilePhone.GetHashCode();
      if (FaxNumber.Length != 0) hash ^= FaxNumber.GetHashCode();
      if (OfficePhone.Length != 0) hash ^= OfficePhone.GetHashCode();
      if (OfficeAddress1.Length != 0) hash ^= OfficeAddress1.GetHashCode();
      if (OfficeAddress2.Length != 0) hash ^= OfficeAddress2.GetHashCode();
      if (OfficeCity.Length != 0) hash ^= OfficeCity.GetHashCode();
      if (OfficeState.Length != 0) hash ^= OfficeState.GetHashCode();
      if (OfficeZip.Length != 0) hash ^= OfficeZip.GetHashCode();
      if (OfficeNation.Length != 0) hash ^= OfficeNation.GetHashCode();
      if (HomeAddress1.Length != 0) hash ^= HomeAddress1.GetHashCode();
      if (HomeAddress2.Length != 0) hash ^= HomeAddress2.GetHashCode();
      if (HomeCity.Length != 0) hash ^= HomeCity.GetHashCode();
      if (HomeState.Length != 0) hash ^= HomeState.GetHashCode();
      if (HomeZip.Length != 0) hash ^= HomeZip.GetHashCode();
      if (HomeNation.Length != 0) hash ^= HomeNation.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GivenName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GivenName);
      }
      if (GivenName2.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GivenName2);
      }
      if (FamilyName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FamilyName);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (HomePhone.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HomePhone);
      }
      if (MobilePhone.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MobilePhone);
      }
      if (FaxNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FaxNumber);
      }
      if (OfficePhone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OfficePhone);
      }
      if (OfficeAddress1.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OfficeAddress1);
      }
      if (OfficeAddress2.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OfficeAddress2);
      }
      if (OfficeCity.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OfficeCity);
      }
      if (OfficeState.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OfficeState);
      }
      if (OfficeZip.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(OfficeZip);
      }
      if (OfficeNation.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(OfficeNation);
      }
      if (HomeAddress1.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(HomeAddress1);
      }
      if (HomeAddress2.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(HomeAddress2);
      }
      if (HomeCity.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(HomeCity);
      }
      if (HomeState.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(HomeState);
      }
      if (HomeZip.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(HomeZip);
      }
      if (HomeNation.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(HomeNation);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(CompanyName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (GivenName2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName2);
      }
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (HomePhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HomePhone);
      }
      if (MobilePhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobilePhone);
      }
      if (FaxNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaxNumber);
      }
      if (OfficePhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficePhone);
      }
      if (OfficeAddress1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficeAddress1);
      }
      if (OfficeAddress2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficeAddress2);
      }
      if (OfficeCity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficeCity);
      }
      if (OfficeState.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficeState);
      }
      if (OfficeZip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficeZip);
      }
      if (OfficeNation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfficeNation);
      }
      if (HomeAddress1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HomeAddress1);
      }
      if (HomeAddress2.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeAddress2);
      }
      if (HomeCity.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeCity);
      }
      if (HomeState.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeState);
      }
      if (HomeZip.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeZip);
      }
      if (HomeNation.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HomeNation);
      }
      if (CompanyName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContactInformation other) {
      if (other == null) {
        return;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.GivenName2.Length != 0) {
        GivenName2 = other.GivenName2;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.HomePhone.Length != 0) {
        HomePhone = other.HomePhone;
      }
      if (other.MobilePhone.Length != 0) {
        MobilePhone = other.MobilePhone;
      }
      if (other.FaxNumber.Length != 0) {
        FaxNumber = other.FaxNumber;
      }
      if (other.OfficePhone.Length != 0) {
        OfficePhone = other.OfficePhone;
      }
      if (other.OfficeAddress1.Length != 0) {
        OfficeAddress1 = other.OfficeAddress1;
      }
      if (other.OfficeAddress2.Length != 0) {
        OfficeAddress2 = other.OfficeAddress2;
      }
      if (other.OfficeCity.Length != 0) {
        OfficeCity = other.OfficeCity;
      }
      if (other.OfficeState.Length != 0) {
        OfficeState = other.OfficeState;
      }
      if (other.OfficeZip.Length != 0) {
        OfficeZip = other.OfficeZip;
      }
      if (other.OfficeNation.Length != 0) {
        OfficeNation = other.OfficeNation;
      }
      if (other.HomeAddress1.Length != 0) {
        HomeAddress1 = other.HomeAddress1;
      }
      if (other.HomeAddress2.Length != 0) {
        HomeAddress2 = other.HomeAddress2;
      }
      if (other.HomeCity.Length != 0) {
        HomeCity = other.HomeCity;
      }
      if (other.HomeState.Length != 0) {
        HomeState = other.HomeState;
      }
      if (other.HomeZip.Length != 0) {
        HomeZip = other.HomeZip;
      }
      if (other.HomeNation.Length != 0) {
        HomeNation = other.HomeNation;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GivenName = input.ReadString();
            break;
          }
          case 18: {
            GivenName2 = input.ReadString();
            break;
          }
          case 26: {
            FamilyName = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            HomePhone = input.ReadString();
            break;
          }
          case 50: {
            MobilePhone = input.ReadString();
            break;
          }
          case 58: {
            FaxNumber = input.ReadString();
            break;
          }
          case 66: {
            OfficePhone = input.ReadString();
            break;
          }
          case 74: {
            OfficeAddress1 = input.ReadString();
            break;
          }
          case 82: {
            OfficeAddress2 = input.ReadString();
            break;
          }
          case 90: {
            OfficeCity = input.ReadString();
            break;
          }
          case 98: {
            OfficeState = input.ReadString();
            break;
          }
          case 106: {
            OfficeZip = input.ReadString();
            break;
          }
          case 114: {
            OfficeNation = input.ReadString();
            break;
          }
          case 122: {
            HomeAddress1 = input.ReadString();
            break;
          }
          case 130: {
            HomeAddress2 = input.ReadString();
            break;
          }
          case 138: {
            HomeCity = input.ReadString();
            break;
          }
          case 146: {
            HomeState = input.ReadString();
            break;
          }
          case 154: {
            HomeZip = input.ReadString();
            break;
          }
          case 162: {
            HomeNation = input.ReadString();
            break;
          }
          case 170: {
            CompanyName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
