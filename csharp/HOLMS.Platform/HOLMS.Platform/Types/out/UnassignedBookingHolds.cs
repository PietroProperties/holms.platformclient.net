// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/groups/unassigned_booking_holds.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Groups {

  /// <summary>Holder for reflection information generated from booking/groups/unassigned_booking_holds.proto</summary>
  public static partial class UnassignedBookingHoldsReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/groups/unassigned_booking_holds.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UnassignedBookingHoldsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1ib29raW5nL2dyb3Vwcy91bmFzc2lnbmVkX2Jvb2tpbmdfaG9sZHMucHJv",
            "dG8SGmhvbG1zLnR5cGVzLmJvb2tpbmcuZ3JvdXBzGipwcmltaXRpdmUvcGJf",
            "aW5jbHVzaXZlX29wc2RhdGVfcmFuZ2UucHJvdG8aKXN1cHBseS9ldmVudF9i",
            "b29raW5nX2hvbGRfaW5kaWNhdG9yLnByb3RvGitzdXBwbHkvcm9vbV90eXBl",
            "cy9yb29tX3R5cGVfaW5kaWNhdG9yLnByb3RvIuwBChZVbmFzc2lnbmVkQm9v",
            "a2luZ0hvbGRzEkkKEmV2ZW50X2Jvb2tpbmdfaG9sZBgBIAEoCzItLmhvbG1z",
            "LnR5cGVzLnN1cHBseS5FdmVudEJvb2tpbmdIb2xkSW5kaWNhdG9yEkIKCmRh",
            "dGVfcmFuZ2UYAiABKAsyLi5ob2xtcy50eXBlcy5wcmltaXRpdmUuUGJJbmNs",
            "dXNpdmVPcHNkYXRlUmFuZ2USQwoJcm9vbV90eXBlGAMgASgLMjAuaG9sbXMu",
            "dHlwZXMuc3VwcGx5LnJvb21fdHlwZXMuUm9vbVR5cGVJbmRpY2F0b3JCLVoO",
            "Ym9va2luZy9ncm91cHOqAhpIT0xNUy5UeXBlcy5Cb29raW5nLkdyb3Vwc2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Supply.EventBookingHoldIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds), global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds.Parser, new[]{ "EventBookingHold", "DateRange", "RoomType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UnassignedBookingHolds : pb::IMessage<UnassignedBookingHolds> {
    private static readonly pb::MessageParser<UnassignedBookingHolds> _parser = new pb::MessageParser<UnassignedBookingHolds>(() => new UnassignedBookingHolds());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnassignedBookingHolds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Groups.UnassignedBookingHoldsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnassignedBookingHolds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnassignedBookingHolds(UnassignedBookingHolds other) : this() {
      EventBookingHold = other.eventBookingHold_ != null ? other.EventBookingHold.Clone() : null;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      RoomType = other.roomType_ != null ? other.RoomType.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnassignedBookingHolds Clone() {
      return new UnassignedBookingHolds(this);
    }

    /// <summary>Field number for the "event_booking_hold" field.</summary>
    public const int EventBookingHoldFieldNumber = 1;
    private global::HOLMS.Types.Supply.EventBookingHoldIndicator eventBookingHold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.EventBookingHoldIndicator EventBookingHold {
      get { return eventBookingHold_; }
      set {
        eventBookingHold_ = value;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 3;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomType {
      get { return roomType_; }
      set {
        roomType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnassignedBookingHolds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnassignedBookingHolds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventBookingHold, other.EventBookingHold)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(RoomType, other.RoomType)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventBookingHold_ != null) hash ^= EventBookingHold.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (roomType_ != null) hash ^= RoomType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (eventBookingHold_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventBookingHold);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateRange);
      }
      if (roomType_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RoomType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventBookingHold_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventBookingHold);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (roomType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnassignedBookingHolds other) {
      if (other == null) {
        return;
      }
      if (other.eventBookingHold_ != null) {
        if (eventBookingHold_ == null) {
          eventBookingHold_ = new global::HOLMS.Types.Supply.EventBookingHoldIndicator();
        }
        EventBookingHold.MergeFrom(other.EventBookingHold);
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.roomType_ != null) {
        if (roomType_ == null) {
          roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomType.MergeFrom(other.RoomType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (eventBookingHold_ == null) {
              eventBookingHold_ = new global::HOLMS.Types.Supply.EventBookingHoldIndicator();
            }
            input.ReadMessage(eventBookingHold_);
            break;
          }
          case 18: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 26: {
            if (roomType_ == null) {
              roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomType_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
