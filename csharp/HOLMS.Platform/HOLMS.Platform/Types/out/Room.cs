// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operations/rooms/room.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Operations.Rooms {

  /// <summary>Holder for reflection information generated from operations/rooms/room.proto</summary>
  public static partial class RoomReflection {

    #region Descriptor
    /// <summary>File descriptor for operations/rooms/room.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtvcGVyYXRpb25zL3Jvb21zL3Jvb20ucHJvdG8SHGhvbG1zLnR5cGVzLm9w",
            "ZXJhdGlvbnMucm9vbXMaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJv",
            "dG8aKG9wZXJhdGlvbnMvcm9vbV9tYWludGVuYW5jZV9zdGF0dXMucHJvdG8a",
            "JW9wZXJhdGlvbnMvcm9vbXMvcm9vbV9pbmRpY2F0b3IucHJvdG8aK3N1cHBs",
            "eS9yb29tX3R5cGVzL3Jvb21fdHlwZV9pbmRpY2F0b3IucHJvdG8i7QMKBFJv",
            "b20SPgoJZW50aXR5X2lkGAEgASgLMisuaG9sbXMudHlwZXMub3BlcmF0aW9u",
            "cy5yb29tcy5Sb29tSW5kaWNhdG9yEhMKC3Jvb21fbnVtYmVyGAIgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAMgASgJEh4KFmFkZGl0aW9uYWxfZGVzY3JpcHRpb24Y",
            "BCABKAkSHwoXbmlnaHRzX29jY3VwaWVkX2NvdW50ZXIYBSABKAUSMwoPbGFz",
            "dF9jbGVhbmVkX2F0GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBJHChFtYWludGVuYW5jZV9zdGF0ZRgHIAEoDjIsLmhvbG1zLnR5cGVzLm9w",
            "ZXJhdGlvbnMuUm9vbU1haW50ZW5hbmNlU3RhdGUSRgoMcm9vbV90eXBlX2lk",
            "GAggASgLMjAuaG9sbXMudHlwZXMuc3VwcGx5LnJvb21fdHlwZXMuUm9vbVR5",
            "cGVJbmRpY2F0b3ISHQoVcm9vbV90eXBlX2Rlc2NyaXB0aW9uGAkgASgJEkMK",
            "DmNvbm5lY3RlZF9yb29tGAogASgLMisuaG9sbXMudHlwZXMub3BlcmF0aW9u",
            "cy5yb29tcy5Sb29tSW5kaWNhdG9yEhAKCHRydW5rX2lkGAsgASgJQjFaEG9w",
            "ZXJhdGlvbnMvcm9vbXOqAhxIT0xNUy5UeXBlcy5PcGVyYXRpb25zLlJvb21z",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Operations.RoomMaintenanceStatusReflection.Descriptor, global::HOLMS.Types.Operations.Rooms.RoomIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Operations.Rooms.Room), global::HOLMS.Types.Operations.Rooms.Room.Parser, new[]{ "EntityId", "RoomNumber", "Description", "AdditionalDescription", "NightsOccupiedCounter", "LastCleanedAt", "MaintenanceState", "RoomTypeId", "RoomTypeDescription", "ConnectedRoom", "TrunkId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Room : pb::IMessage<Room> {
    private static readonly pb::MessageParser<Room> _parser = new pb::MessageParser<Room>(() => new Room());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Room> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Operations.Rooms.RoomReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room(Room other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      roomNumber_ = other.roomNumber_;
      description_ = other.description_;
      additionalDescription_ = other.additionalDescription_;
      nightsOccupiedCounter_ = other.nightsOccupiedCounter_;
      LastCleanedAt = other.lastCleanedAt_ != null ? other.LastCleanedAt.Clone() : null;
      maintenanceState_ = other.maintenanceState_;
      RoomTypeId = other.roomTypeId_ != null ? other.RoomTypeId.Clone() : null;
      roomTypeDescription_ = other.roomTypeDescription_;
      ConnectedRoom = other.connectedRoom_ != null ? other.ConnectedRoom.Clone() : null;
      trunkId_ = other.trunkId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Room Clone() {
      return new Room(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Operations.Rooms.RoomIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.Rooms.RoomIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "room_number" field.</summary>
    public const int RoomNumberFieldNumber = 2;
    private string roomNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNumber {
      get { return roomNumber_; }
      set {
        roomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "additional_description" field.</summary>
    public const int AdditionalDescriptionFieldNumber = 4;
    private string additionalDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdditionalDescription {
      get { return additionalDescription_; }
      set {
        additionalDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nights_occupied_counter" field.</summary>
    public const int NightsOccupiedCounterFieldNumber = 5;
    private int nightsOccupiedCounter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NightsOccupiedCounter {
      get { return nightsOccupiedCounter_; }
      set {
        nightsOccupiedCounter_ = value;
      }
    }

    /// <summary>Field number for the "last_cleaned_at" field.</summary>
    public const int LastCleanedAtFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastCleanedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastCleanedAt {
      get { return lastCleanedAt_; }
      set {
        lastCleanedAt_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_state" field.</summary>
    public const int MaintenanceStateFieldNumber = 7;
    private global::HOLMS.Types.Operations.RoomMaintenanceState maintenanceState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.RoomMaintenanceState MaintenanceState {
      get { return maintenanceState_; }
      set {
        maintenanceState_ = value;
      }
    }

    /// <summary>Field number for the "room_type_id" field.</summary>
    public const int RoomTypeIdFieldNumber = 8;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomTypeId {
      get { return roomTypeId_; }
      set {
        roomTypeId_ = value;
      }
    }

    /// <summary>Field number for the "room_type_description" field.</summary>
    public const int RoomTypeDescriptionFieldNumber = 9;
    private string roomTypeDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomTypeDescription {
      get { return roomTypeDescription_; }
      set {
        roomTypeDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connected_room" field.</summary>
    public const int ConnectedRoomFieldNumber = 10;
    private global::HOLMS.Types.Operations.Rooms.RoomIndicator connectedRoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.Rooms.RoomIndicator ConnectedRoom {
      get { return connectedRoom_; }
      set {
        connectedRoom_ = value;
      }
    }

    /// <summary>Field number for the "trunk_id" field.</summary>
    public const int TrunkIdFieldNumber = 11;
    private string trunkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrunkId {
      get { return trunkId_; }
      set {
        trunkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Room);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Room other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (RoomNumber != other.RoomNumber) return false;
      if (Description != other.Description) return false;
      if (AdditionalDescription != other.AdditionalDescription) return false;
      if (NightsOccupiedCounter != other.NightsOccupiedCounter) return false;
      if (!object.Equals(LastCleanedAt, other.LastCleanedAt)) return false;
      if (MaintenanceState != other.MaintenanceState) return false;
      if (!object.Equals(RoomTypeId, other.RoomTypeId)) return false;
      if (RoomTypeDescription != other.RoomTypeDescription) return false;
      if (!object.Equals(ConnectedRoom, other.ConnectedRoom)) return false;
      if (TrunkId != other.TrunkId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (RoomNumber.Length != 0) hash ^= RoomNumber.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (AdditionalDescription.Length != 0) hash ^= AdditionalDescription.GetHashCode();
      if (NightsOccupiedCounter != 0) hash ^= NightsOccupiedCounter.GetHashCode();
      if (lastCleanedAt_ != null) hash ^= LastCleanedAt.GetHashCode();
      if (MaintenanceState != 0) hash ^= MaintenanceState.GetHashCode();
      if (roomTypeId_ != null) hash ^= RoomTypeId.GetHashCode();
      if (RoomTypeDescription.Length != 0) hash ^= RoomTypeDescription.GetHashCode();
      if (connectedRoom_ != null) hash ^= ConnectedRoom.GetHashCode();
      if (TrunkId.Length != 0) hash ^= TrunkId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (RoomNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoomNumber);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (AdditionalDescription.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AdditionalDescription);
      }
      if (NightsOccupiedCounter != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NightsOccupiedCounter);
      }
      if (lastCleanedAt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LastCleanedAt);
      }
      if (MaintenanceState != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) MaintenanceState);
      }
      if (roomTypeId_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RoomTypeId);
      }
      if (RoomTypeDescription.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RoomTypeDescription);
      }
      if (connectedRoom_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ConnectedRoom);
      }
      if (TrunkId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TrunkId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (RoomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNumber);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (AdditionalDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdditionalDescription);
      }
      if (NightsOccupiedCounter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NightsOccupiedCounter);
      }
      if (lastCleanedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastCleanedAt);
      }
      if (MaintenanceState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MaintenanceState);
      }
      if (roomTypeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomTypeId);
      }
      if (RoomTypeDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomTypeDescription);
      }
      if (connectedRoom_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectedRoom);
      }
      if (TrunkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrunkId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Room other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Operations.Rooms.RoomIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.RoomNumber.Length != 0) {
        RoomNumber = other.RoomNumber;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.AdditionalDescription.Length != 0) {
        AdditionalDescription = other.AdditionalDescription;
      }
      if (other.NightsOccupiedCounter != 0) {
        NightsOccupiedCounter = other.NightsOccupiedCounter;
      }
      if (other.lastCleanedAt_ != null) {
        if (lastCleanedAt_ == null) {
          lastCleanedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastCleanedAt.MergeFrom(other.LastCleanedAt);
      }
      if (other.MaintenanceState != 0) {
        MaintenanceState = other.MaintenanceState;
      }
      if (other.roomTypeId_ != null) {
        if (roomTypeId_ == null) {
          roomTypeId_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomTypeId.MergeFrom(other.RoomTypeId);
      }
      if (other.RoomTypeDescription.Length != 0) {
        RoomTypeDescription = other.RoomTypeDescription;
      }
      if (other.connectedRoom_ != null) {
        if (connectedRoom_ == null) {
          connectedRoom_ = new global::HOLMS.Types.Operations.Rooms.RoomIndicator();
        }
        ConnectedRoom.MergeFrom(other.ConnectedRoom);
      }
      if (other.TrunkId.Length != 0) {
        TrunkId = other.TrunkId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Operations.Rooms.RoomIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            RoomNumber = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            AdditionalDescription = input.ReadString();
            break;
          }
          case 40: {
            NightsOccupiedCounter = input.ReadInt32();
            break;
          }
          case 50: {
            if (lastCleanedAt_ == null) {
              lastCleanedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastCleanedAt_);
            break;
          }
          case 56: {
            maintenanceState_ = (global::HOLMS.Types.Operations.RoomMaintenanceState) input.ReadEnum();
            break;
          }
          case 66: {
            if (roomTypeId_ == null) {
              roomTypeId_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomTypeId_);
            break;
          }
          case 74: {
            RoomTypeDescription = input.ReadString();
            break;
          }
          case 82: {
            if (connectedRoom_ == null) {
              connectedRoom_ = new global::HOLMS.Types.Operations.Rooms.RoomIndicator();
            }
            input.ReadMessage(connectedRoom_);
            break;
          }
          case 90: {
            TrunkId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
