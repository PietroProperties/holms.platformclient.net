// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/accounting/accounting_txn_export_status.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Accounting {

  /// <summary>Holder for reflection information generated from money/accounting/accounting_txn_export_status.proto</summary>
  public static partial class AccountingTxnExportStatusReflection {

    #region Descriptor
    /// <summary>File descriptor for money/accounting/accounting_txn_export_status.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountingTxnExportStatusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNtb25leS9hY2NvdW50aW5nL2FjY291bnRpbmdfdHhuX2V4cG9ydF9zdGF0",
            "dXMucHJvdG8SHGhvbG1zLnR5cGVzLm1vbmV5LmFjY291bnRpbmcaH2dvb2ds",
            "ZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8icAoZQWNjb3VudGluZ1R4bkV4",
            "cG9ydFN0YXR1cxI5ChVsYXN0X2V4cG9ydF9jb21wbGV0ZWQYASABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEhgKEGR1ZV9mb3JfbmV4dF9ydW4Y",
            "AiABKAhCMVoQbW9uZXkvYWNjb3VudGluZ6oCHEhPTE1TLlR5cGVzLk1vbmV5",
            "LkFjY291bnRpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Accounting.AccountingTxnExportStatus), global::HOLMS.Types.Money.Accounting.AccountingTxnExportStatus.Parser, new[]{ "LastExportCompleted", "DueForNextRun" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccountingTxnExportStatus : pb::IMessage<AccountingTxnExportStatus> {
    private static readonly pb::MessageParser<AccountingTxnExportStatus> _parser = new pb::MessageParser<AccountingTxnExportStatus>(() => new AccountingTxnExportStatus());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountingTxnExportStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Accounting.AccountingTxnExportStatusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountingTxnExportStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountingTxnExportStatus(AccountingTxnExportStatus other) : this() {
      LastExportCompleted = other.lastExportCompleted_ != null ? other.LastExportCompleted.Clone() : null;
      dueForNextRun_ = other.dueForNextRun_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountingTxnExportStatus Clone() {
      return new AccountingTxnExportStatus(this);
    }

    /// <summary>Field number for the "last_export_completed" field.</summary>
    public const int LastExportCompletedFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastExportCompleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastExportCompleted {
      get { return lastExportCompleted_; }
      set {
        lastExportCompleted_ = value;
      }
    }

    /// <summary>Field number for the "due_for_next_run" field.</summary>
    public const int DueForNextRunFieldNumber = 2;
    private bool dueForNextRun_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DueForNextRun {
      get { return dueForNextRun_; }
      set {
        dueForNextRun_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountingTxnExportStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountingTxnExportStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastExportCompleted, other.LastExportCompleted)) return false;
      if (DueForNextRun != other.DueForNextRun) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lastExportCompleted_ != null) hash ^= LastExportCompleted.GetHashCode();
      if (DueForNextRun != false) hash ^= DueForNextRun.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lastExportCompleted_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastExportCompleted);
      }
      if (DueForNextRun != false) {
        output.WriteRawTag(16);
        output.WriteBool(DueForNextRun);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lastExportCompleted_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastExportCompleted);
      }
      if (DueForNextRun != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountingTxnExportStatus other) {
      if (other == null) {
        return;
      }
      if (other.lastExportCompleted_ != null) {
        if (lastExportCompleted_ == null) {
          lastExportCompleted_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastExportCompleted.MergeFrom(other.LastExportCompleted);
      }
      if (other.DueForNextRun != false) {
        DueForNextRun = other.DueForNextRun;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (lastExportCompleted_ == null) {
              lastExportCompleted_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastExportCompleted_);
            break;
          }
          case 16: {
            DueForNextRun = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
