// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/channels/channel_info.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Channels {

  /// <summary>Holder for reflection information generated from booking/channels/channel_info.proto</summary>
  public static partial class ChannelInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/channels/channel_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChannelInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNib29raW5nL2NoYW5uZWxzL2NoYW5uZWxfaW5mby5wcm90bxIcaG9sbXMu",
            "dHlwZXMuYm9va2luZy5jaGFubmVscxoeYm9va2luZy9jaGFubmVscy9jaGFu",
            "bmVsLnByb3RvItoBCgtDaGFubmVsSW5mbxI2CgdjaGFubmVsGAEgASgOMiUu",
            "aG9sbXMudHlwZXMuYm9va2luZy5jaGFubmVscy5DaGFubmVsEloKEXN1cHBs",
            "ZW1lbnRhbF9pbmZvGAIgAygLMj8uaG9sbXMudHlwZXMuYm9va2luZy5jaGFu",
            "bmVscy5DaGFubmVsSW5mby5TdXBwbGVtZW50YWxJbmZvRW50cnkaNwoVU3Vw",
            "cGxlbWVudGFsSW5mb0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAFCH6oCHEhPTE1TLlR5cGVzLkJvb2tpbmcuQ2hhbm5lbHNiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Channels.ChannelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Channels.ChannelInfo), global::HOLMS.Types.Booking.Channels.ChannelInfo.Parser, new[]{ "Channel", "SupplementalInfo" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChannelInfo : pb::IMessage<ChannelInfo> {
    private static readonly pb::MessageParser<ChannelInfo> _parser = new pb::MessageParser<ChannelInfo>(() => new ChannelInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Channels.ChannelInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelInfo(ChannelInfo other) : this() {
      channel_ = other.channel_;
      supplementalInfo_ = other.supplementalInfo_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelInfo Clone() {
      return new ChannelInfo(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private global::HOLMS.Types.Booking.Channels.Channel channel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Channels.Channel Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "supplemental_info" field.</summary>
    public const int SupplementalInfoFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_supplementalInfo_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> supplementalInfo_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> SupplementalInfo {
      get { return supplementalInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!SupplementalInfo.Equals(other.SupplementalInfo)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      hash ^= SupplementalInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Channel);
      }
      supplementalInfo_.WriteTo(output, _map_supplementalInfo_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Channel);
      }
      size += supplementalInfo_.CalculateSize(_map_supplementalInfo_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelInfo other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      supplementalInfo_.Add(other.supplementalInfo_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            channel_ = (global::HOLMS.Types.Booking.Channels.Channel) input.ReadEnum();
            break;
          }
          case 18: {
            supplementalInfo_.AddEntriesFrom(input, _map_supplementalInfo_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
