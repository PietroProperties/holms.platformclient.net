// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/reservations/reservation_cancellation_notification.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Reservations {

  /// <summary>Holder for reflection information generated from booking/reservations/reservation_cancellation_notification.proto</summary>
  public static partial class ReservationCancellationNotificationReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/reservations/reservation_cancellation_notification.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationCancellationNotificationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkBib29raW5nL3Jlc2VydmF0aW9ucy9yZXNlcnZhdGlvbl9jYW5jZWxsYXRp",
            "b25fbm90aWZpY2F0aW9uLnByb3RvEiBob2xtcy50eXBlcy5ib29raW5nLnJl",
            "c2VydmF0aW9ucxouYm9va2luZy9pbmRpY2F0b3JzL3Jlc2VydmF0aW9uX2lu",
            "ZGljYXRvci5wcm90bxogY3JtL2d1ZXN0cy9ndWVzdF9pbmRpY2F0b3IucHJv",
            "dG8ilwIKI1Jlc2VydmF0aW9uQ2FuY2VsbGF0aW9uTm90aWZpY2F0aW9uEhEK",
            "CWpfd190b2tlbhgBIAEoCRJJCgtyZXNlcnZhdGlvbhgCIAEoCzI0LmhvbG1z",
            "LnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRv",
            "chI4CghndWVzdF9pZBgDIAEoCzImLmhvbG1zLnR5cGVzLmNybS5ndWVzdHMu",
            "R3Vlc3RJbmRpY2F0b3ISFwoPcGVuYWx0eV9hcHBsaWVkGAQgASgIEiUKHWRh",
            "eXNfYmVmb3JlX3Jlc2VydmF0aW9uX3N0YXJ0GAUgASgFEhgKEHJlcXVlc3Rp",
            "bmdfcGFydHkYBiABKAlCOVoUYm9va2luZy9yZXNlcnZhdGlvbnOqAiBIT0xN",
            "Uy5UeXBlcy5Cb29raW5nLlJlc2VydmF0aW9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.CRM.Guests.GuestIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Reservations.ReservationCancellationNotification), global::HOLMS.Types.Booking.Reservations.ReservationCancellationNotification.Parser, new[]{ "JWToken", "Reservation", "GuestId", "PenaltyApplied", "DaysBeforeReservationStart", "RequestingParty" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReservationCancellationNotification : pb::IMessage<ReservationCancellationNotification> {
    private static readonly pb::MessageParser<ReservationCancellationNotification> _parser = new pb::MessageParser<ReservationCancellationNotification>(() => new ReservationCancellationNotification());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationCancellationNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Reservations.ReservationCancellationNotificationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationCancellationNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationCancellationNotification(ReservationCancellationNotification other) : this() {
      jWToken_ = other.jWToken_;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      GuestId = other.guestId_ != null ? other.GuestId.Clone() : null;
      penaltyApplied_ = other.penaltyApplied_;
      daysBeforeReservationStart_ = other.daysBeforeReservationStart_;
      requestingParty_ = other.requestingParty_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationCancellationNotification Clone() {
      return new ReservationCancellationNotification(this);
    }

    /// <summary>Field number for the "j_w_token" field.</summary>
    public const int JWTokenFieldNumber = 1;
    private string jWToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JWToken {
      get { return jWToken_; }
      set {
        jWToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "guest_id" field.</summary>
    public const int GuestIdFieldNumber = 3;
    private global::HOLMS.Types.CRM.Guests.GuestIndicator guestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.CRM.Guests.GuestIndicator GuestId {
      get { return guestId_; }
      set {
        guestId_ = value;
      }
    }

    /// <summary>Field number for the "penalty_applied" field.</summary>
    public const int PenaltyAppliedFieldNumber = 4;
    private bool penaltyApplied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PenaltyApplied {
      get { return penaltyApplied_; }
      set {
        penaltyApplied_ = value;
      }
    }

    /// <summary>Field number for the "days_before_reservation_start" field.</summary>
    public const int DaysBeforeReservationStartFieldNumber = 5;
    private int daysBeforeReservationStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DaysBeforeReservationStart {
      get { return daysBeforeReservationStart_; }
      set {
        daysBeforeReservationStart_ = value;
      }
    }

    /// <summary>Field number for the "requesting_party" field.</summary>
    public const int RequestingPartyFieldNumber = 6;
    private string requestingParty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestingParty {
      get { return requestingParty_; }
      set {
        requestingParty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationCancellationNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationCancellationNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JWToken != other.JWToken) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(GuestId, other.GuestId)) return false;
      if (PenaltyApplied != other.PenaltyApplied) return false;
      if (DaysBeforeReservationStart != other.DaysBeforeReservationStart) return false;
      if (RequestingParty != other.RequestingParty) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JWToken.Length != 0) hash ^= JWToken.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (guestId_ != null) hash ^= GuestId.GetHashCode();
      if (PenaltyApplied != false) hash ^= PenaltyApplied.GetHashCode();
      if (DaysBeforeReservationStart != 0) hash ^= DaysBeforeReservationStart.GetHashCode();
      if (RequestingParty.Length != 0) hash ^= RequestingParty.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JWToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JWToken);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
      if (guestId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GuestId);
      }
      if (PenaltyApplied != false) {
        output.WriteRawTag(32);
        output.WriteBool(PenaltyApplied);
      }
      if (DaysBeforeReservationStart != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DaysBeforeReservationStart);
      }
      if (RequestingParty.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RequestingParty);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JWToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JWToken);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (guestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuestId);
      }
      if (PenaltyApplied != false) {
        size += 1 + 1;
      }
      if (DaysBeforeReservationStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DaysBeforeReservationStart);
      }
      if (RequestingParty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestingParty);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationCancellationNotification other) {
      if (other == null) {
        return;
      }
      if (other.JWToken.Length != 0) {
        JWToken = other.JWToken;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.guestId_ != null) {
        if (guestId_ == null) {
          guestId_ = new global::HOLMS.Types.CRM.Guests.GuestIndicator();
        }
        GuestId.MergeFrom(other.GuestId);
      }
      if (other.PenaltyApplied != false) {
        PenaltyApplied = other.PenaltyApplied;
      }
      if (other.DaysBeforeReservationStart != 0) {
        DaysBeforeReservationStart = other.DaysBeforeReservationStart;
      }
      if (other.RequestingParty.Length != 0) {
        RequestingParty = other.RequestingParty;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            JWToken = input.ReadString();
            break;
          }
          case 18: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 26: {
            if (guestId_ == null) {
              guestId_ = new global::HOLMS.Types.CRM.Guests.GuestIndicator();
            }
            input.ReadMessage(guestId_);
            break;
          }
          case 32: {
            PenaltyApplied = input.ReadBool();
            break;
          }
          case 40: {
            DaysBeforeReservationStart = input.ReadInt32();
            break;
          }
          case 50: {
            RequestingParty = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
