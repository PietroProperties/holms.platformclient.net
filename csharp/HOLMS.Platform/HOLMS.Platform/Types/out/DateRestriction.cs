// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/date_restriction.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking {

  /// <summary>Holder for reflection information generated from booking/date_restriction.proto</summary>
  public static partial class DateRestrictionReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/date_restriction.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DateRestrictionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5ib29raW5nL2RhdGVfcmVzdHJpY3Rpb24ucHJvdG8SE2hvbG1zLnR5cGVz",
            "LmJvb2tpbmcaHXByaW1pdGl2ZS9wYl9sb2NhbF9kYXRlLnByb3RvGjJ0ZW5h",
            "bmN5X2NvbmZpZy9pbmRpY2F0b3JzL3Byb3BlcnR5X2luZGljYXRvci5wcm90",
            "byLNAQoPRGF0ZVJlc3RyaWN0aW9uEk0KC3Byb3BlcnR5X2lkGAEgASgLMjgu",
            "aG9sbXMudHlwZXMudGVuYW5jeV9jb25maWcuaW5kaWNhdG9ycy5Qcm9wZXJ0",
            "eUluZGljYXRvchIzCgdvcHNkYXRlGAIgASgLMiIuaG9sbXMudHlwZXMucHJp",
            "bWl0aXZlLlBiTG9jYWxEYXRlEhkKEWNsb3NlZF90b19hcnJpdmFsGAMgASgI",
            "EhsKE21pbmltdW1fc3RheV9uaWdodHMYBCABKA1CH1oHYm9va2luZ6oCE0hP",
            "TE1TLlR5cGVzLkJvb2tpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbLocalDateReflection.Descriptor, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.DateRestriction), global::HOLMS.Types.Booking.DateRestriction.Parser, new[]{ "PropertyId", "Opsdate", "ClosedToArrival", "MinimumStayNights" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DateRestriction : pb::IMessage<DateRestriction> {
    private static readonly pb::MessageParser<DateRestriction> _parser = new pb::MessageParser<DateRestriction>(() => new DateRestriction());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DateRestriction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.DateRestrictionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRestriction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRestriction(DateRestriction other) : this() {
      PropertyId = other.propertyId_ != null ? other.PropertyId.Clone() : null;
      Opsdate = other.opsdate_ != null ? other.Opsdate.Clone() : null;
      closedToArrival_ = other.closedToArrival_;
      minimumStayNights_ = other.minimumStayNights_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DateRestriction Clone() {
      return new DateRestriction(this);
    }

    /// <summary>Field number for the "property_id" field.</summary>
    public const int PropertyIdFieldNumber = 1;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator propertyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator PropertyId {
      get { return propertyId_; }
      set {
        propertyId_ = value;
      }
    }

    /// <summary>Field number for the "opsdate" field.</summary>
    public const int OpsdateFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbLocalDate opsdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate Opsdate {
      get { return opsdate_; }
      set {
        opsdate_ = value;
      }
    }

    /// <summary>Field number for the "closed_to_arrival" field.</summary>
    public const int ClosedToArrivalFieldNumber = 3;
    private bool closedToArrival_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClosedToArrival {
      get { return closedToArrival_; }
      set {
        closedToArrival_ = value;
      }
    }

    /// <summary>Field number for the "minimum_stay_nights" field.</summary>
    public const int MinimumStayNightsFieldNumber = 4;
    private uint minimumStayNights_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinimumStayNights {
      get { return minimumStayNights_; }
      set {
        minimumStayNights_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DateRestriction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DateRestriction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PropertyId, other.PropertyId)) return false;
      if (!object.Equals(Opsdate, other.Opsdate)) return false;
      if (ClosedToArrival != other.ClosedToArrival) return false;
      if (MinimumStayNights != other.MinimumStayNights) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (propertyId_ != null) hash ^= PropertyId.GetHashCode();
      if (opsdate_ != null) hash ^= Opsdate.GetHashCode();
      if (ClosedToArrival != false) hash ^= ClosedToArrival.GetHashCode();
      if (MinimumStayNights != 0) hash ^= MinimumStayNights.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (propertyId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PropertyId);
      }
      if (opsdate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Opsdate);
      }
      if (ClosedToArrival != false) {
        output.WriteRawTag(24);
        output.WriteBool(ClosedToArrival);
      }
      if (MinimumStayNights != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MinimumStayNights);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (propertyId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertyId);
      }
      if (opsdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opsdate);
      }
      if (ClosedToArrival != false) {
        size += 1 + 1;
      }
      if (MinimumStayNights != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinimumStayNights);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DateRestriction other) {
      if (other == null) {
        return;
      }
      if (other.propertyId_ != null) {
        if (propertyId_ == null) {
          propertyId_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        PropertyId.MergeFrom(other.PropertyId);
      }
      if (other.opsdate_ != null) {
        if (opsdate_ == null) {
          opsdate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        Opsdate.MergeFrom(other.Opsdate);
      }
      if (other.ClosedToArrival != false) {
        ClosedToArrival = other.ClosedToArrival;
      }
      if (other.MinimumStayNights != 0) {
        MinimumStayNights = other.MinimumStayNights;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (propertyId_ == null) {
              propertyId_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(propertyId_);
            break;
          }
          case 18: {
            if (opsdate_ == null) {
              opsdate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(opsdate_);
            break;
          }
          case 24: {
            ClosedToArrival = input.ReadBool();
            break;
          }
          case 32: {
            MinimumStayNights = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
