// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/input_params/management_report_manifests.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Reporting.ReportParams {

  /// <summary>Holder for reflection information generated from reporting/input_params/management_report_manifests.proto</summary>
  public static partial class ManagementReportManifestsReflection {

    #region Descriptor
    /// <summary>File descriptor for reporting/input_params/management_report_manifests.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ManagementReportManifestsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjhyZXBvcnRpbmcvaW5wdXRfcGFyYW1zL21hbmFnZW1lbnRfcmVwb3J0X21h",
            "bmlmZXN0cy5wcm90bxIiaG9sbXMudHlwZXMucmVwb3J0aW5nLmlucHV0X3Bh",
            "cmFtcxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoqcHJpbWl0",
            "aXZlL3BiX2luY2x1c2l2ZV9vcHNkYXRlX3JhbmdlLnByb3RvIokBCiNNYW5h",
            "Z2VtZW50Q3VycmVudFRpbWVSZXBvcnRNYW5pZmVzdBIfChd1bm9jY3VwaWVk",
            "X3Jvb21zX3JlcG9ydBgBIAEoCBIcChRmb2xpb19iYWxhbmNlX3JlcG9ydBgC",
            "IAEoCBIjChtsb2RnaW5nX3ZlcmlmaWNhdGlvbl9yZXBvcnQYAyABKAgimQMK",
            "Jk1hbmFnZW1lbnRDbG9ja1RpbWVSYW5nZVJlcG9ydE1hbmlmZXN0EjwKGHJl",
            "cG9ydGluZ19pbnRlcnZhbF9zdGFydBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASOgoWcmVwb3J0aW5nX2ludGVydmFsX2VuZBgCIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASIgoaZm9saW9fZ3Jvc3NfY2hh",
            "cmdlc19yZXBvcnQYAyABKAgSHQoVZm9saW9fcGF5bWVudHNfcmVwb3J0GAQg",
            "ASgIEiAKGGZvbGlvX2FkanVzdG1lbnRzX3JlcG9ydBgFIAEoCBIeChZjYWxs",
            "X2FjY291bnRpbmdfcmVwb3J0GAYgASgIEiYKHmxlZGdlcl9hY3Rpdml0eV9z",
            "dW1tYXJ5X3JlcG9ydBgHIAEoCBIlCh1sZWRnZXJfam91cm5hbF9lbnRyaWVz",
            "X3JlcG9ydBgIIAEoCBIhChlib29raW5nc19ieV9wZXJpb2RfcmVwb3J0GAkg",
            "ASgIIrEBCiRNYW5hZ2VtZW50T3BzZGF0ZVJhbmdlUmVwb3J0TWFuaWZlc3QS",
            "QgoKZGF0ZV9yYW5nZRgBIAEoCzIuLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Q",
            "YkluY2x1c2l2ZU9wc2RhdGVSYW5nZRIiChpyb29tX3VzYWdlX2RldGFpbGVk",
            "X3JlcG9ydBgCIAEoCBIhChlyb29tX3VzYWdlX3N1bW1hcnlfcmVwb3J0GAMg",
            "ASgIQj1aFnJlcG9ydGluZy9pbnB1dF9wYXJhbXOqAiJIT0xNUy5UeXBlcy5S",
            "ZXBvcnRpbmcuUmVwb3J0UGFyYW1zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.ReportParams.ManagementCurrentTimeReportManifest), global::HOLMS.Types.Reporting.ReportParams.ManagementCurrentTimeReportManifest.Parser, new[]{ "UnoccupiedRoomsReport", "FolioBalanceReport", "LodgingVerificationReport" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.ReportParams.ManagementClockTimeRangeReportManifest), global::HOLMS.Types.Reporting.ReportParams.ManagementClockTimeRangeReportManifest.Parser, new[]{ "ReportingIntervalStart", "ReportingIntervalEnd", "FolioGrossChargesReport", "FolioPaymentsReport", "FolioAdjustmentsReport", "CallAccountingReport", "LedgerActivitySummaryReport", "LedgerJournalEntriesReport", "BookingsByPeriodReport" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.ReportParams.ManagementOpsdateRangeReportManifest), global::HOLMS.Types.Reporting.ReportParams.ManagementOpsdateRangeReportManifest.Parser, new[]{ "DateRange", "RoomUsageDetailedReport", "RoomUsageSummaryReport" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ManagementCurrentTimeReportManifest : pb::IMessage<ManagementCurrentTimeReportManifest> {
    private static readonly pb::MessageParser<ManagementCurrentTimeReportManifest> _parser = new pb::MessageParser<ManagementCurrentTimeReportManifest>(() => new ManagementCurrentTimeReportManifest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManagementCurrentTimeReportManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.ReportParams.ManagementReportManifestsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementCurrentTimeReportManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementCurrentTimeReportManifest(ManagementCurrentTimeReportManifest other) : this() {
      unoccupiedRoomsReport_ = other.unoccupiedRoomsReport_;
      folioBalanceReport_ = other.folioBalanceReport_;
      lodgingVerificationReport_ = other.lodgingVerificationReport_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementCurrentTimeReportManifest Clone() {
      return new ManagementCurrentTimeReportManifest(this);
    }

    /// <summary>Field number for the "unoccupied_rooms_report" field.</summary>
    public const int UnoccupiedRoomsReportFieldNumber = 1;
    private bool unoccupiedRoomsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UnoccupiedRoomsReport {
      get { return unoccupiedRoomsReport_; }
      set {
        unoccupiedRoomsReport_ = value;
      }
    }

    /// <summary>Field number for the "folio_balance_report" field.</summary>
    public const int FolioBalanceReportFieldNumber = 2;
    private bool folioBalanceReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FolioBalanceReport {
      get { return folioBalanceReport_; }
      set {
        folioBalanceReport_ = value;
      }
    }

    /// <summary>Field number for the "lodging_verification_report" field.</summary>
    public const int LodgingVerificationReportFieldNumber = 3;
    private bool lodgingVerificationReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LodgingVerificationReport {
      get { return lodgingVerificationReport_; }
      set {
        lodgingVerificationReport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManagementCurrentTimeReportManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManagementCurrentTimeReportManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnoccupiedRoomsReport != other.UnoccupiedRoomsReport) return false;
      if (FolioBalanceReport != other.FolioBalanceReport) return false;
      if (LodgingVerificationReport != other.LodgingVerificationReport) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnoccupiedRoomsReport != false) hash ^= UnoccupiedRoomsReport.GetHashCode();
      if (FolioBalanceReport != false) hash ^= FolioBalanceReport.GetHashCode();
      if (LodgingVerificationReport != false) hash ^= LodgingVerificationReport.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnoccupiedRoomsReport != false) {
        output.WriteRawTag(8);
        output.WriteBool(UnoccupiedRoomsReport);
      }
      if (FolioBalanceReport != false) {
        output.WriteRawTag(16);
        output.WriteBool(FolioBalanceReport);
      }
      if (LodgingVerificationReport != false) {
        output.WriteRawTag(24);
        output.WriteBool(LodgingVerificationReport);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnoccupiedRoomsReport != false) {
        size += 1 + 1;
      }
      if (FolioBalanceReport != false) {
        size += 1 + 1;
      }
      if (LodgingVerificationReport != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManagementCurrentTimeReportManifest other) {
      if (other == null) {
        return;
      }
      if (other.UnoccupiedRoomsReport != false) {
        UnoccupiedRoomsReport = other.UnoccupiedRoomsReport;
      }
      if (other.FolioBalanceReport != false) {
        FolioBalanceReport = other.FolioBalanceReport;
      }
      if (other.LodgingVerificationReport != false) {
        LodgingVerificationReport = other.LodgingVerificationReport;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UnoccupiedRoomsReport = input.ReadBool();
            break;
          }
          case 16: {
            FolioBalanceReport = input.ReadBool();
            break;
          }
          case 24: {
            LodgingVerificationReport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ManagementClockTimeRangeReportManifest : pb::IMessage<ManagementClockTimeRangeReportManifest> {
    private static readonly pb::MessageParser<ManagementClockTimeRangeReportManifest> _parser = new pb::MessageParser<ManagementClockTimeRangeReportManifest>(() => new ManagementClockTimeRangeReportManifest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManagementClockTimeRangeReportManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.ReportParams.ManagementReportManifestsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementClockTimeRangeReportManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementClockTimeRangeReportManifest(ManagementClockTimeRangeReportManifest other) : this() {
      ReportingIntervalStart = other.reportingIntervalStart_ != null ? other.ReportingIntervalStart.Clone() : null;
      ReportingIntervalEnd = other.reportingIntervalEnd_ != null ? other.ReportingIntervalEnd.Clone() : null;
      folioGrossChargesReport_ = other.folioGrossChargesReport_;
      folioPaymentsReport_ = other.folioPaymentsReport_;
      folioAdjustmentsReport_ = other.folioAdjustmentsReport_;
      callAccountingReport_ = other.callAccountingReport_;
      ledgerActivitySummaryReport_ = other.ledgerActivitySummaryReport_;
      ledgerJournalEntriesReport_ = other.ledgerJournalEntriesReport_;
      bookingsByPeriodReport_ = other.bookingsByPeriodReport_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementClockTimeRangeReportManifest Clone() {
      return new ManagementClockTimeRangeReportManifest(this);
    }

    /// <summary>Field number for the "reporting_interval_start" field.</summary>
    public const int ReportingIntervalStartFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp reportingIntervalStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReportingIntervalStart {
      get { return reportingIntervalStart_; }
      set {
        reportingIntervalStart_ = value;
      }
    }

    /// <summary>Field number for the "reporting_interval_end" field.</summary>
    public const int ReportingIntervalEndFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp reportingIntervalEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReportingIntervalEnd {
      get { return reportingIntervalEnd_; }
      set {
        reportingIntervalEnd_ = value;
      }
    }

    /// <summary>Field number for the "folio_gross_charges_report" field.</summary>
    public const int FolioGrossChargesReportFieldNumber = 3;
    private bool folioGrossChargesReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FolioGrossChargesReport {
      get { return folioGrossChargesReport_; }
      set {
        folioGrossChargesReport_ = value;
      }
    }

    /// <summary>Field number for the "folio_payments_report" field.</summary>
    public const int FolioPaymentsReportFieldNumber = 4;
    private bool folioPaymentsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FolioPaymentsReport {
      get { return folioPaymentsReport_; }
      set {
        folioPaymentsReport_ = value;
      }
    }

    /// <summary>Field number for the "folio_adjustments_report" field.</summary>
    public const int FolioAdjustmentsReportFieldNumber = 5;
    private bool folioAdjustmentsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FolioAdjustmentsReport {
      get { return folioAdjustmentsReport_; }
      set {
        folioAdjustmentsReport_ = value;
      }
    }

    /// <summary>Field number for the "call_accounting_report" field.</summary>
    public const int CallAccountingReportFieldNumber = 6;
    private bool callAccountingReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CallAccountingReport {
      get { return callAccountingReport_; }
      set {
        callAccountingReport_ = value;
      }
    }

    /// <summary>Field number for the "ledger_activity_summary_report" field.</summary>
    public const int LedgerActivitySummaryReportFieldNumber = 7;
    private bool ledgerActivitySummaryReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LedgerActivitySummaryReport {
      get { return ledgerActivitySummaryReport_; }
      set {
        ledgerActivitySummaryReport_ = value;
      }
    }

    /// <summary>Field number for the "ledger_journal_entries_report" field.</summary>
    public const int LedgerJournalEntriesReportFieldNumber = 8;
    private bool ledgerJournalEntriesReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LedgerJournalEntriesReport {
      get { return ledgerJournalEntriesReport_; }
      set {
        ledgerJournalEntriesReport_ = value;
      }
    }

    /// <summary>Field number for the "bookings_by_period_report" field.</summary>
    public const int BookingsByPeriodReportFieldNumber = 9;
    private bool bookingsByPeriodReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BookingsByPeriodReport {
      get { return bookingsByPeriodReport_; }
      set {
        bookingsByPeriodReport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManagementClockTimeRangeReportManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManagementClockTimeRangeReportManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReportingIntervalStart, other.ReportingIntervalStart)) return false;
      if (!object.Equals(ReportingIntervalEnd, other.ReportingIntervalEnd)) return false;
      if (FolioGrossChargesReport != other.FolioGrossChargesReport) return false;
      if (FolioPaymentsReport != other.FolioPaymentsReport) return false;
      if (FolioAdjustmentsReport != other.FolioAdjustmentsReport) return false;
      if (CallAccountingReport != other.CallAccountingReport) return false;
      if (LedgerActivitySummaryReport != other.LedgerActivitySummaryReport) return false;
      if (LedgerJournalEntriesReport != other.LedgerJournalEntriesReport) return false;
      if (BookingsByPeriodReport != other.BookingsByPeriodReport) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reportingIntervalStart_ != null) hash ^= ReportingIntervalStart.GetHashCode();
      if (reportingIntervalEnd_ != null) hash ^= ReportingIntervalEnd.GetHashCode();
      if (FolioGrossChargesReport != false) hash ^= FolioGrossChargesReport.GetHashCode();
      if (FolioPaymentsReport != false) hash ^= FolioPaymentsReport.GetHashCode();
      if (FolioAdjustmentsReport != false) hash ^= FolioAdjustmentsReport.GetHashCode();
      if (CallAccountingReport != false) hash ^= CallAccountingReport.GetHashCode();
      if (LedgerActivitySummaryReport != false) hash ^= LedgerActivitySummaryReport.GetHashCode();
      if (LedgerJournalEntriesReport != false) hash ^= LedgerJournalEntriesReport.GetHashCode();
      if (BookingsByPeriodReport != false) hash ^= BookingsByPeriodReport.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reportingIntervalStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReportingIntervalStart);
      }
      if (reportingIntervalEnd_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReportingIntervalEnd);
      }
      if (FolioGrossChargesReport != false) {
        output.WriteRawTag(24);
        output.WriteBool(FolioGrossChargesReport);
      }
      if (FolioPaymentsReport != false) {
        output.WriteRawTag(32);
        output.WriteBool(FolioPaymentsReport);
      }
      if (FolioAdjustmentsReport != false) {
        output.WriteRawTag(40);
        output.WriteBool(FolioAdjustmentsReport);
      }
      if (CallAccountingReport != false) {
        output.WriteRawTag(48);
        output.WriteBool(CallAccountingReport);
      }
      if (LedgerActivitySummaryReport != false) {
        output.WriteRawTag(56);
        output.WriteBool(LedgerActivitySummaryReport);
      }
      if (LedgerJournalEntriesReport != false) {
        output.WriteRawTag(64);
        output.WriteBool(LedgerJournalEntriesReport);
      }
      if (BookingsByPeriodReport != false) {
        output.WriteRawTag(72);
        output.WriteBool(BookingsByPeriodReport);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reportingIntervalStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportingIntervalStart);
      }
      if (reportingIntervalEnd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportingIntervalEnd);
      }
      if (FolioGrossChargesReport != false) {
        size += 1 + 1;
      }
      if (FolioPaymentsReport != false) {
        size += 1 + 1;
      }
      if (FolioAdjustmentsReport != false) {
        size += 1 + 1;
      }
      if (CallAccountingReport != false) {
        size += 1 + 1;
      }
      if (LedgerActivitySummaryReport != false) {
        size += 1 + 1;
      }
      if (LedgerJournalEntriesReport != false) {
        size += 1 + 1;
      }
      if (BookingsByPeriodReport != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManagementClockTimeRangeReportManifest other) {
      if (other == null) {
        return;
      }
      if (other.reportingIntervalStart_ != null) {
        if (reportingIntervalStart_ == null) {
          reportingIntervalStart_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReportingIntervalStart.MergeFrom(other.ReportingIntervalStart);
      }
      if (other.reportingIntervalEnd_ != null) {
        if (reportingIntervalEnd_ == null) {
          reportingIntervalEnd_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReportingIntervalEnd.MergeFrom(other.ReportingIntervalEnd);
      }
      if (other.FolioGrossChargesReport != false) {
        FolioGrossChargesReport = other.FolioGrossChargesReport;
      }
      if (other.FolioPaymentsReport != false) {
        FolioPaymentsReport = other.FolioPaymentsReport;
      }
      if (other.FolioAdjustmentsReport != false) {
        FolioAdjustmentsReport = other.FolioAdjustmentsReport;
      }
      if (other.CallAccountingReport != false) {
        CallAccountingReport = other.CallAccountingReport;
      }
      if (other.LedgerActivitySummaryReport != false) {
        LedgerActivitySummaryReport = other.LedgerActivitySummaryReport;
      }
      if (other.LedgerJournalEntriesReport != false) {
        LedgerJournalEntriesReport = other.LedgerJournalEntriesReport;
      }
      if (other.BookingsByPeriodReport != false) {
        BookingsByPeriodReport = other.BookingsByPeriodReport;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reportingIntervalStart_ == null) {
              reportingIntervalStart_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(reportingIntervalStart_);
            break;
          }
          case 18: {
            if (reportingIntervalEnd_ == null) {
              reportingIntervalEnd_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(reportingIntervalEnd_);
            break;
          }
          case 24: {
            FolioGrossChargesReport = input.ReadBool();
            break;
          }
          case 32: {
            FolioPaymentsReport = input.ReadBool();
            break;
          }
          case 40: {
            FolioAdjustmentsReport = input.ReadBool();
            break;
          }
          case 48: {
            CallAccountingReport = input.ReadBool();
            break;
          }
          case 56: {
            LedgerActivitySummaryReport = input.ReadBool();
            break;
          }
          case 64: {
            LedgerJournalEntriesReport = input.ReadBool();
            break;
          }
          case 72: {
            BookingsByPeriodReport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ManagementOpsdateRangeReportManifest : pb::IMessage<ManagementOpsdateRangeReportManifest> {
    private static readonly pb::MessageParser<ManagementOpsdateRangeReportManifest> _parser = new pb::MessageParser<ManagementOpsdateRangeReportManifest>(() => new ManagementOpsdateRangeReportManifest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ManagementOpsdateRangeReportManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.ReportParams.ManagementReportManifestsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementOpsdateRangeReportManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementOpsdateRangeReportManifest(ManagementOpsdateRangeReportManifest other) : this() {
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      roomUsageDetailedReport_ = other.roomUsageDetailedReport_;
      roomUsageSummaryReport_ = other.roomUsageSummaryReport_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ManagementOpsdateRangeReportManifest Clone() {
      return new ManagementOpsdateRangeReportManifest(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "room_usage_detailed_report" field.</summary>
    public const int RoomUsageDetailedReportFieldNumber = 2;
    private bool roomUsageDetailedReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RoomUsageDetailedReport {
      get { return roomUsageDetailedReport_; }
      set {
        roomUsageDetailedReport_ = value;
      }
    }

    /// <summary>Field number for the "room_usage_summary_report" field.</summary>
    public const int RoomUsageSummaryReportFieldNumber = 3;
    private bool roomUsageSummaryReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RoomUsageSummaryReport {
      get { return roomUsageSummaryReport_; }
      set {
        roomUsageSummaryReport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ManagementOpsdateRangeReportManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ManagementOpsdateRangeReportManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (RoomUsageDetailedReport != other.RoomUsageDetailedReport) return false;
      if (RoomUsageSummaryReport != other.RoomUsageSummaryReport) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (RoomUsageDetailedReport != false) hash ^= RoomUsageDetailedReport.GetHashCode();
      if (RoomUsageSummaryReport != false) hash ^= RoomUsageSummaryReport.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (RoomUsageDetailedReport != false) {
        output.WriteRawTag(16);
        output.WriteBool(RoomUsageDetailedReport);
      }
      if (RoomUsageSummaryReport != false) {
        output.WriteRawTag(24);
        output.WriteBool(RoomUsageSummaryReport);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (RoomUsageDetailedReport != false) {
        size += 1 + 1;
      }
      if (RoomUsageSummaryReport != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ManagementOpsdateRangeReportManifest other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.RoomUsageDetailedReport != false) {
        RoomUsageDetailedReport = other.RoomUsageDetailedReport;
      }
      if (other.RoomUsageSummaryReport != false) {
        RoomUsageSummaryReport = other.RoomUsageSummaryReport;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 16: {
            RoomUsageDetailedReport = input.ReadBool();
            break;
          }
          case 24: {
            RoomUsageSummaryReport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
