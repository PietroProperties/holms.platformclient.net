// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/rpc/reservation_folio_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio.RPC {

  /// <summary>Holder for reflection information generated from folio/rpc/reservation_folio_svc.proto</summary>
  public static partial class ReservationFolioSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/rpc/reservation_folio_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationFolioSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVmb2xpby9ycGMvcmVzZXJ2YXRpb25fZm9saW9fc3ZjLnByb3RvEhVob2xt",
            "cy50eXBlcy5mb2xpby5ycGMaLmJvb2tpbmcvaW5kaWNhdG9ycy9yZXNlcnZh",
            "dGlvbl9pbmRpY2F0b3IucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5w",
            "cm90bxojbW9uZXkvY2FyZHMvY2FyZF9zYWxlX3B1cnBvc2UucHJvdG8aJG1v",
            "bmV5L2NhcmRzL2d1ZXN0X3BheW1lbnRfY2FyZC5wcm90bxoubW9uZXkvY2Fy",
            "ZHMvZ3Vlc3RfcGF5bWVudF9jYXJkX2luZGljYXRvci5wcm90bxoqbW9uZXkv",
            "Y2FyZHMvbm90X3ByZXNlbnRfcGF5bWVudF9jYXJkLnByb3RvGjptb25leS9j",
            "YXJkcy90cmFuc2FjdGlvbnMvY2FyZF9hdXRob3JpemF0aW9uX3Jlc3BvbnNl",
            "LnByb3RvGjptb25leS9jYXJkcy90cmFuc2FjdGlvbnMvcGF5bWVudF9jYXJk",
            "X3NhbGVfaW5kaWNhdG9yLnByb3RvGhdmb2xpby9mb2xpb19zdGF0ZS5wcm90",
            "bxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90bxo3c3VwcGx5L2lu",
            "Y2lkZW50YWxfaXRlbXMvaW5jaWRlbnRhbF9pdGVtX2luZGljYXRvci5wcm90",
            "byJ1CiZSZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENoYXJnZXNSZXNwb25zZRJL",
            "CgZyZXN1bHQYASABKA4yOy5ob2xtcy50eXBlcy5mb2xpby5ycGMuUmVzZXJ2",
            "YXRpb25Gb2xpb1N2Y1Bvc3RDaGFyZ2VzUmVzdWx0Iq0BCihSZXNlcnZhdGlv",
            "bkZvbGlvU3ZjR2V0Rm9saW9TdGF0ZVJlc3BvbnNlEk0KBnJlc3VsdBgBIAEo",
            "DjI9LmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3Zj",
            "R2V0Rm9saW9TdGF0ZVJlc3VsdBIyCgtmb2xpb19zdGF0ZRgCIAEoCzIdLkhP",
            "TE1TLlR5cGVzLkZvbGlvLkZvbGlvU3RhdGUifQoqUmVzZXJ2YXRpb25Gb2xp",
            "b1N2Y1Bvc3RDYXNoUGF5bWVudFJlc3BvbnNlEk8KBnJlc3VsdBgBIAEoDjI/",
            "LmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9z",
            "dENhc2hQYXltZW50UmVzdWx0In8KK1Jlc2VydmF0aW9uRm9saW9TdmNQb3N0",
            "Q2hlY2tQYXltZW50UmVzcG9uc2USUAoGcmVzdWx0GAEgASgOMkAuaG9sbXMu",
            "dHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9uRm9saW9TdmNQb3N0Q2hlY2tQ",
            "YXltZW50UmVzdWx0Iq4BCipSZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENoZWNr",
            "UGF5bWVudFJlcXVlc3QSSQoLcmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50",
            "eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3IS",
            "NQoGYW1vdW50GAIgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0",
            "YXJ5QW1vdW50IqcCCiZDYXJkQXV0aG9yaXphdGlvbkZyb21TdG9yZWRDYXJk",
            "UmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5cGVzLmJv",
            "b2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchJACgRjYXJk",
            "GAIgASgLMjIuaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuR3Vlc3RQYXltZW50",
            "Q2FyZEluZGljYXRvchI1CgZhbW91bnQYAyABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQSOQoHcHVycG9zZRgEIAEoCzIoLmhv",
            "bG1zLnR5cGVzLm1vbmV5LmNhcmRzLkNhcmRTYWxlUHVycG9zZSLmAQonQ2Fy",
            "ZEF1dGhvcml6YXRpb25Gcm9tUHJlc2VudENhcmRSZXF1ZXN0EkkKC3Jlc2Vy",
            "dmF0aW9uGAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3Jz",
            "LlJlc2VydmF0aW9uSW5kaWNhdG9yEjUKBmFtb3VudBgCIAEoCzIlLmhvbG1z",
            "LnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI5CgdwdXJwb3NlGAMg",
            "ASgLMiguaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuQ2FyZFNhbGVQdXJwb3Nl",
            "IqcCCipDYXJkQXV0aG9yaXphdGlvbkZyb21Ob3RQcmVzZW50Q2FyZFJlcXVl",
            "c3QSSQoLcmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5n",
            "LmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISPAoEY2FyZBgCIAEo",
            "CzIuLmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLk5vdFByZXNlbnRQYXltZW50",
            "Q2FyZBI1CgZhbW91bnQYAyABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUu",
            "TW9uZXRhcnlBbW91bnQSOQoHcHVycG9zZRgEIAEoCzIoLmhvbG1zLnR5cGVz",
            "Lm1vbmV5LmNhcmRzLkNhcmRTYWxlUHVycG9zZSJ9CipSZXNlcnZhdGlvbkZv",
            "bGlvU3ZjUG9zdENhcmRQYXltZW50UmVzcG9uc2USTwoGcmVzdWx0GAEgASgO",
            "Mj8uaG9sbXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9uRm9saW9TdmNQ",
            "b3N0Q2FyZFBheW1lbnRSZXN1bHQitgIKKVJlc2VydmF0aW9uRm9saW9TdmNQ",
            "b3N0Q2FyZFBheW1lbnRSZXF1ZXN0EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5k",
            "aWNhdG9yEkwKBHNhbGUYAiABKAsyPi5ob2xtcy50eXBlcy5tb25leS5jYXJk",
            "cy50cmFuc2FjdGlvbnMuUGF5bWVudENhcmRTYWxlSW5kaWNhdG9yEjUKBmFt",
            "b3VudBgDIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFt",
            "b3VudBI5CgdwdXJwb3NlGAQgASgLMiguaG9sbXMudHlwZXMubW9uZXkuY2Fy",
            "ZHMuQ2FyZFNhbGVQdXJwb3NlIrIBCilSZXNlcnZhdGlvbkZvbGlvU3ZjUG9z",
            "dENhc2hQYXltZW50UmVxdWVzdBI6CgthbW91bnRfcGFpZBgBIAEoCzIlLmhv",
            "bG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBJJCgtyZXNlcnZh",
            "dGlvbhgCIAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5S",
            "ZXNlcnZhdGlvbkluZGljYXRvciJlCilSZXNlcnZhdGlvbkZvbGlvU3ZjR2V0",
            "T25GaWxlQ2FyZHNSZXNwb25zZRI4CgVjYXJkcxgBIAMoCzIpLmhvbG1zLnR5",
            "cGVzLm1vbmV5LmNhcmRzLkd1ZXN0UGF5bWVudENhcmQigAIKNVJlc2VydmF0",
            "aW9uRm9saW9TdmNQb3N0TG9kZ2luZ0NoYXJnZUNvcnJlY3Rpb25SZXF1ZXN0",
            "EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5p",
            "bmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yEhMKC2Rlc2NyaXB0aW9u",
            "GAIgASgJEkIKE2FkanVzdG1lbnRfc3VidG90YWwYAyABKAsyJS5ob2xtcy50",
            "eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSIwobYWRqdXN0bWVudF90",
            "YWtlbl9mcm9tX2d1ZXN0GAQgASgIItoCCjhSZXNlcnZhdGlvbkZvbGlvU3Zj",
            "UG9zdEluY2lkZW50YWxDaGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBJJCgtyZXNl",
            "cnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9y",
            "cy5SZXNlcnZhdGlvbkluZGljYXRvchJVCg9pbmNpZGVudGFsX2l0ZW0YAiAB",
            "KAsyPC5ob2xtcy50eXBlcy5zdXBwbHkuaW5jaWRlbnRhbF9pdGVtcy5JbmNp",
            "ZGVudGFsSXRlbUluZGljYXRvchITCgtkZXNjcmlwdGlvbhgDIAEoCRJCChNh",
            "ZGp1c3RtZW50X3N1YnRvdGFsGAQgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0",
            "aXZlLk1vbmV0YXJ5QW1vdW50EiMKG2FkanVzdG1lbnRfdGFrZW5fZnJvbV9n",
            "dWVzdBgFIAEoCCL9AQoyUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RNaXNjQ2hh",
            "cmdlQ29ycmVjdGlvblJlcXVlc3QSSQoLcmVzZXJ2YXRpb24YASABKAsyNC5o",
            "b2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRp",
            "Y2F0b3ISEwoLZGVzY3JpcHRpb24YAiABKAkSQgoTYWRqdXN0bWVudF9zdWJ0",
            "b3RhbBgDIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFt",
            "b3VudBIjChthZGp1c3RtZW50X3Rha2VuX2Zyb21fZ3Vlc3QYBCABKAgihgIK",
            "K1Jlc2VydmF0aW9uRm9saW9TdmNQYXltZW50Q2FyZFJlZnVuZFJlcXVlc3QS",
            "SQoLcmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmlu",
            "ZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISNQoGYW1vdW50GAIgASgL",
            "MiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EkAKBGNh",
            "cmQYAyABKAsyMi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5HdWVzdFBheW1l",
            "bnRDYXJkSW5kaWNhdG9yEhMKC2Rlc2NyaXB0aW9uGAQgASgJImsKIVJlc2Vy",
            "dmF0aW9uRm9saW9TdmNSZWZ1bmRSZXNwb25zZRJGCgZyZXN1bHQYASABKA4y",
            "Ni5ob2xtcy50eXBlcy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Jl",
            "ZnVuZFJlc3VsdCKRAQo0UmVzZXJ2YXRpb25Gb2xpb1N2Y0F1dGhvcml6YXRp",
            "b25Nb2RpZmljYXRpb25SZXNwb25zZRJZCgZyZXN1bHQYASABKA4ySS5ob2xt",
            "cy50eXBlcy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y0F1dGhvcml6",
            "YXRpb25Nb2RpZmljYXRpb25SZXN1bHQi/AEKM1Jlc2VydmF0aW9uRm9saW9T",
            "dmNBdXRob3JpemF0aW9uTW9kaWZpY2F0aW9uUmVxdWVzdBJMCgRzYWxlGAEg",
            "ASgLMj4uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLlBh",
            "eW1lbnRDYXJkU2FsZUluZGljYXRvchI8Cg1jaGFuZ2VfYW1vdW50GAIgASgL",
            "MiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EjkKB3B1",
            "cnBvc2UYAyABKAsyKC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkU2Fs",
            "ZVB1cnBvc2UigQEKKFJlc2VydmF0aW9uRm9saW9TdmNDYW5jZWxQYXltZW50",
            "UmVzcG9uc2USVQoGcmVzdWx0GAEgASgOMkUuaG9sbXMudHlwZXMuZm9saW8u",
            "cnBjLlJlc2VydmF0aW9uRm9saW9TdmNDYW5jZWxQYXltZW50UmVzcG9uc2VS",
            "ZXN1bHQq4AEKJFJlc2VydmF0aW9uRm9saW9TdmNQb3N0Q2hhcmdlc1Jlc3Vs",
            "dBIwCixSRVNFUlZBVElPTl9GT0xJT19TVkNfUE9TVF9DSEFSR0VTX1JFU1VM",
            "VF9PSxAAEkMKP1JFU0VSVkFUSU9OX0ZPTElPX1NWQ19QT1NUX0NIQVJHRVNf",
            "UkVTVUxUX01JU1NJTkdfSE9VU0VfQUNDT1VOVBABEkEKPVJFU0VSVkFUSU9O",
            "X0ZPTElPX1NWQ19QT1NUX0NIQVJHRVNfUkVTVUxUX01JU1NJTkdfUkVTRVJW",
            "QVRJT04QAiqXAQomUmVzZXJ2YXRpb25Gb2xpb1N2Y0dldEZvbGlvU3RhdGVS",
            "ZXN1bHQSLAooUkVTRVJWQVRJT05fRk9MSU9fU1ZDX0dFVF9GT0xJT19TVEFU",
            "RV9PSxAAEj8KO1JFU0VSVkFUSU9OX0ZPTElPX1NWQ19HRVRfRk9MSU9fU1RB",
            "VEVfTUlTU0lOR19IT1VTRV9BQ0NPVU5UEAEq2QEKKFJlc2VydmF0aW9uRm9s",
            "aW9TdmNQb3N0Q2FzaFBheW1lbnRSZXN1bHQSLgoqUkVTRVJWQVRJT05fRk9M",
            "SU9fU1ZDX1BPU1RfQ0FTSF9QQVlNRU5UX09LEAASQQo9UkVTRVJWQVRJT05f",
            "Rk9MSU9fU1ZDX1BPU1RfQ0FTSF9QQVlNRU5UX01JU1NJTkdfSE9VU0VfQUND",
            "T1VOVBABEjoKNlJFU0VSVkFUSU9OX0ZPTElPX1NWQ19QT1NUX0NBU0hfUEFZ",
            "TUVOVF9JTlZBTElEX0FNT1VOVBACKt0BCilSZXNlcnZhdGlvbkZvbGlvU3Zj",
            "UG9zdENoZWNrUGF5bWVudFJlc3VsdBIvCitSRVNFUlZBVElPTl9GT0xJT19T",
            "VkNfUE9TVF9DSEVDS19QQVlNRU5UX09LEAASQgo+UkVTRVJWQVRJT05fRk9M",
            "SU9fU1ZDX1BPU1RfQ0hFQ0tfUEFZTUVOVF9NSVNTSU5HX0hPVVNFX0FDQ09V",
            "TlQQARI7CjdSRVNFUlZBVElPTl9GT0xJT19TVkNfUE9TVF9DSEVDS19QQVlN",
            "RU5UX0lOVkFMSURfQU1PVU5UEAIqpgMKKFJlc2VydmF0aW9uRm9saW9TdmNQ",
            "b3N0Q2FyZFBheW1lbnRSZXN1bHQSLgoqUkVTRVJWQVRJT05fRk9MSU9fU1ZD",
            "X1BPU1RfQ0FSRF9QQVlNRU5UX09LEAASQQo9UkVTRVJWQVRJT05fRk9MSU9f",
            "U1ZDX1BPU1RfQ0FSRF9QQVlNRU5UX01JU1NJTkdfSE9VU0VfQUNDT1VOVBAB",
            "EkEKPVJFU0VSVkFUSU9OX0ZPTElPX1NWQ19QT1NUX0NBUkRfUEFZTUVOVF9N",
            "SVNTSU5HX0FTU0VUX0FDQ09VTlQQAhI6CjZSRVNFUlZBVElPTl9GT0xJT19T",
            "VkNfUE9TVF9DQVJEX1BBWU1FTlRfSU5WQUxJRF9BTU9VTlQQAxJFCkFSRVNF",
            "UlZBVElPTl9GT0xJT19TVkNfUE9TVF9DQVJEX1BBWU1FTlRfQVVUSE9SSVpB",
            "VElPTl9VTkFWQUlMQUJMRRAEEkEKPVJFU0VSVkFUSU9OX0ZPTElPX1NWQ19Q",
            "T1NUX0NBUkRfUEFZTUVOVF9SRUpFQ1RFRF9CWV9QUk9DRVNTT1IQBSqtAQof",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y1JlZnVuZFJlc3VsdBIoCiRSRVNFUlZBVElP",
            "Tl9GT0xJT19TVkNfUkVGVU5EX1NVQ0NFU1MQABIuCipSRVNFUlZBVElPTl9G",
            "T0xJT19TVkNfUkVGVU5EX0VYQ0VFRFNfTElNSVQQARIwCixSRVNFUlZBVElP",
            "Tl9GT0xJT19TVkNfUkVGVU5EX1VOS05PV05fRkFJTFVSRRACKrwCCjJSZXNl",
            "cnZhdGlvbkZvbGlvU3ZjQXV0aG9yaXphdGlvbk1vZGlmaWNhdGlvblJlc3Vs",
            "dBI8CjhSRVNFUlZBVElPTl9GT0xJT19TVkNfQVVUSE9SSVpBVElPTl9NT0RJ",
            "RklDQVRJT05fU1VDQ0VTUxAAEkMKP1JFU0VSVkFUSU9OX0ZPTElPX1NWQ19B",
            "VVRIT1JJWkFUSU9OX01PRElGSUNBVElPTl9TQUxFX05PVF9GT1VORBABEkQK",
            "QFJFU0VSVkFUSU9OX0ZPTElPX1NWQ19BVVRIT1JJWkFUSU9OX01PRElGSUNB",
            "VElPTl9VTktOT1dOX0ZBSUxVUkUQAhI9CjlSRVNFUlZBVElPTl9GT0xJT19T",
            "VkNfQVVUSE9SSVpBVElPTl9NT0RJRklDQVRJT05fREVDTElORUQQAyrOAgou",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y0NhbmNlbFBheW1lbnRSZXNwb25zZVJlc3Vs",
            "dBIwCixSRVNFUlZBVElPTl9GT0xJT19TVkNfQ0FOQ0VMX1BBWU1FTlRfU1VD",
            "Q0VTUxAAEjgKNFJFU0VSVkFUSU9OX0ZPTElPX1NWQ19DQU5DRUxfUEFZTUVO",
            "VF9VTktOT1dOX0ZBSUxVUkUQARI3CjNSRVNFUlZBVElPTl9GT0xJT19TVkNf",
            "Q0FOQ0VMX1BBWU1FTlRfU0FMRV9OT1RfRk9VTkQQAhI4CjRSRVNFUlZBVElP",
            "Tl9GT0xJT19TVkNfQ0FOQ0VMX1BBWU1FTlRfQUxSRUFEWV9TRVRUTEVEEAMS",
            "PQo5UkVTRVJWQVRJT05fRk9MSU9fU1ZDX0NBTkNFTF9QQVlNRU5UX05PX1BB",
            "WU1FTlRfQ09MTEVDVEVEEAQy6RAKE1Jlc2VydmF0aW9uRm9saW9TdmMShgEK",
            "DUdldEZvbGlvU3RhdGUSNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRv",
            "cnMuUmVzZXJ2YXRpb25JbmRpY2F0b3IaPy5ob2xtcy50eXBlcy5mb2xpby5y",
            "cGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y0dldEZvbGlvU3RhdGVSZXNwb25zZRKI",
            "AQoOR2V0T25GaWxlQ2FyZHMSNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGlj",
            "YXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3IaQC5ob2xtcy50eXBlcy5mb2xp",
            "by5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y0dldE9uRmlsZUNhcmRzUmVzcG9u",
            "c2USpAEKIkFkZENhcmRBdXRob3JpemF0aW9uRnJvbVN0b3JlZENhcmQSPS5o",
            "b2xtcy50eXBlcy5mb2xpby5ycGMuQ2FyZEF1dGhvcml6YXRpb25Gcm9tU3Rv",
            "cmVkQ2FyZFJlcXVlc3QaPy5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFu",
            "c2FjdGlvbnMuQ2FyZEF1dGhvcml6YXRpb25SZXNwb25zZRKoAQolQWRkQ2Fy",
            "ZEF1dGhvcml6YXRpb25Gcm9tUHJlc2VudGVkQ2FyZBI+LmhvbG1zLnR5cGVz",
            "LmZvbGlvLnJwYy5DYXJkQXV0aG9yaXphdGlvbkZyb21QcmVzZW50Q2FyZFJl",
            "cXVlc3QaPy5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMu",
            "Q2FyZEF1dGhvcml6YXRpb25SZXNwb25zZRKsAQomQWRkQ2FyZEF1dGhvcml6",
            "YXRpb25Gcm9tTm90UHJlc2VudENhcmQSQS5ob2xtcy50eXBlcy5mb2xpby5y",
            "cGMuQ2FyZEF1dGhvcml6YXRpb25Gcm9tTm90UHJlc2VudENhcmRSZXF1ZXN0",
            "Gj8uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLkNhcmRB",
            "dXRob3JpemF0aW9uUmVzcG9uc2USkwEKE1JlZnVuZFRva2VuaXplZENhcmQS",
            "Qi5ob2xtcy50eXBlcy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bh",
            "eW1lbnRDYXJkUmVmdW5kUmVxdWVzdBo4LmhvbG1zLnR5cGVzLmZvbGlvLnJw",
            "Yy5SZXNlcnZhdGlvbkZvbGlvU3ZjUmVmdW5kUmVzcG9uc2UStAEKGUNoYW5n",
            "ZUF1dGhvcml6YXRpb25BbW91bnQSSi5ob2xtcy50eXBlcy5mb2xpby5ycGMu",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y0F1dGhvcml6YXRpb25Nb2RpZmljYXRpb25S",
            "ZXF1ZXN0GksuaG9sbXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9uRm9s",
            "aW9TdmNBdXRob3JpemF0aW9uTW9kaWZpY2F0aW9uUmVzcG9uc2USlgEKD1Bv",
            "c3RDYXJkUGF5bWVudBJALmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5SZXNlcnZh",
            "dGlvbkZvbGlvU3ZjUG9zdENhcmRQYXltZW50UmVxdWVzdBpBLmhvbG1zLnR5",
            "cGVzLmZvbGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENhcmRQYXlt",
            "ZW50UmVzcG9uc2USmQEKEFBvc3RDaGVja1BheW1lbnQSQS5ob2xtcy50eXBl",
            "cy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDaGVja1BheW1l",
            "bnRSZXF1ZXN0GkIuaG9sbXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9u",
            "Rm9saW9TdmNQb3N0Q2hlY2tQYXltZW50UmVzcG9uc2USlgEKD1Bvc3RDYXNo",
            "UGF5bWVudBJALmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5SZXNlcnZhdGlvbkZv",
            "bGlvU3ZjUG9zdENhc2hQYXltZW50UmVxdWVzdBpBLmhvbG1zLnR5cGVzLmZv",
            "bGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENhc2hQYXltZW50UmVz",
            "cG9uc2USgwEKG1Bvc3RMb2RnaW5nQ2hhcmdlQ29ycmVjdGlvbhJMLmhvbG1z",
            "LnR5cGVzLmZvbGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdExvZGdp",
            "bmdDaGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRKJAQoeUG9zdEluY2lkZW50YWxDaGFyZ2VDb3JyZWN0aW9uEk8uaG9s",
            "bXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9uRm9saW9TdmNQb3N0SW5j",
            "aWRlbnRhbENoYXJnZUNvcnJlY3Rpb25SZXF1ZXN0GhYuZ29vZ2xlLnByb3Rv",
            "YnVmLkVtcHR5En0KGFBvc3RNaXNjQ2hhcmdlQ29ycmVjdGlvbhJJLmhvbG1z",
            "LnR5cGVzLmZvbGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdE1pc2ND",
            "aGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eRKQAQoNQ2FuY2VsUGF5bWVudBI+LmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRz",
            "LnRyYW5zYWN0aW9ucy5QYXltZW50Q2FyZFNhbGVJbmRpY2F0b3IaPy5ob2xt",
            "cy50eXBlcy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y0NhbmNlbFBh",
            "eW1lbnRSZXNwb25zZUIjWglmb2xpby9ycGOqAhVIT0xNUy5UeXBlcy5Gb2xp",
            "by5SUENiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardSalePurposeReflection.Descriptor, global::HOLMS.Types.Money.Cards.GuestPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.NotPresentPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.CardAuthorizationResponseReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicatorReflection.Descriptor, global::HOLMS.Types.Folio.FolioStateReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostChargesResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcRefundResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationResult), typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCancelPaymentResponseResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostChargesResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostChargesResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResponse.Parser, new[]{ "Result", "FolioState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentRequest.Parser, new[]{ "Reservation", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.CardAuthorizationFromStoredCardRequest), global::HOLMS.Types.Folio.RPC.CardAuthorizationFromStoredCardRequest.Parser, new[]{ "Reservation", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.CardAuthorizationFromPresentCardRequest), global::HOLMS.Types.Folio.RPC.CardAuthorizationFromPresentCardRequest.Parser, new[]{ "Reservation", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.CardAuthorizationFromNotPresentCardRequest), global::HOLMS.Types.Folio.RPC.CardAuthorizationFromNotPresentCardRequest.Parser, new[]{ "Reservation", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentRequest.Parser, new[]{ "Reservation", "Sale", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentRequest.Parser, new[]{ "AmountPaid", "Reservation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetOnFileCardsResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetOnFileCardsResponse.Parser, new[]{ "Cards" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostLodgingChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostLodgingChargeCorrectionRequest.Parser, new[]{ "Reservation", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostIncidentalChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostIncidentalChargeCorrectionRequest.Parser, new[]{ "Reservation", "IncidentalItem", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostMiscChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostMiscChargeCorrectionRequest.Parser, new[]{ "Reservation", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPaymentCardRefundRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPaymentCardRefundRequest.Parser, new[]{ "Reservation", "Amount", "Card", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcRefundResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcRefundResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationRequest.Parser, new[]{ "Sale", "ChangeAmount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCancelPaymentResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCancelPaymentResponse.Parser, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReservationFolioSvcPostChargesResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHARGES_RESULT_OK")] Ok = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHARGES_RESULT_MISSING_HOUSE_ACCOUNT")] MissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHARGES_RESULT_MISSING_RESERVATION")] MissingReservation = 2,
  }

  public enum ReservationFolioSvcGetFolioStateResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_OK")] ReservationFolioSvcGetFolioStateOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcGetFolioStateMissingHouseAccount = 1,
  }

  public enum ReservationFolioSvcPostCashPaymentResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CASH_PAYMENT_OK")] ReservationFolioSvcPostCashPaymentOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CASH_PAYMENT_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcPostCashPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CASH_PAYMENT_INVALID_AMOUNT")] ReservationFolioSvcPostCashPaymentInvalidAmount = 2,
  }

  public enum ReservationFolioSvcPostCheckPaymentResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHECK_PAYMENT_OK")] ReservationFolioSvcPostCheckPaymentOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHECK_PAYMENT_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcPostCheckPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHECK_PAYMENT_INVALID_AMOUNT")] ReservationFolioSvcPostCheckPaymentInvalidAmount = 2,
  }

  public enum ReservationFolioSvcPostCardPaymentResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_OK")] ReservationFolioSvcPostCardPaymentOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcPostCardPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_MISSING_ASSET_ACCOUNT")] ReservationFolioSvcPostCardPaymentMissingAssetAccount = 2,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_INVALID_AMOUNT")] ReservationFolioSvcPostCardPaymentInvalidAmount = 3,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_AUTHORIZATION_UNAVAILABLE")] ReservationFolioSvcPostCardPaymentAuthorizationUnavailable = 4,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_REJECTED_BY_PROCESSOR")] ReservationFolioSvcPostCardPaymentRejectedByProcessor = 5,
  }

  public enum ReservationFolioSvcRefundResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_REFUND_SUCCESS")] ReservationFolioSvcRefundSuccess = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_REFUND_EXCEEDS_LIMIT")] ReservationFolioSvcRefundExceedsLimit = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_REFUND_UNKNOWN_FAILURE")] ReservationFolioSvcRefundUnknownFailure = 2,
  }

  public enum ReservationFolioSvcAuthorizationModificationResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_AUTHORIZATION_MODIFICATION_SUCCESS")] ReservationFolioSvcAuthorizationModificationSuccess = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_AUTHORIZATION_MODIFICATION_SALE_NOT_FOUND")] ReservationFolioSvcAuthorizationModificationSaleNotFound = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_AUTHORIZATION_MODIFICATION_UNKNOWN_FAILURE")] ReservationFolioSvcAuthorizationModificationUnknownFailure = 2,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_AUTHORIZATION_MODIFICATION_DECLINED")] ReservationFolioSvcAuthorizationModificationDeclined = 3,
  }

  public enum ReservationFolioSvcCancelPaymentResponseResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_CANCEL_PAYMENT_SUCCESS")] ReservationFolioSvcCancelPaymentSuccess = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_CANCEL_PAYMENT_UNKNOWN_FAILURE")] ReservationFolioSvcCancelPaymentUnknownFailure = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_CANCEL_PAYMENT_SALE_NOT_FOUND")] ReservationFolioSvcCancelPaymentSaleNotFound = 2,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_CANCEL_PAYMENT_ALREADY_SETTLED")] ReservationFolioSvcCancelPaymentAlreadySettled = 3,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_CANCEL_PAYMENT_NO_PAYMENT_COLLECTED")] ReservationFolioSvcCancelPaymentNoPaymentCollected = 4,
  }

  #endregion

  #region Messages
  public sealed partial class ReservationFolioSvcPostChargesResponse : pb::IMessage<ReservationFolioSvcPostChargesResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostChargesResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostChargesResponse>(() => new ReservationFolioSvcPostChargesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostChargesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostChargesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostChargesResponse(ReservationFolioSvcPostChargesResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostChargesResponse Clone() {
      return new ReservationFolioSvcPostChargesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostChargesResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostChargesResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostChargesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostChargesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostChargesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostChargesResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetFolioStateResponse : pb::IMessage<ReservationFolioSvcGetFolioStateResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetFolioStateResponse> _parser = new pb::MessageParser<ReservationFolioSvcGetFolioStateResponse>(() => new ReservationFolioSvcGetFolioStateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetFolioStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse(ReservationFolioSvcGetFolioStateResponse other) : this() {
      result_ = other.result_;
      FolioState = other.folioState_ != null ? other.FolioState.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse Clone() {
      return new ReservationFolioSvcGetFolioStateResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "folio_state" field.</summary>
    public const int FolioStateFieldNumber = 2;
    private global::HOLMS.Types.Folio.FolioState folioState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FolioState FolioState {
      get { return folioState_; }
      set {
        folioState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetFolioStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetFolioStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(FolioState, other.FolioState)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (folioState_ != null) hash ^= FolioState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (folioState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FolioState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (folioState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolioState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetFolioStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.folioState_ != null) {
        if (folioState_ == null) {
          folioState_ = new global::HOLMS.Types.Folio.FolioState();
        }
        FolioState.MergeFrom(other.FolioState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (folioState_ == null) {
              folioState_ = new global::HOLMS.Types.Folio.FolioState();
            }
            input.ReadMessage(folioState_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCashPaymentResponse : pb::IMessage<ReservationFolioSvcPostCashPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCashPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostCashPaymentResponse>(() => new ReservationFolioSvcPostCashPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCashPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentResponse(ReservationFolioSvcPostCashPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentResponse Clone() {
      return new ReservationFolioSvcPostCashPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCashPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCashPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCashPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCheckPaymentResponse : pb::IMessage<ReservationFolioSvcPostCheckPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCheckPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostCheckPaymentResponse>(() => new ReservationFolioSvcPostCheckPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCheckPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentResponse(ReservationFolioSvcPostCheckPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentResponse Clone() {
      return new ReservationFolioSvcPostCheckPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCheckPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCheckPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCheckPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCheckPaymentRequest : pb::IMessage<ReservationFolioSvcPostCheckPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest>(() => new ReservationFolioSvcPostCheckPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest(ReservationFolioSvcPostCheckPaymentRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest Clone() {
      return new ReservationFolioSvcPostCheckPaymentRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCheckPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCheckPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCheckPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromStoredCardRequest : pb::IMessage<CardAuthorizationFromStoredCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromStoredCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromStoredCardRequest>(() => new CardAuthorizationFromStoredCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromStoredCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromStoredCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromStoredCardRequest(CardAuthorizationFromStoredCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromStoredCardRequest Clone() {
      return new CardAuthorizationFromStoredCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromStoredCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromStoredCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromStoredCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromPresentCardRequest : pb::IMessage<CardAuthorizationFromPresentCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromPresentCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromPresentCardRequest>(() => new CardAuthorizationFromPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest(CardAuthorizationFromPresentCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest Clone() {
      return new CardAuthorizationFromPresentCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromNotPresentCardRequest : pb::IMessage<CardAuthorizationFromNotPresentCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromNotPresentCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromNotPresentCardRequest>(() => new CardAuthorizationFromNotPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromNotPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest(CardAuthorizationFromNotPresentCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest Clone() {
      return new CardAuthorizationFromNotPresentCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.NotPresentPaymentCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.NotPresentPaymentCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromNotPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromNotPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromNotPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCardPaymentResponse : pb::IMessage<ReservationFolioSvcPostCardPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCardPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostCardPaymentResponse>(() => new ReservationFolioSvcPostCardPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCardPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentResponse(ReservationFolioSvcPostCardPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentResponse Clone() {
      return new ReservationFolioSvcPostCardPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCardPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCardPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCardPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCardPaymentRequest : pb::IMessage<ReservationFolioSvcPostCardPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest>(() => new ReservationFolioSvcPostCardPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest(ReservationFolioSvcPostCardPaymentRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Sale = other.sale_ != null ? other.Sale.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest Clone() {
      return new ReservationFolioSvcPostCardPaymentRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCardPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCardPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Sale, other.Sale)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (sale_ != null) hash ^= Sale.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (sale_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sale);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (sale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCardPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.sale_ != null) {
        if (sale_ == null) {
          sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
        }
        Sale.MergeFrom(other.Sale);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (sale_ == null) {
              sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
            }
            input.ReadMessage(sale_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCashPaymentRequest : pb::IMessage<ReservationFolioSvcPostCashPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest>(() => new ReservationFolioSvcPostCashPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest(ReservationFolioSvcPostCashPaymentRequest other) : this() {
      AmountPaid = other.amountPaid_ != null ? other.AmountPaid.Clone() : null;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest Clone() {
      return new ReservationFolioSvcPostCashPaymentRequest(this);
    }

    /// <summary>Field number for the "amount_paid" field.</summary>
    public const int AmountPaidFieldNumber = 1;
    private global::HOLMS.Types.Primitive.MonetaryAmount amountPaid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AmountPaid {
      get { return amountPaid_; }
      set {
        amountPaid_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCashPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCashPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AmountPaid, other.AmountPaid)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (amountPaid_ != null) hash ^= AmountPaid.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (amountPaid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AmountPaid);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (amountPaid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountPaid);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCashPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.amountPaid_ != null) {
        if (amountPaid_ == null) {
          amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AmountPaid.MergeFrom(other.AmountPaid);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (amountPaid_ == null) {
              amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amountPaid_);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetOnFileCardsResponse : pb::IMessage<ReservationFolioSvcGetOnFileCardsResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetOnFileCardsResponse> _parser = new pb::MessageParser<ReservationFolioSvcGetOnFileCardsResponse>(() => new ReservationFolioSvcGetOnFileCardsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetOnFileCardsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetOnFileCardsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetOnFileCardsResponse(ReservationFolioSvcGetOnFileCardsResponse other) : this() {
      cards_ = other.cards_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetOnFileCardsResponse Clone() {
      return new ReservationFolioSvcGetOnFileCardsResponse(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.GuestPaymentCard> _repeated_cards_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Money.Cards.GuestPaymentCard.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.GuestPaymentCard> cards_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.GuestPaymentCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.GuestPaymentCard> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetOnFileCardsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetOnFileCardsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cards_.WriteTo(output, _repeated_cards_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetOnFileCardsResponse other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostLodgingChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostLodgingChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest>(() => new ReservationFolioSvcPostLodgingChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostLodgingChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 4;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostLodgingChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostIncidentalChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest>(() => new ReservationFolioSvcPostIncidentalChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      IncidentalItem = other.incidentalItem_ != null ? other.IncidentalItem.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostIncidentalChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "incidental_item" field.</summary>
    public const int IncidentalItemFieldNumber = 2;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator incidentalItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator IncidentalItem {
      get { return incidentalItem_; }
      set {
        incidentalItem_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 5;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostIncidentalChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(IncidentalItem, other.IncidentalItem)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (incidentalItem_ != null) hash ^= IncidentalItem.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (incidentalItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IncidentalItem);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(40);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (incidentalItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalItem);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.incidentalItem_ != null) {
        if (incidentalItem_ == null) {
          incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        IncidentalItem.MergeFrom(other.IncidentalItem);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (incidentalItem_ == null) {
              incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(incidentalItem_);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 40: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostMiscChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostMiscChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest>(() => new ReservationFolioSvcPostMiscChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest(ReservationFolioSvcPostMiscChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostMiscChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 4;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostMiscChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostMiscChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostMiscChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPaymentCardRefundRequest : pb::IMessage<ReservationFolioSvcPaymentCardRefundRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest> _parser = new pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest>(() => new ReservationFolioSvcPaymentCardRefundRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest(ReservationFolioSvcPaymentCardRefundRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest Clone() {
      return new ReservationFolioSvcPaymentCardRefundRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPaymentCardRefundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPaymentCardRefundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPaymentCardRefundRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcRefundResponse : pb::IMessage<ReservationFolioSvcRefundResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcRefundResponse> _parser = new pb::MessageParser<ReservationFolioSvcRefundResponse>(() => new ReservationFolioSvcRefundResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcRefundResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcRefundResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcRefundResponse(ReservationFolioSvcRefundResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcRefundResponse Clone() {
      return new ReservationFolioSvcRefundResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcRefundResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcRefundResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcRefundResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcRefundResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcRefundResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcRefundResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcAuthorizationModificationResponse : pb::IMessage<ReservationFolioSvcAuthorizationModificationResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcAuthorizationModificationResponse> _parser = new pb::MessageParser<ReservationFolioSvcAuthorizationModificationResponse>(() => new ReservationFolioSvcAuthorizationModificationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcAuthorizationModificationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcAuthorizationModificationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcAuthorizationModificationResponse(ReservationFolioSvcAuthorizationModificationResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcAuthorizationModificationResponse Clone() {
      return new ReservationFolioSvcAuthorizationModificationResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcAuthorizationModificationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcAuthorizationModificationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcAuthorizationModificationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcAuthorizationModificationResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcAuthorizationModificationRequest : pb::IMessage<ReservationFolioSvcAuthorizationModificationRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcAuthorizationModificationRequest> _parser = new pb::MessageParser<ReservationFolioSvcAuthorizationModificationRequest>(() => new ReservationFolioSvcAuthorizationModificationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcAuthorizationModificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcAuthorizationModificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcAuthorizationModificationRequest(ReservationFolioSvcAuthorizationModificationRequest other) : this() {
      Sale = other.sale_ != null ? other.Sale.Clone() : null;
      ChangeAmount = other.changeAmount_ != null ? other.ChangeAmount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcAuthorizationModificationRequest Clone() {
      return new ReservationFolioSvcAuthorizationModificationRequest(this);
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    /// <summary>Field number for the "change_amount" field.</summary>
    public const int ChangeAmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount changeAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount ChangeAmount {
      get { return changeAmount_; }
      set {
        changeAmount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcAuthorizationModificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcAuthorizationModificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sale, other.Sale)) return false;
      if (!object.Equals(ChangeAmount, other.ChangeAmount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sale_ != null) hash ^= Sale.GetHashCode();
      if (changeAmount_ != null) hash ^= ChangeAmount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sale_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sale);
      }
      if (changeAmount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ChangeAmount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
      }
      if (changeAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangeAmount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcAuthorizationModificationRequest other) {
      if (other == null) {
        return;
      }
      if (other.sale_ != null) {
        if (sale_ == null) {
          sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
        }
        Sale.MergeFrom(other.Sale);
      }
      if (other.changeAmount_ != null) {
        if (changeAmount_ == null) {
          changeAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        ChangeAmount.MergeFrom(other.ChangeAmount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (sale_ == null) {
              sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
            }
            input.ReadMessage(sale_);
            break;
          }
          case 18: {
            if (changeAmount_ == null) {
              changeAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(changeAmount_);
            break;
          }
          case 26: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcCancelPaymentResponse : pb::IMessage<ReservationFolioSvcCancelPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcCancelPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcCancelPaymentResponse>(() => new ReservationFolioSvcCancelPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcCancelPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcCancelPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcCancelPaymentResponse(ReservationFolioSvcCancelPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcCancelPaymentResponse Clone() {
      return new ReservationFolioSvcCancelPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCancelPaymentResponseResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCancelPaymentResponseResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcCancelPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcCancelPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcCancelPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCancelPaymentResponseResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
