// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/rpc/reservation_folio_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio.RPC {

  /// <summary>Holder for reflection information generated from folio/rpc/reservation_folio_svc.proto</summary>
  public static partial class ReservationFolioSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/rpc/reservation_folio_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationFolioSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVmb2xpby9ycGMvcmVzZXJ2YXRpb25fZm9saW9fc3ZjLnByb3RvEhVob2xt",
            "cy50eXBlcy5mb2xpby5ycGMaLmJvb2tpbmcvaW5kaWNhdG9ycy9yZXNlcnZh",
            "dGlvbl9pbmRpY2F0b3IucHJvdG8aLmZvbGlvL2ZvbGlvX2NoZWNrX2Nhc2hf",
            "cGF5bWVudF9pbmRpY2F0b3IucHJvdG8aI2ZvbGlvL3Jlc2VydmF0aW9uX2Zv",
            "bGlvX3N0YXRlLnByb3RvGiVmb2xpby9yZXNlcnZhdGlvbl9mb2xpb19zdW1t",
            "YXJ5LnByb3RvGjxmb2xpby9ycGMvZm9saW9fc3ZjX2F1dGhvcml6YXRpb25f",
            "bW9kaWZpY2F0aW9uX3JlcXVlc3QucHJvdG8aPWZvbGlvL3JwYy9mb2xpb19z",
            "dmNfYXV0aG9yaXphdGlvbl9tb2RpZmljYXRpb25fcmVzcG9uc2UucHJvdG8a",
            "MWZvbGlvL3JwYy9mb2xpb19zdmNfY2FuY2VsX3BheW1lbnRfcmVzcG9uc2Uu",
            "cHJvdG8aNGZvbGlvL3JwYy9mb2xpb19zdmNfZ2V0X29uX2ZpbGVfY2FyZHNf",
            "cmVzcG9uc2UucHJvdG8aNGZvbGlvL3JwYy9mb2xpb19zdmNfcG9zdF9jYXJk",
            "X3BheW1lbnRfcmVzcG9uc2UucHJvdG8aLGZvbGlvL3JwYy9mb2xpb19zdmNf",
            "cG9zdF9jYXNoX3Jlc3BvbnNlLnByb3RvGjVmb2xpby9ycGMvZm9saW9fc3Zj",
            "X3Bvc3RfY2hlY2tfcGF5bWVudF9yZXNwb25zZS5wcm90bxopZm9saW8vcnBj",
            "L2ZvbGlvX3N2Y19yZWZ1bmRfcmVzcG9uc2UucHJvdG8aG2dvb2dsZS9wcm90",
            "b2J1Zi9lbXB0eS5wcm90bxojbW9uZXkvY2FyZHMvY2FyZF9zYWxlX3B1cnBv",
            "c2UucHJvdG8aMW1vbmV5L2NhcmRzL2N1c3RvbWVyX3BheW1lbnRfY2FyZF9p",
            "bmRpY2F0b3IucHJvdG8aKm1vbmV5L2NhcmRzL25vdF9wcmVzZW50X3BheW1l",
            "bnRfY2FyZC5wcm90bxo6bW9uZXkvY2FyZHMvdHJhbnNhY3Rpb25zL2NhcmRf",
            "YXV0aG9yaXphdGlvbl9yZXNwb25zZS5wcm90bxo6bW9uZXkvY2FyZHMvdHJh",
            "bnNhY3Rpb25zL3BheW1lbnRfY2FyZF9zYWxlX2luZGljYXRvci5wcm90bxof",
            "cHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90bxo3c3VwcGx5L2luY2lk",
            "ZW50YWxfaXRlbXMvaW5jaWRlbnRhbF9pdGVtX2luZGljYXRvci5wcm90bxo8",
            "bW9uZXkvY2FyZHMvdHJhbnNhY3Rpb25zL3BheW1lbnRfY2FyZF9yZWZ1bmRf",
            "aW5kaWNhdG9yLnByb3RvIr0CCjlSZXNlcnZhdGlvbkZvbGlvU3ZjQ2FyZEF1",
            "dGhvcml6YXRpb25Gcm9tU3RvcmVkQ2FyZFJlcXVlc3QSSQoLcmVzZXJ2YXRp",
            "b24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVz",
            "ZXJ2YXRpb25JbmRpY2F0b3ISQwoEY2FyZBgCIAEoCzI1LmhvbG1zLnR5cGVz",
            "Lm1vbmV5LmNhcmRzLkN1c3RvbWVyUGF5bWVudENhcmRJbmRpY2F0b3ISNQoG",
            "YW1vdW50GAMgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5",
            "QW1vdW50EjkKB3B1cnBvc2UYBCABKAsyKC5ob2xtcy50eXBlcy5tb25leS5j",
            "YXJkcy5DYXJkU2FsZVB1cnBvc2UidAomUmVzZXJ2YXRpb25Gb2xpb1N2Y0dl",
            "dFN1bW1hcmllc1JlcXVlc3QSSgoMcmVzZXJ2YXRpb25zGAEgAygLMjQuaG9s",
            "bXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNh",
            "dG9yImgKJ1Jlc2VydmF0aW9uRm9saW9TdmNHZXRTdW1tYXJpZXNSZXNwb25z",
            "ZRI9CglzdW1tYXJpZXMYASADKAsyKi5ob2xtcy50eXBlcy5mb2xpby5SZXNl",
            "cnZhdGlvbkZvbGlvU3VtbWFyeSK4AQooUmVzZXJ2YXRpb25Gb2xpb1N2Y0dl",
            "dEZvbGlvU3RhdGVSZXNwb25zZRJNCgZyZXN1bHQYASABKA4yPS5ob2xtcy50",
            "eXBlcy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y0dldEZvbGlvU3Rh",
            "dGVSZXN1bHQSPQoLZm9saW9fc3RhdGUYAiABKAsyKC5ob2xtcy50eXBlcy5m",
            "b2xpby5SZXNlcnZhdGlvbkZvbGlvU3RhdGUirgEKKlJlc2VydmF0aW9uRm9s",
            "aW9TdmNQb3N0Q2hlY2tQYXltZW50UmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgB",
            "IAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZh",
            "dGlvbkluZGljYXRvchI1CgZhbW91bnQYAiABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQi5gEKJ0NhcmRBdXRob3JpemF0aW9u",
            "RnJvbVByZXNlbnRDYXJkUmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgBIAEoCzI0",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbklu",
            "ZGljYXRvchI1CgZhbW91bnQYAiABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRp",
            "dmUuTW9uZXRhcnlBbW91bnQSOQoHcHVycG9zZRgDIAEoCzIoLmhvbG1zLnR5",
            "cGVzLm1vbmV5LmNhcmRzLkNhcmRTYWxlUHVycG9zZSKnAgoqQ2FyZEF1dGhv",
            "cml6YXRpb25Gcm9tTm90UHJlc2VudENhcmRSZXF1ZXN0EkkKC3Jlc2VydmF0",
            "aW9uGAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJl",
            "c2VydmF0aW9uSW5kaWNhdG9yEjwKBGNhcmQYAiABKAsyLi5ob2xtcy50eXBl",
            "cy5tb25leS5jYXJkcy5Ob3RQcmVzZW50UGF5bWVudENhcmQSNQoGYW1vdW50",
            "GAMgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50",
            "EjkKB3B1cnBvc2UYBCABKAsyKC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5D",
            "YXJkU2FsZVB1cnBvc2UitgIKKVJlc2VydmF0aW9uRm9saW9TdmNQb3N0Q2Fy",
            "ZFBheW1lbnRSZXF1ZXN0EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQuaG9sbXMu",
            "dHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9y",
            "EkwKBHNhbGUYAiABKAsyPi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFu",
            "c2FjdGlvbnMuUGF5bWVudENhcmRTYWxlSW5kaWNhdG9yEjUKBmFtb3VudBgD",
            "IAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI5",
            "CgdwdXJwb3NlGAQgASgLMiguaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuQ2Fy",
            "ZFNhbGVQdXJwb3NlIrIBCilSZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENhc2hQ",
            "YXltZW50UmVxdWVzdBI6CgthbW91bnRfcGFpZBgBIAEoCzIlLmhvbG1zLnR5",
            "cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBJJCgtyZXNlcnZhdGlvbhgC",
            "IAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZh",
            "dGlvbkluZGljYXRvciKsAQooUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDYXNo",
            "UmVmdW5kUmVxdWVzdBI1CgZhbW91bnQYASABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQSSQoLcmVzZXJ2YXRpb24YAiABKAsy",
            "NC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25J",
            "bmRpY2F0b3IigAIKNVJlc2VydmF0aW9uRm9saW9TdmNQb3N0TG9kZ2luZ0No",
            "YXJnZUNvcnJlY3Rpb25SZXF1ZXN0EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5k",
            "aWNhdG9yEhMKC2Rlc2NyaXB0aW9uGAIgASgJEkIKE2FkanVzdG1lbnRfc3Vi",
            "dG90YWwYAyABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlB",
            "bW91bnQSIwobYWRqdXN0bWVudF90YWtlbl9mcm9tX2d1ZXN0GAQgASgIItoC",
            "CjhSZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdEluY2lkZW50YWxDaGFyZ2VDb3Jy",
            "ZWN0aW9uUmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchJV",
            "Cg9pbmNpZGVudGFsX2l0ZW0YAiABKAsyPC5ob2xtcy50eXBlcy5zdXBwbHku",
            "aW5jaWRlbnRhbF9pdGVtcy5JbmNpZGVudGFsSXRlbUluZGljYXRvchITCgtk",
            "ZXNjcmlwdGlvbhgDIAEoCRJCChNhZGp1c3RtZW50X3N1YnRvdGFsGAQgASgL",
            "MiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EiMKG2Fk",
            "anVzdG1lbnRfdGFrZW5fZnJvbV9ndWVzdBgFIAEoCCL9AQoyUmVzZXJ2YXRp",
            "b25Gb2xpb1N2Y1Bvc3RNaXNjQ2hhcmdlQ29ycmVjdGlvblJlcXVlc3QSSQoL",
            "cmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGlj",
            "YXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISEwoLZGVzY3JpcHRpb24YAiAB",
            "KAkSQgoTYWRqdXN0bWVudF9zdWJ0b3RhbBgDIAEoCzIlLmhvbG1zLnR5cGVz",
            "LnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBIjChthZGp1c3RtZW50X3Rha2Vu",
            "X2Zyb21fZ3Vlc3QYBCABKAgiiQIKK1Jlc2VydmF0aW9uRm9saW9TdmNQYXlt",
            "ZW50Q2FyZFJlZnVuZFJlcXVlc3QSSQoLcmVzZXJ2YXRpb24YASABKAsyNC5o",
            "b2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRp",
            "Y2F0b3ISNQoGYW1vdW50GAIgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZl",
            "Lk1vbmV0YXJ5QW1vdW50EkMKBGNhcmQYAyABKAsyNS5ob2xtcy50eXBlcy5t",
            "b25leS5jYXJkcy5DdXN0b21lclBheW1lbnRDYXJkSW5kaWNhdG9yEhMKC2Rl",
            "c2NyaXB0aW9uGAQgASgJKpcBCiZSZXNlcnZhdGlvbkZvbGlvU3ZjR2V0Rm9s",
            "aW9TdGF0ZVJlc3VsdBIsCihSRVNFUlZBVElPTl9GT0xJT19TVkNfR0VUX0ZP",
            "TElPX1NUQVRFX09LEAASPwo7UkVTRVJWQVRJT05fRk9MSU9fU1ZDX0dFVF9G",
            "T0xJT19TVEFURV9NSVNTSU5HX0hPVVNFX0FDQ09VTlQQATK8FgoTUmVzZXJ2",
            "YXRpb25Gb2xpb1N2YxKRAQoYR2V0UmVzZXJ2YXRpb25Gb2xpb1N0YXRlEjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5k",
            "aWNhdG9yGj8uaG9sbXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9uRm9s",
            "aW9TdmNHZXRGb2xpb1N0YXRlUmVzcG9uc2USfQoOR2V0T25GaWxlQ2FyZHMS",
            "NC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25J",
            "bmRpY2F0b3IaNS5ob2xtcy50eXBlcy5mb2xpby5ycGMuRm9saW9TdmNHZXRP",
            "bkZpbGVDYXJkc1Jlc3BvbnNlEoMBChRHZXRPbkZpbGVDYXJkc0ZvckdTQRI0",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbklu",
            "ZGljYXRvcho1LmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5Gb2xpb1N2Y0dldE9u",
            "RmlsZUNhcmRzUmVzcG9uc2USkgEKEUdldEZvbGlvU3VtbWFyaWVzEj0uaG9s",
            "bXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0aW9uRm9saW9TdmNHZXRTdW1t",
            "YXJpZXNSZXF1ZXN0Gj4uaG9sbXMudHlwZXMuZm9saW8ucnBjLlJlc2VydmF0",
            "aW9uRm9saW9TdmNHZXRTdW1tYXJpZXNSZXNwb25zZRK3AQoiQWRkQ2FyZEF1",
            "dGhvcml6YXRpb25Gcm9tU3RvcmVkQ2FyZBJQLmhvbG1zLnR5cGVzLmZvbGlv",
            "LnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjQ2FyZEF1dGhvcml6YXRpb25Gcm9t",
            "U3RvcmVkQ2FyZFJlcXVlc3QaPy5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50",
            "cmFuc2FjdGlvbnMuQ2FyZEF1dGhvcml6YXRpb25SZXNwb25zZRKoAQolQWRk",
            "Q2FyZEF1dGhvcml6YXRpb25Gcm9tUHJlc2VudGVkQ2FyZBI+LmhvbG1zLnR5",
            "cGVzLmZvbGlvLnJwYy5DYXJkQXV0aG9yaXphdGlvbkZyb21QcmVzZW50Q2Fy",
            "ZFJlcXVlc3QaPy5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlv",
            "bnMuQ2FyZEF1dGhvcml6YXRpb25SZXNwb25zZRKsAQomQWRkQ2FyZEF1dGhv",
            "cml6YXRpb25Gcm9tTm90UHJlc2VudENhcmQSQS5ob2xtcy50eXBlcy5mb2xp",
            "by5ycGMuQ2FyZEF1dGhvcml6YXRpb25Gcm9tTm90UHJlc2VudENhcmRSZXF1",
            "ZXN0Gj8uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLkNh",
            "cmRBdXRob3JpemF0aW9uUmVzcG9uc2USngEKGUNoYW5nZUF1dGhvcml6YXRp",
            "b25BbW91bnQSPy5ob2xtcy50eXBlcy5mb2xpby5ycGMuRm9saW9TdmNBdXRo",
            "b3JpemF0aW9uTW9kaWZpY2F0aW9uUmVxdWVzdBpALmhvbG1zLnR5cGVzLmZv",
            "bGlvLnJwYy5Gb2xpb1N2Y0F1dGhvcml6YXRpb25Nb2RpZmljYXRpb25SZXNw",
            "b25zZRKLAQoPUG9zdENhcmRQYXltZW50EkAuaG9sbXMudHlwZXMuZm9saW8u",
            "cnBjLlJlc2VydmF0aW9uRm9saW9TdmNQb3N0Q2FyZFBheW1lbnRSZXF1ZXN0",
            "GjYuaG9sbXMudHlwZXMuZm9saW8ucnBjLkZvbGlvU3ZjUG9zdENhcmRQYXlt",
            "ZW50UmVzcG9uc2USjgEKEFBvc3RDaGVja1BheW1lbnQSQS5ob2xtcy50eXBl",
            "cy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDaGVja1BheW1l",
            "bnRSZXF1ZXN0GjcuaG9sbXMudHlwZXMuZm9saW8ucnBjLkZvbGlvU3ZjUG9z",
            "dENoZWNrUGF5bWVudFJlc3BvbnNlEoQBCg9Qb3N0Q2FzaFBheW1lbnQSQC5o",
            "b2xtcy50eXBlcy5mb2xpby5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RD",
            "YXNoUGF5bWVudFJlcXVlc3QaLy5ob2xtcy50eXBlcy5mb2xpby5ycGMuRm9s",
            "aW9TdmNQb3N0Q2FzaFJlc3BvbnNlEmMKFkNhbmNlbENhc2hDaGVja1BheW1l",
            "bnQSMS5ob2xtcy50eXBlcy5mb2xpby5Gb2xpb0NoZWNrQ2FzaFBheW1lbnRJ",
            "bmRpY2F0b3IaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSiQEKEUNhbmNlbENh",
            "cmRQYXltZW50Ej4uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rp",
            "b25zLlBheW1lbnRDYXJkU2FsZUluZGljYXRvcho0LmhvbG1zLnR5cGVzLmZv",
            "bGlvLnJwYy5Gb2xpb1N2Y0NhbmNlbFBheW1lbnRSZXNwb25zZRKIAQoTUmVm",
            "dW5kVG9rZW5pemVkQ2FyZBJCLmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5SZXNl",
            "cnZhdGlvbkZvbGlvU3ZjUGF5bWVudENhcmRSZWZ1bmRSZXF1ZXN0Gi0uaG9s",
            "bXMudHlwZXMuZm9saW8ucnBjLkZvbGlvU3ZjUmVmdW5kUmVzcG9uc2USggEK",
            "DlBvc3RDYXNoUmVmdW5kEj8uaG9sbXMudHlwZXMuZm9saW8ucnBjLlJlc2Vy",
            "dmF0aW9uRm9saW9TdmNQb3N0Q2FzaFJlZnVuZFJlcXVlc3QaLy5ob2xtcy50",
            "eXBlcy5mb2xpby5ycGMuRm9saW9TdmNQb3N0Q2FzaFJlc3BvbnNlEoMBChtQ",
            "b3N0TG9kZ2luZ0NoYXJnZUNvcnJlY3Rpb24STC5ob2xtcy50eXBlcy5mb2xp",
            "by5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RMb2RnaW5nQ2hhcmdlQ29y",
            "cmVjdGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSiQEKHlBv",
            "c3RJbmNpZGVudGFsQ2hhcmdlQ29ycmVjdGlvbhJPLmhvbG1zLnR5cGVzLmZv",
            "bGlvLnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdEluY2lkZW50YWxDaGFy",
            "Z2VDb3JyZWN0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJ9",
            "ChhQb3N0TWlzY0NoYXJnZUNvcnJlY3Rpb24SSS5ob2xtcy50eXBlcy5mb2xp",
            "by5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RNaXNjQ2hhcmdlQ29ycmVj",
            "dGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSigEKEENhbmNl",
            "bENhcmRSZWZ1bmQSQC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2Fj",
            "dGlvbnMuUGF5bWVudENhcmRSZWZ1bmRJbmRpY2F0b3IaNC5ob2xtcy50eXBl",
            "cy5mb2xpby5ycGMuRm9saW9TdmNDYW5jZWxQYXltZW50UmVzcG9uc2USfQoO",
            "U29mdERlbGV0ZUNhcmQSNS5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DdXN0",
            "b21lclBheW1lbnRDYXJkSW5kaWNhdG9yGjQuaG9sbXMudHlwZXMuZm9saW8u",
            "cnBjLkZvbGlvU3ZjQ2FuY2VsUGF5bWVudFJlc3BvbnNlQhiqAhVIT0xNUy5U",
            "eXBlcy5Gb2xpby5SUENiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Folio.FolioCheckCashPaymentIndicatorReflection.Descriptor, global::HOLMS.Types.Folio.ReservationFolioStateReflection.Descriptor, global::HOLMS.Types.Folio.ReservationFolioSummaryReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcAuthorizationModificationRequestReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcAuthorizationModificationResponseReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcCancelPaymentResponseReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcGetOnFileCardsResponseReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcPostCardPaymentResponseReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcPostCashResponseReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcPostCheckPaymentResponseReflection.Descriptor, global::HOLMS.Types.Folio.RPC.FolioSvcRefundResponseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardSalePurposeReflection.Descriptor, global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.NotPresentPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.CardAuthorizationResponseReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefundIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCardAuthorizationFromStoredCardRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcCardAuthorizationFromStoredCardRequest.Parser, new[]{ "Reservation", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetSummariesRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetSummariesRequest.Parser, new[]{ "Reservations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetSummariesResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetSummariesResponse.Parser, new[]{ "Summaries" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResponse), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResponse.Parser, new[]{ "Result", "FolioState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCheckPaymentRequest.Parser, new[]{ "Reservation", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.CardAuthorizationFromPresentCardRequest), global::HOLMS.Types.Folio.RPC.CardAuthorizationFromPresentCardRequest.Parser, new[]{ "Reservation", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.CardAuthorizationFromNotPresentCardRequest), global::HOLMS.Types.Folio.RPC.CardAuthorizationFromNotPresentCardRequest.Parser, new[]{ "Reservation", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCardPaymentRequest.Parser, new[]{ "Reservation", "Sale", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashPaymentRequest.Parser, new[]{ "AmountPaid", "Reservation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashRefundRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostCashRefundRequest.Parser, new[]{ "Amount", "Reservation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostLodgingChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostLodgingChargeCorrectionRequest.Parser, new[]{ "Reservation", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostIncidentalChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostIncidentalChargeCorrectionRequest.Parser, new[]{ "Reservation", "IncidentalItem", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostMiscChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPostMiscChargeCorrectionRequest.Parser, new[]{ "Reservation", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPaymentCardRefundRequest), global::HOLMS.Types.Folio.RPC.ReservationFolioSvcPaymentCardRefundRequest.Parser, new[]{ "Reservation", "Amount", "Card", "Description" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReservationFolioSvcGetFolioStateResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_OK")] ReservationFolioSvcGetFolioStateOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcGetFolioStateMissingHouseAccount = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ReservationFolioSvcCardAuthorizationFromStoredCardRequest : pb::IMessage<ReservationFolioSvcCardAuthorizationFromStoredCardRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcCardAuthorizationFromStoredCardRequest> _parser = new pb::MessageParser<ReservationFolioSvcCardAuthorizationFromStoredCardRequest>(() => new ReservationFolioSvcCardAuthorizationFromStoredCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcCardAuthorizationFromStoredCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcCardAuthorizationFromStoredCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcCardAuthorizationFromStoredCardRequest(ReservationFolioSvcCardAuthorizationFromStoredCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcCardAuthorizationFromStoredCardRequest Clone() {
      return new ReservationFolioSvcCardAuthorizationFromStoredCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcCardAuthorizationFromStoredCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcCardAuthorizationFromStoredCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcCardAuthorizationFromStoredCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetSummariesRequest : pb::IMessage<ReservationFolioSvcGetSummariesRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetSummariesRequest> _parser = new pb::MessageParser<ReservationFolioSvcGetSummariesRequest>(() => new ReservationFolioSvcGetSummariesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetSummariesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetSummariesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetSummariesRequest(ReservationFolioSvcGetSummariesRequest other) : this() {
      reservations_ = other.reservations_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetSummariesRequest Clone() {
      return new ReservationFolioSvcGetSummariesRequest(this);
    }

    /// <summary>Field number for the "reservations" field.</summary>
    public const int ReservationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> _repeated_reservations_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Indicators.ReservationIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> reservations_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.ReservationIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> Reservations {
      get { return reservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetSummariesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetSummariesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reservations_.Equals(other.reservations_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reservations_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reservations_.WriteTo(output, _repeated_reservations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reservations_.CalculateSize(_repeated_reservations_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetSummariesRequest other) {
      if (other == null) {
        return;
      }
      reservations_.Add(other.reservations_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            reservations_.AddEntriesFrom(input, _repeated_reservations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetSummariesResponse : pb::IMessage<ReservationFolioSvcGetSummariesResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetSummariesResponse> _parser = new pb::MessageParser<ReservationFolioSvcGetSummariesResponse>(() => new ReservationFolioSvcGetSummariesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetSummariesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetSummariesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetSummariesResponse(ReservationFolioSvcGetSummariesResponse other) : this() {
      summaries_ = other.summaries_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetSummariesResponse Clone() {
      return new ReservationFolioSvcGetSummariesResponse(this);
    }

    /// <summary>Field number for the "summaries" field.</summary>
    public const int SummariesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.ReservationFolioSummary> _repeated_summaries_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.ReservationFolioSummary.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.ReservationFolioSummary> summaries_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.ReservationFolioSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.ReservationFolioSummary> Summaries {
      get { return summaries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetSummariesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetSummariesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!summaries_.Equals(other.summaries_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= summaries_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      summaries_.WriteTo(output, _repeated_summaries_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += summaries_.CalculateSize(_repeated_summaries_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetSummariesResponse other) {
      if (other == null) {
        return;
      }
      summaries_.Add(other.summaries_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            summaries_.AddEntriesFrom(input, _repeated_summaries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetFolioStateResponse : pb::IMessage<ReservationFolioSvcGetFolioStateResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetFolioStateResponse> _parser = new pb::MessageParser<ReservationFolioSvcGetFolioStateResponse>(() => new ReservationFolioSvcGetFolioStateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetFolioStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse(ReservationFolioSvcGetFolioStateResponse other) : this() {
      result_ = other.result_;
      FolioState = other.folioState_ != null ? other.FolioState.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse Clone() {
      return new ReservationFolioSvcGetFolioStateResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "folio_state" field.</summary>
    public const int FolioStateFieldNumber = 2;
    private global::HOLMS.Types.Folio.ReservationFolioState folioState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.ReservationFolioState FolioState {
      get { return folioState_; }
      set {
        folioState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetFolioStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetFolioStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(FolioState, other.FolioState)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (folioState_ != null) hash ^= FolioState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (folioState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FolioState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (folioState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolioState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetFolioStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.folioState_ != null) {
        if (folioState_ == null) {
          folioState_ = new global::HOLMS.Types.Folio.ReservationFolioState();
        }
        FolioState.MergeFrom(other.FolioState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.ReservationFolioSvcGetFolioStateResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (folioState_ == null) {
              folioState_ = new global::HOLMS.Types.Folio.ReservationFolioState();
            }
            input.ReadMessage(folioState_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCheckPaymentRequest : pb::IMessage<ReservationFolioSvcPostCheckPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest>(() => new ReservationFolioSvcPostCheckPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest(ReservationFolioSvcPostCheckPaymentRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest Clone() {
      return new ReservationFolioSvcPostCheckPaymentRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCheckPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCheckPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCheckPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromPresentCardRequest : pb::IMessage<CardAuthorizationFromPresentCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromPresentCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromPresentCardRequest>(() => new CardAuthorizationFromPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest(CardAuthorizationFromPresentCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest Clone() {
      return new CardAuthorizationFromPresentCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromNotPresentCardRequest : pb::IMessage<CardAuthorizationFromNotPresentCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromNotPresentCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromNotPresentCardRequest>(() => new CardAuthorizationFromNotPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromNotPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest(CardAuthorizationFromNotPresentCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest Clone() {
      return new CardAuthorizationFromNotPresentCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.NotPresentPaymentCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.NotPresentPaymentCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromNotPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromNotPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromNotPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCardPaymentRequest : pb::IMessage<ReservationFolioSvcPostCardPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest>(() => new ReservationFolioSvcPostCardPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest(ReservationFolioSvcPostCardPaymentRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Sale = other.sale_ != null ? other.Sale.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest Clone() {
      return new ReservationFolioSvcPostCardPaymentRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCardPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCardPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Sale, other.Sale)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (sale_ != null) hash ^= Sale.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (sale_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sale);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (sale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCardPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.sale_ != null) {
        if (sale_ == null) {
          sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
        }
        Sale.MergeFrom(other.Sale);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (sale_ == null) {
              sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
            }
            input.ReadMessage(sale_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCashPaymentRequest : pb::IMessage<ReservationFolioSvcPostCashPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest>(() => new ReservationFolioSvcPostCashPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest(ReservationFolioSvcPostCashPaymentRequest other) : this() {
      AmountPaid = other.amountPaid_ != null ? other.AmountPaid.Clone() : null;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest Clone() {
      return new ReservationFolioSvcPostCashPaymentRequest(this);
    }

    /// <summary>Field number for the "amount_paid" field.</summary>
    public const int AmountPaidFieldNumber = 1;
    private global::HOLMS.Types.Primitive.MonetaryAmount amountPaid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AmountPaid {
      get { return amountPaid_; }
      set {
        amountPaid_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCashPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCashPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AmountPaid, other.AmountPaid)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (amountPaid_ != null) hash ^= AmountPaid.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (amountPaid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AmountPaid);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (amountPaid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountPaid);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCashPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.amountPaid_ != null) {
        if (amountPaid_ == null) {
          amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AmountPaid.MergeFrom(other.AmountPaid);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (amountPaid_ == null) {
              amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amountPaid_);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCashRefundRequest : pb::IMessage<ReservationFolioSvcPostCashRefundRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCashRefundRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCashRefundRequest>(() => new ReservationFolioSvcPostCashRefundRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCashRefundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashRefundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashRefundRequest(ReservationFolioSvcPostCashRefundRequest other) : this() {
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashRefundRequest Clone() {
      return new ReservationFolioSvcPostCashRefundRequest(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCashRefundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCashRefundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (amount_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Amount);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCashRefundRequest other) {
      if (other == null) {
        return;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostLodgingChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostLodgingChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest>(() => new ReservationFolioSvcPostLodgingChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostLodgingChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 4;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostLodgingChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostIncidentalChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest>(() => new ReservationFolioSvcPostIncidentalChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      IncidentalItem = other.incidentalItem_ != null ? other.IncidentalItem.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostIncidentalChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "incidental_item" field.</summary>
    public const int IncidentalItemFieldNumber = 2;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator incidentalItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator IncidentalItem {
      get { return incidentalItem_; }
      set {
        incidentalItem_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 5;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostIncidentalChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(IncidentalItem, other.IncidentalItem)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (incidentalItem_ != null) hash ^= IncidentalItem.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (incidentalItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IncidentalItem);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(40);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (incidentalItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalItem);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.incidentalItem_ != null) {
        if (incidentalItem_ == null) {
          incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        IncidentalItem.MergeFrom(other.IncidentalItem);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (incidentalItem_ == null) {
              incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(incidentalItem_);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 40: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostMiscChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostMiscChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest>(() => new ReservationFolioSvcPostMiscChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest(ReservationFolioSvcPostMiscChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostMiscChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 4;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostMiscChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostMiscChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostMiscChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPaymentCardRefundRequest : pb::IMessage<ReservationFolioSvcPaymentCardRefundRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest> _parser = new pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest>(() => new ReservationFolioSvcPaymentCardRefundRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest(ReservationFolioSvcPaymentCardRefundRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest Clone() {
      return new ReservationFolioSvcPaymentCardRefundRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPaymentCardRefundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPaymentCardRefundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPaymentCardRefundRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.CustomerPaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
