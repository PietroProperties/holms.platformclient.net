// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/rpc/reservation_folio_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.RPC {

  /// <summary>Holder for reflection information generated from money/rpc/reservation_folio_svc.proto</summary>
  public static partial class ReservationFolioSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for money/rpc/reservation_folio_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationFolioSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVtb25leS9ycGMvcmVzZXJ2YXRpb25fZm9saW9fc3ZjLnByb3RvEhVob2xt",
            "cy50eXBlcy5tb25leS5ycGMaLmJvb2tpbmcvaW5kaWNhdG9ycy9yZXNlcnZh",
            "dGlvbl9pbmRpY2F0b3IucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5w",
            "cm90bxosbW9uZXkvY2FyZHMvY2FyZF9hdXRob3JpemF0aW9uX3B1cnBvc2Uu",
            "cHJvdG8aOm1vbmV5L2NhcmRzL3RyYW5zYWN0aW9ucy9jYXJkX2F1dGhvcml6",
            "YXRpb25fcmVzcG9uc2UucHJvdG8aQ21vbmV5L2NhcmRzL3RyYW5zYWN0aW9u",
            "cy9wYXltZW50X2NhcmRfYXV0aG9yaXphdGlvbl9pbmRpY2F0b3IucHJvdG8a",
            "Km1vbmV5L2NhcmRzL25vdF9wcmVzZW50X3BheW1lbnRfY2FyZC5wcm90bxoo",
            "bW9uZXkvY2FyZHMvcGF5bWVudF9jYXJkX2luZGljYXRvci5wcm90bxoobW9u",
            "ZXkvY2FyZHMvdG9rZW5pemVkX3BheW1lbnRfY2FyZC5wcm90bxodbW9uZXkv",
            "Zm9saW8vZm9saW9fc3RhdGUucHJvdG8aH3ByaW1pdGl2ZS9tb25ldGFyeV9h",
            "bW91bnQucHJvdG8aN3N1cHBseS9pbmNpZGVudGFsX2l0ZW1zL2luY2lkZW50",
            "YWxfaXRlbV9pbmRpY2F0b3IucHJvdG8idQomUmVzZXJ2YXRpb25Gb2xpb1N2",
            "Y1Bvc3RDaGFyZ2VzUmVzcG9uc2USSwoGcmVzdWx0GAEgASgOMjsuaG9sbXMu",
            "dHlwZXMubW9uZXkucnBjLlJlc2VydmF0aW9uRm9saW9TdmNQb3N0Q2hhcmdl",
            "c1Jlc3VsdCKzAQooUmVzZXJ2YXRpb25Gb2xpb1N2Y0dldEZvbGlvU3RhdGVS",
            "ZXNwb25zZRJNCgZyZXN1bHQYASABKA4yPS5ob2xtcy50eXBlcy5tb25leS5y",
            "cGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y0dldEZvbGlvU3RhdGVSZXN1bHQSOAoL",
            "Zm9saW9fc3RhdGUYAiABKAsyIy5ob2xtcy50eXBlcy5tb25leS5mb2xpby5G",
            "b2xpb1N0YXRlIn0KKlJlc2VydmF0aW9uRm9saW9TdmNQb3N0Q2FzaFBheW1l",
            "bnRSZXNwb25zZRJPCgZyZXN1bHQYASABKA4yPy5ob2xtcy50eXBlcy5tb25l",
            "eS5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDYXNoUGF5bWVudFJlc3Vs",
            "dCJ/CitSZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENoZWNrUGF5bWVudFJlc3Bv",
            "bnNlElAKBnJlc3VsdBgBIAEoDjJALmhvbG1zLnR5cGVzLm1vbmV5LnJwYy5S",
            "ZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENoZWNrUGF5bWVudFJlc3VsdCKuAQoq",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDaGVja1BheW1lbnRSZXF1ZXN0EkkK",
            "C3Jlc2VydmF0aW9uGAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRp",
            "Y2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yEjUKBmFtb3VudBgCIAEoCzIl",
            "LmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudCKmAgohQ2Fy",
            "ZEF1dGhvcml6YXRpb25Gcm9tVG9rZW5SZXF1ZXN0EkkKC3Jlc2VydmF0aW9u",
            "GAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2Vy",
            "dmF0aW9uSW5kaWNhdG9yEjsKBGNhcmQYAiABKAsyLS5ob2xtcy50eXBlcy5t",
            "b25leS5jYXJkcy5QYXltZW50Q2FyZEluZGljYXRvchI1CgZhbW91bnQYAyAB",
            "KAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSQgoH",
            "cHVycG9zZRgEIAEoDjIxLmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLkNhcmRB",
            "dXRob3JpemF0aW9uUHVycG9zZSLvAQonQ2FyZEF1dGhvcml6YXRpb25Gcm9t",
            "UHJlc2VudENhcmRSZXF1ZXN0EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQuaG9s",
            "bXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNh",
            "dG9yEjUKBmFtb3VudBgCIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5N",
            "b25ldGFyeUFtb3VudBJCCgdwdXJwb3NlGAMgASgOMjEuaG9sbXMudHlwZXMu",
            "bW9uZXkuY2FyZHMuQ2FyZEF1dGhvcml6YXRpb25QdXJwb3NlIrACCipDYXJk",
            "QXV0aG9yaXphdGlvbkZyb21Ob3RQcmVzZW50Q2FyZFJlcXVlc3QSSQoLcmVz",
            "ZXJ2YXRpb24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRv",
            "cnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISPAoEY2FyZBgCIAEoCzIuLmhvbG1z",
            "LnR5cGVzLm1vbmV5LmNhcmRzLk5vdFByZXNlbnRQYXltZW50Q2FyZBI1CgZh",
            "bW91bnQYAyABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlB",
            "bW91bnQSQgoHcHVycG9zZRgEIAEoDjIxLmhvbG1zLnR5cGVzLm1vbmV5LmNh",
            "cmRzLkNhcmRBdXRob3JpemF0aW9uUHVycG9zZSJ9CipSZXNlcnZhdGlvbkZv",
            "bGlvU3ZjUG9zdENhcmRQYXltZW50UmVzcG9uc2USTwoGcmVzdWx0GAEgASgO",
            "Mj8uaG9sbXMudHlwZXMubW9uZXkucnBjLlJlc2VydmF0aW9uRm9saW9TdmNQ",
            "b3N0Q2FyZFBheW1lbnRSZXN1bHQijQIKKVJlc2VydmF0aW9uRm9saW9TdmNQ",
            "b3N0Q2FyZFBheW1lbnRSZXF1ZXN0EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5k",
            "aWNhdG9yEl4KDWF1dGhvcml6YXRpb24YAiABKAsyRy5ob2xtcy50eXBlcy5t",
            "b25leS5jYXJkcy50cmFuc2FjdGlvbnMuUGF5bWVudENhcmRBdXRob3JpemF0",
            "aW9uSW5kaWNhdG9yEjUKBmFtb3VudBgDIAEoCzIlLmhvbG1zLnR5cGVzLnBy",
            "aW1pdGl2ZS5Nb25ldGFyeUFtb3VudCKyAQopUmVzZXJ2YXRpb25Gb2xpb1N2",
            "Y1Bvc3RDYXNoUGF5bWVudFJlcXVlc3QSOgoLYW1vdW50X3BhaWQYASABKAsy",
            "JS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSSQoLcmVz",
            "ZXJ2YXRpb24YAiABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRv",
            "cnMuUmVzZXJ2YXRpb25JbmRpY2F0b3IiaQopUmVzZXJ2YXRpb25Gb2xpb1N2",
            "Y0dldE9uRmlsZUNhcmRzUmVzcG9uc2USPAoFY2FyZHMYASADKAsyLS5ob2xt",
            "cy50eXBlcy5tb25leS5jYXJkcy5Ub2tlbml6ZWRQYXltZW50Q2FyZCKAAgo1",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RMb2RnaW5nQ2hhcmdlQ29ycmVjdGlv",
            "blJlcXVlc3QSSQoLcmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50eXBlcy5i",
            "b29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISEwoLZGVz",
            "Y3JpcHRpb24YAiABKAkSQgoTYWRqdXN0bWVudF9zdWJ0b3RhbBgDIAEoCzIl",
            "LmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBIjChthZGp1",
            "c3RtZW50X3Rha2VuX2Zyb21fZ3Vlc3QYBCABKAgi2gIKOFJlc2VydmF0aW9u",
            "Rm9saW9TdmNQb3N0SW5jaWRlbnRhbENoYXJnZUNvcnJlY3Rpb25SZXF1ZXN0",
            "EkkKC3Jlc2VydmF0aW9uGAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5p",
            "bmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yElUKD2luY2lkZW50YWxf",
            "aXRlbRgCIAEoCzI8LmhvbG1zLnR5cGVzLnN1cHBseS5pbmNpZGVudGFsX2l0",
            "ZW1zLkluY2lkZW50YWxJdGVtSW5kaWNhdG9yEhMKC2Rlc2NyaXB0aW9uGAMg",
            "ASgJEkIKE2FkanVzdG1lbnRfc3VidG90YWwYBCABKAsyJS5ob2xtcy50eXBl",
            "cy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSIwobYWRqdXN0bWVudF90YWtl",
            "bl9mcm9tX2d1ZXN0GAUgASgIIv0BCjJSZXNlcnZhdGlvbkZvbGlvU3ZjUG9z",
            "dE1pc2NDaGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgB",
            "IAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZh",
            "dGlvbkluZGljYXRvchITCgtkZXNjcmlwdGlvbhgCIAEoCRJCChNhZGp1c3Rt",
            "ZW50X3N1YnRvdGFsGAMgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1v",
            "bmV0YXJ5QW1vdW50EiMKG2FkanVzdG1lbnRfdGFrZW5fZnJvbV9ndWVzdBgE",
            "IAEoCCLYAQorUmVzZXJ2YXRpb25Gb2xpb1N2Y1ZvaWRBdXRob3JpemF0aW9u",
            "UmVxdWVzdBJeCg1hdXRob3JpemF0aW9uGAEgASgLMkcuaG9sbXMudHlwZXMu",
            "bW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLlBheW1lbnRDYXJkQXV0aG9yaXph",
            "dGlvbkluZGljYXRvchJJCgtyZXNlcnZhdGlvbhgCIAEoCzI0LmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRvciKB",
            "AQosUmVzZXJ2YXRpb25Gb2xpb1N2Y1ZvaWRBdXRob3JpemF0aW9uUmVzcG9u",
            "c2USUQoGcmVzdWx0GAEgASgOMkEuaG9sbXMudHlwZXMubW9uZXkucnBjLlJl",
            "c2VydmF0aW9uRm9saW9TdmNWb2lkQXV0aG9yaXphdGlvblJlc3VsdCKBAgor",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y1BheW1lbnRDYXJkUmVmdW5kUmVxdWVzdBJJ",
            "CgtyZXNlcnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5k",
            "aWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchI1CgZhbW91bnQYAiABKAsy",
            "JS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSOwoEY2Fy",
            "ZBgDIAEoCzItLmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLlBheW1lbnRDYXJk",
            "SW5kaWNhdG9yEhMKC2Rlc2NyaXB0aW9uGAQgASgJImsKIVJlc2VydmF0aW9u",
            "Rm9saW9TdmNSZWZ1bmRSZXNwb25zZRJGCgZyZXN1bHQYASABKA4yNi5ob2xt",
            "cy50eXBlcy5tb25leS5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1JlZnVuZFJl",
            "c3VsdCrgAQokUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDaGFyZ2VzUmVzdWx0",
            "EjAKLFJFU0VSVkFUSU9OX0ZPTElPX1NWQ19QT1NUX0NIQVJHRVNfUkVTVUxU",
            "X09LEAASQwo/UkVTRVJWQVRJT05fRk9MSU9fU1ZDX1BPU1RfQ0hBUkdFU19S",
            "RVNVTFRfTUlTU0lOR19IT1VTRV9BQ0NPVU5UEAESQQo9UkVTRVJWQVRJT05f",
            "Rk9MSU9fU1ZDX1BPU1RfQ0hBUkdFU19SRVNVTFRfTUlTU0lOR19SRVNFUlZB",
            "VElPThACKpcBCiZSZXNlcnZhdGlvbkZvbGlvU3ZjR2V0Rm9saW9TdGF0ZVJl",
            "c3VsdBIsCihSRVNFUlZBVElPTl9GT0xJT19TVkNfR0VUX0ZPTElPX1NUQVRF",
            "X09LEAASPwo7UkVTRVJWQVRJT05fRk9MSU9fU1ZDX0dFVF9GT0xJT19TVEFU",
            "RV9NSVNTSU5HX0hPVVNFX0FDQ09VTlQQASrZAQooUmVzZXJ2YXRpb25Gb2xp",
            "b1N2Y1Bvc3RDYXNoUGF5bWVudFJlc3VsdBIuCipSRVNFUlZBVElPTl9GT0xJ",
            "T19TVkNfUE9TVF9DQVNIX1BBWU1FTlRfT0sQABJBCj1SRVNFUlZBVElPTl9G",
            "T0xJT19TVkNfUE9TVF9DQVNIX1BBWU1FTlRfTUlTU0lOR19IT1VTRV9BQ0NP",
            "VU5UEAESOgo2UkVTRVJWQVRJT05fRk9MSU9fU1ZDX1BPU1RfQ0FTSF9QQVlN",
            "RU5UX0lOVkFMSURfQU1PVU5UEAIq3QEKKVJlc2VydmF0aW9uRm9saW9TdmNQ",
            "b3N0Q2hlY2tQYXltZW50UmVzdWx0Ei8KK1JFU0VSVkFUSU9OX0ZPTElPX1NW",
            "Q19QT1NUX0NIRUNLX1BBWU1FTlRfT0sQABJCCj5SRVNFUlZBVElPTl9GT0xJ",
            "T19TVkNfUE9TVF9DSEVDS19QQVlNRU5UX01JU1NJTkdfSE9VU0VfQUNDT1VO",
            "VBABEjsKN1JFU0VSVkFUSU9OX0ZPTElPX1NWQ19QT1NUX0NIRUNLX1BBWU1F",
            "TlRfSU5WQUxJRF9BTU9VTlQQAirjAgooUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bv",
            "c3RDYXJkUGF5bWVudFJlc3VsdBIuCipSRVNFUlZBVElPTl9GT0xJT19TVkNf",
            "UE9TVF9DQVJEX1BBWU1FTlRfT0sQABJBCj1SRVNFUlZBVElPTl9GT0xJT19T",
            "VkNfUE9TVF9DQVJEX1BBWU1FTlRfTUlTU0lOR19IT1VTRV9BQ0NPVU5UEAES",
            "QQo9UkVTRVJWQVRJT05fRk9MSU9fU1ZDX1BPU1RfQ0FSRF9QQVlNRU5UX01J",
            "U1NJTkdfQVNTRVRfQUNDT1VOVBACEjoKNlJFU0VSVkFUSU9OX0ZPTElPX1NW",
            "Q19QT1NUX0NBUkRfUEFZTUVOVF9JTlZBTElEX0FNT1VOVBADEkUKQVJFU0VS",
            "VkFUSU9OX0ZPTElPX1NWQ19QT1NUX0NBUkRfUEFZTUVOVF9BVVRIT1JJWkFU",
            "SU9OX1VOQVZBSUxBQkxFEAQq2AEKKlJlc2VydmF0aW9uRm9saW9TdmNWb2lk",
            "QXV0aG9yaXphdGlvblJlc3VsdBI0CjBSRVNFUlZBVElPTl9GT0xJT19TVkNf",
            "Vk9JRF9BVVRIT1JJWkFUSU9OX1NVQ0NFU1MQABI2CjJSRVNFUlZBVElPTl9G",
            "T0xJT19TVkNfVk9JRF9BVVRIT1JJWkFUSU9OX05PVF9GT1VORBABEjwKOFJF",
            "U0VSVkFUSU9OX0ZPTElPX1NWQ19WT0lEX0FVVEhPUklaQVRJT05fVU5LTk9X",
            "Tl9GQUlMVVJFEAIqrQEKH1Jlc2VydmF0aW9uRm9saW9TdmNSZWZ1bmRSZXN1",
            "bHQSKAokUkVTRVJWQVRJT05fRk9MSU9fU1ZDX1JFRlVORF9TVUNDRVNTEAAS",
            "LgoqUkVTRVJWQVRJT05fRk9MSU9fU1ZDX1JFRlVORF9FWENFRURTX0xJTUlU",
            "EAESMAosUkVTRVJWQVRJT05fRk9MSU9fU1ZDX1JFRlVORF9VTktOT1dOX0ZB",
            "SUxVUkUQAjK0DwoTUmVzZXJ2YXRpb25Gb2xpb1N2YxKGAQoNR2V0Rm9saW9T",
            "dGF0ZRI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZh",
            "dGlvbkluZGljYXRvcho/LmhvbG1zLnR5cGVzLm1vbmV5LnJwYy5SZXNlcnZh",
            "dGlvbkZvbGlvU3ZjR2V0Rm9saW9TdGF0ZVJlc3BvbnNlEpoBCh1BZGRDYXJk",
            "QXV0aG9yaXphdGlvbkZyb21Ub2tlbhI4LmhvbG1zLnR5cGVzLm1vbmV5LnJw",
            "Yy5DYXJkQXV0aG9yaXphdGlvbkZyb21Ub2tlblJlcXVlc3QaPy5ob2xtcy50",
            "eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuQ2FyZEF1dGhvcml6YXRp",
            "b25SZXNwb25zZRKoAQolQWRkQ2FyZEF1dGhvcml6YXRpb25Gcm9tUHJlc2Vu",
            "dGVkQ2FyZBI+LmhvbG1zLnR5cGVzLm1vbmV5LnJwYy5DYXJkQXV0aG9yaXph",
            "dGlvbkZyb21QcmVzZW50Q2FyZFJlcXVlc3QaPy5ob2xtcy50eXBlcy5tb25l",
            "eS5jYXJkcy50cmFuc2FjdGlvbnMuQ2FyZEF1dGhvcml6YXRpb25SZXNwb25z",
            "ZRKsAQomQWRkQ2FyZEF1dGhvcml6YXRpb25Gcm9tTm90UHJlc2VudENhcmQS",
            "QS5ob2xtcy50eXBlcy5tb25leS5ycGMuQ2FyZEF1dGhvcml6YXRpb25Gcm9t",
            "Tm90UHJlc2VudENhcmRSZXF1ZXN0Gj8uaG9sbXMudHlwZXMubW9uZXkuY2Fy",
            "ZHMudHJhbnNhY3Rpb25zLkNhcmRBdXRob3JpemF0aW9uUmVzcG9uc2USiAEK",
            "DkdldE9uRmlsZUNhcmRzEjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0",
            "b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yGkAuaG9sbXMudHlwZXMubW9uZXku",
            "cnBjLlJlc2VydmF0aW9uRm9saW9TdmNHZXRPbkZpbGVDYXJkc1Jlc3BvbnNl",
            "EpwBChFWb2lkQXV0aG9yaXphdGlvbhJCLmhvbG1zLnR5cGVzLm1vbmV5LnJw",
            "Yy5SZXNlcnZhdGlvbkZvbGlvU3ZjVm9pZEF1dGhvcml6YXRpb25SZXF1ZXN0",
            "GkMuaG9sbXMudHlwZXMubW9uZXkucnBjLlJlc2VydmF0aW9uRm9saW9TdmNW",
            "b2lkQXV0aG9yaXphdGlvblJlc3BvbnNlEpYBCg9Qb3N0Q2FyZFBheW1lbnQS",
            "QC5ob2xtcy50eXBlcy5tb25leS5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bv",
            "c3RDYXJkUGF5bWVudFJlcXVlc3QaQS5ob2xtcy50eXBlcy5tb25leS5ycGMu",
            "UmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDYXJkUGF5bWVudFJlc3BvbnNlEpkB",
            "ChBQb3N0Q2hlY2tQYXltZW50EkEuaG9sbXMudHlwZXMubW9uZXkucnBjLlJl",
            "c2VydmF0aW9uRm9saW9TdmNQb3N0Q2hlY2tQYXltZW50UmVxdWVzdBpCLmhv",
            "bG1zLnR5cGVzLm1vbmV5LnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdENo",
            "ZWNrUGF5bWVudFJlc3BvbnNlEpYBCg9Qb3N0Q2FzaFBheW1lbnQSQC5ob2xt",
            "cy50eXBlcy5tb25leS5ycGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RDYXNo",
            "UGF5bWVudFJlcXVlc3QaQS5ob2xtcy50eXBlcy5tb25leS5ycGMuUmVzZXJ2",
            "YXRpb25Gb2xpb1N2Y1Bvc3RDYXNoUGF5bWVudFJlc3BvbnNlEoMBChtQb3N0",
            "TG9kZ2luZ0NoYXJnZUNvcnJlY3Rpb24STC5ob2xtcy50eXBlcy5tb25leS5y",
            "cGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RMb2RnaW5nQ2hhcmdlQ29ycmVj",
            "dGlvblJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSiQEKHlBvc3RJ",
            "bmNpZGVudGFsQ2hhcmdlQ29ycmVjdGlvbhJPLmhvbG1zLnR5cGVzLm1vbmV5",
            "LnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUG9zdEluY2lkZW50YWxDaGFyZ2VD",
            "b3JyZWN0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJ9ChhQ",
            "b3N0TWlzY0NoYXJnZUNvcnJlY3Rpb24SSS5ob2xtcy50eXBlcy5tb25leS5y",
            "cGMuUmVzZXJ2YXRpb25Gb2xpb1N2Y1Bvc3RNaXNjQ2hhcmdlQ29ycmVjdGlv",
            "blJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSkwEKE1JlZnVuZFRv",
            "a2VuaXplZENhcmQSQi5ob2xtcy50eXBlcy5tb25leS5ycGMuUmVzZXJ2YXRp",
            "b25Gb2xpb1N2Y1BheW1lbnRDYXJkUmVmdW5kUmVxdWVzdBo4LmhvbG1zLnR5",
            "cGVzLm1vbmV5LnJwYy5SZXNlcnZhdGlvbkZvbGlvU3ZjUmVmdW5kUmVzcG9u",
            "c2VCI1oJbW9uZXkvcnBjqgIVSE9MTVMuVHlwZXMuTW9uZXkuUlBDYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardAuthorizationPurposeReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.CardAuthorizationResponseReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.NotPresentPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Cards.PaymentCardIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.TokenizedPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Folio.FolioStateReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostChargesResult), typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetFolioStateResult), typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentResult), typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentResult), typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentResult), typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationResult), typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcRefundResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostChargesResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostChargesResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetFolioStateResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetFolioStateResponse.Parser, new[]{ "Result", "FolioState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentRequest.Parser, new[]{ "Reservation", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.CardAuthorizationFromTokenRequest), global::HOLMS.Types.Money.RPC.CardAuthorizationFromTokenRequest.Parser, new[]{ "Reservation", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.CardAuthorizationFromPresentCardRequest), global::HOLMS.Types.Money.RPC.CardAuthorizationFromPresentCardRequest.Parser, new[]{ "Reservation", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.CardAuthorizationFromNotPresentCardRequest), global::HOLMS.Types.Money.RPC.CardAuthorizationFromNotPresentCardRequest.Parser, new[]{ "Reservation", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentRequest.Parser, new[]{ "Reservation", "Authorization", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentRequest.Parser, new[]{ "AmountPaid", "Reservation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetOnFileCardsResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetOnFileCardsResponse.Parser, new[]{ "Cards" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostLodgingChargeCorrectionRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostLodgingChargeCorrectionRequest.Parser, new[]{ "Reservation", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostIncidentalChargeCorrectionRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostIncidentalChargeCorrectionRequest.Parser, new[]{ "Reservation", "IncidentalItem", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostMiscChargeCorrectionRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostMiscChargeCorrectionRequest.Parser, new[]{ "Reservation", "Description", "AdjustmentSubtotal", "AdjustmentTakenFromGuest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationRequest.Parser, new[]{ "Authorization", "Reservation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcPaymentCardRefundRequest), global::HOLMS.Types.Money.RPC.ReservationFolioSvcPaymentCardRefundRequest.Parser, new[]{ "Reservation", "Amount", "Card", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.RPC.ReservationFolioSvcRefundResponse), global::HOLMS.Types.Money.RPC.ReservationFolioSvcRefundResponse.Parser, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReservationFolioSvcPostChargesResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHARGES_RESULT_OK")] Ok = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHARGES_RESULT_MISSING_HOUSE_ACCOUNT")] MissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHARGES_RESULT_MISSING_RESERVATION")] MissingReservation = 2,
  }

  public enum ReservationFolioSvcGetFolioStateResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_OK")] ReservationFolioSvcGetFolioStateOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_GET_FOLIO_STATE_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcGetFolioStateMissingHouseAccount = 1,
  }

  public enum ReservationFolioSvcPostCashPaymentResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CASH_PAYMENT_OK")] ReservationFolioSvcPostCashPaymentOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CASH_PAYMENT_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcPostCashPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CASH_PAYMENT_INVALID_AMOUNT")] ReservationFolioSvcPostCashPaymentInvalidAmount = 2,
  }

  public enum ReservationFolioSvcPostCheckPaymentResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHECK_PAYMENT_OK")] ReservationFolioSvcPostCheckPaymentOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHECK_PAYMENT_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcPostCheckPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CHECK_PAYMENT_INVALID_AMOUNT")] ReservationFolioSvcPostCheckPaymentInvalidAmount = 2,
  }

  public enum ReservationFolioSvcPostCardPaymentResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_OK")] ReservationFolioSvcPostCardPaymentOk = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_MISSING_HOUSE_ACCOUNT")] ReservationFolioSvcPostCardPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_MISSING_ASSET_ACCOUNT")] ReservationFolioSvcPostCardPaymentMissingAssetAccount = 2,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_INVALID_AMOUNT")] ReservationFolioSvcPostCardPaymentInvalidAmount = 3,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_POST_CARD_PAYMENT_AUTHORIZATION_UNAVAILABLE")] ReservationFolioSvcPostCardPaymentAuthorizationUnavailable = 4,
  }

  public enum ReservationFolioSvcVoidAuthorizationResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_VOID_AUTHORIZATION_SUCCESS")] ReservationFolioSvcVoidAuthorizationSuccess = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_VOID_AUTHORIZATION_NOT_FOUND")] ReservationFolioSvcVoidAuthorizationNotFound = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_VOID_AUTHORIZATION_UNKNOWN_FAILURE")] ReservationFolioSvcVoidAuthorizationUnknownFailure = 2,
  }

  public enum ReservationFolioSvcRefundResult {
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_REFUND_SUCCESS")] ReservationFolioSvcRefundSuccess = 0,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_REFUND_EXCEEDS_LIMIT")] ReservationFolioSvcRefundExceedsLimit = 1,
    [pbr::OriginalName("RESERVATION_FOLIO_SVC_REFUND_UNKNOWN_FAILURE")] ReservationFolioSvcRefundUnknownFailure = 2,
  }

  #endregion

  #region Messages
  public sealed partial class ReservationFolioSvcPostChargesResponse : pb::IMessage<ReservationFolioSvcPostChargesResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostChargesResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostChargesResponse>(() => new ReservationFolioSvcPostChargesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostChargesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostChargesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostChargesResponse(ReservationFolioSvcPostChargesResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostChargesResponse Clone() {
      return new ReservationFolioSvcPostChargesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostChargesResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostChargesResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostChargesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostChargesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostChargesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostChargesResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetFolioStateResponse : pb::IMessage<ReservationFolioSvcGetFolioStateResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetFolioStateResponse> _parser = new pb::MessageParser<ReservationFolioSvcGetFolioStateResponse>(() => new ReservationFolioSvcGetFolioStateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetFolioStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse(ReservationFolioSvcGetFolioStateResponse other) : this() {
      result_ = other.result_;
      FolioState = other.folioState_ != null ? other.FolioState.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetFolioStateResponse Clone() {
      return new ReservationFolioSvcGetFolioStateResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetFolioStateResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetFolioStateResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "folio_state" field.</summary>
    public const int FolioStateFieldNumber = 2;
    private global::HOLMS.Types.Money.Folio.FolioState folioState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Folio.FolioState FolioState {
      get { return folioState_; }
      set {
        folioState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetFolioStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetFolioStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(FolioState, other.FolioState)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (folioState_ != null) hash ^= FolioState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (folioState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FolioState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (folioState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolioState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetFolioStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.folioState_ != null) {
        if (folioState_ == null) {
          folioState_ = new global::HOLMS.Types.Money.Folio.FolioState();
        }
        FolioState.MergeFrom(other.FolioState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcGetFolioStateResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (folioState_ == null) {
              folioState_ = new global::HOLMS.Types.Money.Folio.FolioState();
            }
            input.ReadMessage(folioState_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCashPaymentResponse : pb::IMessage<ReservationFolioSvcPostCashPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCashPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostCashPaymentResponse>(() => new ReservationFolioSvcPostCashPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCashPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentResponse(ReservationFolioSvcPostCashPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentResponse Clone() {
      return new ReservationFolioSvcPostCashPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCashPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCashPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCashPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCashPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCheckPaymentResponse : pb::IMessage<ReservationFolioSvcPostCheckPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCheckPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostCheckPaymentResponse>(() => new ReservationFolioSvcPostCheckPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCheckPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentResponse(ReservationFolioSvcPostCheckPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentResponse Clone() {
      return new ReservationFolioSvcPostCheckPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCheckPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCheckPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCheckPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCheckPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCheckPaymentRequest : pb::IMessage<ReservationFolioSvcPostCheckPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest>(() => new ReservationFolioSvcPostCheckPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCheckPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest(ReservationFolioSvcPostCheckPaymentRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCheckPaymentRequest Clone() {
      return new ReservationFolioSvcPostCheckPaymentRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCheckPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCheckPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCheckPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromTokenRequest : pb::IMessage<CardAuthorizationFromTokenRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromTokenRequest> _parser = new pb::MessageParser<CardAuthorizationFromTokenRequest>(() => new CardAuthorizationFromTokenRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromTokenRequest(CardAuthorizationFromTokenRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      purpose_ = other.purpose_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromTokenRequest Clone() {
      return new CardAuthorizationFromTokenRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.PaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.PaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose purpose_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Purpose != other.Purpose) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Purpose != 0) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (Purpose != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Purpose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.PaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Purpose != 0) {
        Purpose = other.Purpose;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.PaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 32: {
            purpose_ = (global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromPresentCardRequest : pb::IMessage<CardAuthorizationFromPresentCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromPresentCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromPresentCardRequest>(() => new CardAuthorizationFromPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest(CardAuthorizationFromPresentCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      purpose_ = other.purpose_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromPresentCardRequest Clone() {
      return new CardAuthorizationFromPresentCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose purpose_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Purpose != other.Purpose) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Purpose != 0) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (Purpose != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Purpose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Purpose != 0) {
        Purpose = other.Purpose;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 24: {
            purpose_ = (global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardAuthorizationFromNotPresentCardRequest : pb::IMessage<CardAuthorizationFromNotPresentCardRequest> {
    private static readonly pb::MessageParser<CardAuthorizationFromNotPresentCardRequest> _parser = new pb::MessageParser<CardAuthorizationFromNotPresentCardRequest>(() => new CardAuthorizationFromNotPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAuthorizationFromNotPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest(CardAuthorizationFromNotPresentCardRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      purpose_ = other.purpose_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAuthorizationFromNotPresentCardRequest Clone() {
      return new CardAuthorizationFromNotPresentCardRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.NotPresentPaymentCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.NotPresentPaymentCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose purpose_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAuthorizationFromNotPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAuthorizationFromNotPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Purpose != other.Purpose) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Purpose != 0) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (Purpose != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Purpose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAuthorizationFromNotPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Purpose != 0) {
        Purpose = other.Purpose;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 32: {
            purpose_ = (global::HOLMS.Types.Money.Cards.CardAuthorizationPurpose) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCardPaymentResponse : pb::IMessage<ReservationFolioSvcPostCardPaymentResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCardPaymentResponse> _parser = new pb::MessageParser<ReservationFolioSvcPostCardPaymentResponse>(() => new ReservationFolioSvcPostCardPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCardPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentResponse(ReservationFolioSvcPostCardPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentResponse Clone() {
      return new ReservationFolioSvcPostCardPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCardPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCardPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCardPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcPostCardPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCardPaymentRequest : pb::IMessage<ReservationFolioSvcPostCardPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest>(() => new ReservationFolioSvcPostCardPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCardPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest(ReservationFolioSvcPostCardPaymentRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Authorization = other.authorization_ != null ? other.Authorization.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCardPaymentRequest Clone() {
      return new ReservationFolioSvcPostCardPaymentRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "authorization" field.</summary>
    public const int AuthorizationFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator authorization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator Authorization {
      get { return authorization_; }
      set {
        authorization_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCardPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCardPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Authorization, other.Authorization)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (authorization_ != null) hash ^= Authorization.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (authorization_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Authorization);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (authorization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authorization);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCardPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.authorization_ != null) {
        if (authorization_ == null) {
          authorization_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator();
        }
        Authorization.MergeFrom(other.Authorization);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (authorization_ == null) {
              authorization_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator();
            }
            input.ReadMessage(authorization_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostCashPaymentRequest : pb::IMessage<ReservationFolioSvcPostCashPaymentRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest>(() => new ReservationFolioSvcPostCashPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostCashPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest(ReservationFolioSvcPostCashPaymentRequest other) : this() {
      AmountPaid = other.amountPaid_ != null ? other.AmountPaid.Clone() : null;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostCashPaymentRequest Clone() {
      return new ReservationFolioSvcPostCashPaymentRequest(this);
    }

    /// <summary>Field number for the "amount_paid" field.</summary>
    public const int AmountPaidFieldNumber = 1;
    private global::HOLMS.Types.Primitive.MonetaryAmount amountPaid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AmountPaid {
      get { return amountPaid_; }
      set {
        amountPaid_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostCashPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostCashPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AmountPaid, other.AmountPaid)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (amountPaid_ != null) hash ^= AmountPaid.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (amountPaid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AmountPaid);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (amountPaid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountPaid);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostCashPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.amountPaid_ != null) {
        if (amountPaid_ == null) {
          amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AmountPaid.MergeFrom(other.AmountPaid);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (amountPaid_ == null) {
              amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amountPaid_);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcGetOnFileCardsResponse : pb::IMessage<ReservationFolioSvcGetOnFileCardsResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcGetOnFileCardsResponse> _parser = new pb::MessageParser<ReservationFolioSvcGetOnFileCardsResponse>(() => new ReservationFolioSvcGetOnFileCardsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcGetOnFileCardsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetOnFileCardsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetOnFileCardsResponse(ReservationFolioSvcGetOnFileCardsResponse other) : this() {
      cards_ = other.cards_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcGetOnFileCardsResponse Clone() {
      return new ReservationFolioSvcGetOnFileCardsResponse(this);
    }

    /// <summary>Field number for the "cards" field.</summary>
    public const int CardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.TokenizedPaymentCard> _repeated_cards_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Money.Cards.TokenizedPaymentCard.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.TokenizedPaymentCard> cards_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.TokenizedPaymentCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.TokenizedPaymentCard> Cards {
      get { return cards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcGetOnFileCardsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcGetOnFileCardsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!cards_.Equals(other.cards_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= cards_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      cards_.WriteTo(output, _repeated_cards_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cards_.CalculateSize(_repeated_cards_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcGetOnFileCardsResponse other) {
      if (other == null) {
        return;
      }
      cards_.Add(other.cards_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            cards_.AddEntriesFrom(input, _repeated_cards_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostLodgingChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostLodgingChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest>(() => new ReservationFolioSvcPostLodgingChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostLodgingChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostLodgingChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostLodgingChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 4;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostLodgingChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostIncidentalChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest>(() => new ReservationFolioSvcPostIncidentalChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostIncidentalChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      IncidentalItem = other.incidentalItem_ != null ? other.IncidentalItem.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostIncidentalChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostIncidentalChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "incidental_item" field.</summary>
    public const int IncidentalItemFieldNumber = 2;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator incidentalItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator IncidentalItem {
      get { return incidentalItem_; }
      set {
        incidentalItem_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 5;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostIncidentalChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(IncidentalItem, other.IncidentalItem)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (incidentalItem_ != null) hash ^= IncidentalItem.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (incidentalItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IncidentalItem);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(40);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (incidentalItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalItem);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.incidentalItem_ != null) {
        if (incidentalItem_ == null) {
          incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        IncidentalItem.MergeFrom(other.IncidentalItem);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (incidentalItem_ == null) {
              incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(incidentalItem_);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 40: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPostMiscChargeCorrectionRequest : pb::IMessage<ReservationFolioSvcPostMiscChargeCorrectionRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest> _parser = new pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest>(() => new ReservationFolioSvcPostMiscChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPostMiscChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest(ReservationFolioSvcPostMiscChargeCorrectionRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentTakenFromGuest_ = other.adjustmentTakenFromGuest_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPostMiscChargeCorrectionRequest Clone() {
      return new ReservationFolioSvcPostMiscChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_taken_from_guest" field.</summary>
    public const int AdjustmentTakenFromGuestFieldNumber = 4;
    private bool adjustmentTakenFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentTakenFromGuest {
      get { return adjustmentTakenFromGuest_; }
      set {
        adjustmentTakenFromGuest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPostMiscChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPostMiscChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentTakenFromGuest != other.AdjustmentTakenFromGuest) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentTakenFromGuest != false) hash ^= AdjustmentTakenFromGuest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentTakenFromGuest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentTakenFromGuest != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPostMiscChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentTakenFromGuest != false) {
        AdjustmentTakenFromGuest = other.AdjustmentTakenFromGuest;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentTakenFromGuest = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcVoidAuthorizationRequest : pb::IMessage<ReservationFolioSvcVoidAuthorizationRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcVoidAuthorizationRequest> _parser = new pb::MessageParser<ReservationFolioSvcVoidAuthorizationRequest>(() => new ReservationFolioSvcVoidAuthorizationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcVoidAuthorizationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcVoidAuthorizationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcVoidAuthorizationRequest(ReservationFolioSvcVoidAuthorizationRequest other) : this() {
      Authorization = other.authorization_ != null ? other.Authorization.Clone() : null;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcVoidAuthorizationRequest Clone() {
      return new ReservationFolioSvcVoidAuthorizationRequest(this);
    }

    /// <summary>Field number for the "authorization" field.</summary>
    public const int AuthorizationFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator authorization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator Authorization {
      get { return authorization_; }
      set {
        authorization_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcVoidAuthorizationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcVoidAuthorizationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Authorization, other.Authorization)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (authorization_ != null) hash ^= Authorization.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (authorization_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Authorization);
      }
      if (reservation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (authorization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authorization);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcVoidAuthorizationRequest other) {
      if (other == null) {
        return;
      }
      if (other.authorization_ != null) {
        if (authorization_ == null) {
          authorization_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator();
        }
        Authorization.MergeFrom(other.Authorization);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (authorization_ == null) {
              authorization_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIndicator();
            }
            input.ReadMessage(authorization_);
            break;
          }
          case 18: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcVoidAuthorizationResponse : pb::IMessage<ReservationFolioSvcVoidAuthorizationResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcVoidAuthorizationResponse> _parser = new pb::MessageParser<ReservationFolioSvcVoidAuthorizationResponse>(() => new ReservationFolioSvcVoidAuthorizationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcVoidAuthorizationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcVoidAuthorizationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcVoidAuthorizationResponse(ReservationFolioSvcVoidAuthorizationResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcVoidAuthorizationResponse Clone() {
      return new ReservationFolioSvcVoidAuthorizationResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcVoidAuthorizationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcVoidAuthorizationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcVoidAuthorizationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcVoidAuthorizationResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcPaymentCardRefundRequest : pb::IMessage<ReservationFolioSvcPaymentCardRefundRequest> {
    private static readonly pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest> _parser = new pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest>(() => new ReservationFolioSvcPaymentCardRefundRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcPaymentCardRefundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest(ReservationFolioSvcPaymentCardRefundRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcPaymentCardRefundRequest Clone() {
      return new ReservationFolioSvcPaymentCardRefundRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.PaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.PaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcPaymentCardRefundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcPaymentCardRefundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcPaymentCardRefundRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.PaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.PaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationFolioSvcRefundResponse : pb::IMessage<ReservationFolioSvcRefundResponse> {
    private static readonly pb::MessageParser<ReservationFolioSvcRefundResponse> _parser = new pb::MessageParser<ReservationFolioSvcRefundResponse>(() => new ReservationFolioSvcRefundResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationFolioSvcRefundResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.RPC.ReservationFolioSvcReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcRefundResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcRefundResponse(ReservationFolioSvcRefundResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationFolioSvcRefundResponse Clone() {
      return new ReservationFolioSvcRefundResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.RPC.ReservationFolioSvcRefundResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.RPC.ReservationFolioSvcRefundResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationFolioSvcRefundResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationFolioSvcRefundResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationFolioSvcRefundResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.RPC.ReservationFolioSvcRefundResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
