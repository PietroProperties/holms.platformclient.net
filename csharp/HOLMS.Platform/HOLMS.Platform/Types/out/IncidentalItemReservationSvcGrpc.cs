// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/incidental_item_reservation_svc.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace HOLMS.Types.Booking.RPC {
  public static class IncidentalItemReservationSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.IncidentalItemReservationSvc";

    static readonly Marshaller<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation> __Marshaller_IncidentalItemReservation = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> __Marshaller_IncidentalReservationResult = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator> __Marshaller_IncidentalItemReservationIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> __Marshaller_ReservationIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Indicators.ReservationIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse> __Marshaller_IncidentalItemReservationGetForReservationResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse.Parser.ParseFrom);

    static readonly Method<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation, global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> __Method_CreateReservation = new Method<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation, global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult>(
        MethodType.Unary,
        __ServiceName,
        "CreateReservation",
        __Marshaller_IncidentalItemReservation,
        __Marshaller_IncidentalReservationResult);

    static readonly Method<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation, global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> __Method_UpdateReservation = new Method<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation, global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult>(
        MethodType.Unary,
        __ServiceName,
        "UpdateReservation",
        __Marshaller_IncidentalItemReservation,
        __Marshaller_IncidentalReservationResult);

    static readonly Method<global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator, global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> __Method_DropReservation = new Method<global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator, global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult>(
        MethodType.Unary,
        __ServiceName,
        "DropReservation",
        __Marshaller_IncidentalItemReservationIndicator,
        __Marshaller_IncidentalReservationResult);

    static readonly Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse> __Method_GetReservedInventoryForReservation = new Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetReservedInventoryForReservation",
        __Marshaller_ReservationIndicator,
        __Marshaller_IncidentalItemReservationGetForReservationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Booking.RPC.IncidentalItemReservationSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IncidentalItemReservationSvc</summary>
    public abstract class IncidentalItemReservationSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> CreateReservation(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> UpdateReservation(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> DropReservation(global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse> GetReservedInventoryForReservation(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for IncidentalItemReservationSvc</summary>
    public class IncidentalItemReservationSvcClient : ClientBase<IncidentalItemReservationSvcClient>
    {
      /// <summary>Creates a new client for IncidentalItemReservationSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public IncidentalItemReservationSvcClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IncidentalItemReservationSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public IncidentalItemReservationSvcClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected IncidentalItemReservationSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected IncidentalItemReservationSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult CreateReservation(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateReservation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult CreateReservation(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateReservation, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> CreateReservationAsync(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateReservationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> CreateReservationAsync(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult UpdateReservation(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateReservation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult UpdateReservation(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateReservation, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> UpdateReservationAsync(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateReservationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> UpdateReservationAsync(global::HOLMS.Types.Booking.IncidentalReservations.IncidentalItemReservation request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult DropReservation(global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DropReservation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult DropReservation(global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DropReservation, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> DropReservationAsync(global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DropReservationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.IncidentalReservations.IncidentalReservationResult> DropReservationAsync(global::HOLMS.Types.Booking.Indicators.IncidentalItemReservationIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DropReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse GetReservedInventoryForReservation(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetReservedInventoryForReservation(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse GetReservedInventoryForReservation(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReservedInventoryForReservation, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse> GetReservedInventoryForReservationAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetReservedInventoryForReservationAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.IncidentalItemReservationGetForReservationResponse> GetReservedInventoryForReservationAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReservedInventoryForReservation, null, options, request);
      }
      protected override IncidentalItemReservationSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IncidentalItemReservationSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(IncidentalItemReservationSvcBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateReservation, serviceImpl.CreateReservation)
          .AddMethod(__Method_UpdateReservation, serviceImpl.UpdateReservation)
          .AddMethod(__Method_DropReservation, serviceImpl.DropReservation)
          .AddMethod(__Method_GetReservedInventoryForReservation, serviceImpl.GetReservedInventoryForReservation).Build();
    }

  }
}
#endregion
