// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/rpc/pricing_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.RPC {

  /// <summary>Holder for reflection information generated from supply/rpc/pricing_svc.proto</summary>
  public static partial class PricingSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/rpc/pricing_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PricingSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxzdXBwbHkvcnBjL3ByaWNpbmdfc3ZjLnByb3RvEhZob2xtcy50eXBlcy5z",
            "dXBwbHkucnBjGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aKnByaW1p",
            "dGl2ZS9wYl9pbmNsdXNpdmVfb3BzZGF0ZV9yYW5nZS5wcm90bxorc3VwcGx5",
            "L3Jvb21fdHlwZXMvcm9vbV90eXBlX2luZGljYXRvci5wcm90bxohc3VwcGx5",
            "L3ByaWNlX3VwZGF0ZV9yZXF1ZXN0LnByb3RvGiRzdXBwbHkvcmF0ZV9zY2hl",
            "ZHVsZV9pbmRpY2F0b3IucHJvdG8aHHN1cHBseS9zY2hlZHVsZWRfcHJpY2Uu",
            "cHJvdG8i5AEKFlByaWNpbmdTdmNRdWVyeVJlcXVlc3QSQAoNcmF0ZV9zY2hl",
            "ZHVsZRgBIAEoCzIpLmhvbG1zLnR5cGVzLnN1cHBseS5SYXRlU2NoZWR1bGVJ",
            "bmRpY2F0b3ISRAoKcm9vbV90eXBlcxgCIAMoCzIwLmhvbG1zLnR5cGVzLnN1",
            "cHBseS5yb29tX3R5cGVzLlJvb21UeXBlSW5kaWNhdG9yEkIKCmRhdGVfcmFu",
            "Z2UYAyABKAsyLi5ob2xtcy50eXBlcy5wcmltaXRpdmUuUGJJbmNsdXNpdmVP",
            "cHNkYXRlUmFuZ2UiTQoXUHJpY2luZ1N2Y1F1ZXJ5UmVzcG9uc2USMgoGcHJp",
            "Y2VzGAEgAygLMiIuaG9sbXMudHlwZXMuc3VwcGx5LlNjaGVkdWxlZFByaWNl",
            "IpoBChdQcmljaW5nU3ZjVXBkYXRlUmVxdWVzdBJACg1yYXRlX3NjaGVkdWxl",
            "GAEgASgLMikuaG9sbXMudHlwZXMuc3VwcGx5LlJhdGVTY2hlZHVsZUluZGlj",
            "YXRvchI9Cg1wcmljZV91cGRhdGVzGAIgAygLMiYuaG9sbXMudHlwZXMuc3Vw",
            "cGx5LlByaWNlVXBkYXRlUmVxdWVzdDLJAQoKUHJpY2luZ1N2YxJoCgVRdWVy",
            "eRIuLmhvbG1zLnR5cGVzLnN1cHBseS5ycGMuUHJpY2luZ1N2Y1F1ZXJ5UmVx",
            "dWVzdBovLmhvbG1zLnR5cGVzLnN1cHBseS5ycGMuUHJpY2luZ1N2Y1F1ZXJ5",
            "UmVzcG9uc2USUQoGVXBkYXRlEi8uaG9sbXMudHlwZXMuc3VwcGx5LnJwYy5Q",
            "cmljaW5nU3ZjVXBkYXRlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eUIlWgpzdXBwbHkvcnBjqgIWSE9MTVMuVHlwZXMuU3VwcGx5LlJQQ2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.PriceUpdateRequestReflection.Descriptor, global::HOLMS.Types.Supply.RateScheduleIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.ScheduledPriceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.RPC.PricingSvcQueryRequest), global::HOLMS.Types.Supply.RPC.PricingSvcQueryRequest.Parser, new[]{ "RateSchedule", "RoomTypes", "DateRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.RPC.PricingSvcQueryResponse), global::HOLMS.Types.Supply.RPC.PricingSvcQueryResponse.Parser, new[]{ "Prices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.RPC.PricingSvcUpdateRequest), global::HOLMS.Types.Supply.RPC.PricingSvcUpdateRequest.Parser, new[]{ "RateSchedule", "PriceUpdates" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PricingSvcQueryRequest : pb::IMessage<PricingSvcQueryRequest> {
    private static readonly pb::MessageParser<PricingSvcQueryRequest> _parser = new pb::MessageParser<PricingSvcQueryRequest>(() => new PricingSvcQueryRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PricingSvcQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.RPC.PricingSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcQueryRequest(PricingSvcQueryRequest other) : this() {
      RateSchedule = other.rateSchedule_ != null ? other.RateSchedule.Clone() : null;
      roomTypes_ = other.roomTypes_.Clone();
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcQueryRequest Clone() {
      return new PricingSvcQueryRequest(this);
    }

    /// <summary>Field number for the "rate_schedule" field.</summary>
    public const int RateScheduleFieldNumber = 1;
    private global::HOLMS.Types.Supply.RateScheduleIndicator rateSchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RateScheduleIndicator RateSchedule {
      get { return rateSchedule_; }
      set {
        rateSchedule_ = value;
      }
    }

    /// <summary>Field number for the "room_types" field.</summary>
    public const int RoomTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator> _repeated_roomTypes_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator> roomTypes_ = new pbc::RepeatedField<global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator> RoomTypes {
      get { return roomTypes_; }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 3;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PricingSvcQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PricingSvcQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RateSchedule, other.RateSchedule)) return false;
      if(!roomTypes_.Equals(other.roomTypes_)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rateSchedule_ != null) hash ^= RateSchedule.GetHashCode();
      hash ^= roomTypes_.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rateSchedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RateSchedule);
      }
      roomTypes_.WriteTo(output, _repeated_roomTypes_codec);
      if (dateRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rateSchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateSchedule);
      }
      size += roomTypes_.CalculateSize(_repeated_roomTypes_codec);
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PricingSvcQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.rateSchedule_ != null) {
        if (rateSchedule_ == null) {
          rateSchedule_ = new global::HOLMS.Types.Supply.RateScheduleIndicator();
        }
        RateSchedule.MergeFrom(other.RateSchedule);
      }
      roomTypes_.Add(other.roomTypes_);
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (rateSchedule_ == null) {
              rateSchedule_ = new global::HOLMS.Types.Supply.RateScheduleIndicator();
            }
            input.ReadMessage(rateSchedule_);
            break;
          }
          case 18: {
            roomTypes_.AddEntriesFrom(input, _repeated_roomTypes_codec);
            break;
          }
          case 26: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PricingSvcQueryResponse : pb::IMessage<PricingSvcQueryResponse> {
    private static readonly pb::MessageParser<PricingSvcQueryResponse> _parser = new pb::MessageParser<PricingSvcQueryResponse>(() => new PricingSvcQueryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PricingSvcQueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.RPC.PricingSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcQueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcQueryResponse(PricingSvcQueryResponse other) : this() {
      prices_ = other.prices_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcQueryResponse Clone() {
      return new PricingSvcQueryResponse(this);
    }

    /// <summary>Field number for the "prices" field.</summary>
    public const int PricesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Supply.ScheduledPrice> _repeated_prices_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Supply.ScheduledPrice.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Supply.ScheduledPrice> prices_ = new pbc::RepeatedField<global::HOLMS.Types.Supply.ScheduledPrice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Supply.ScheduledPrice> Prices {
      get { return prices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PricingSvcQueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PricingSvcQueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!prices_.Equals(other.prices_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= prices_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      prices_.WriteTo(output, _repeated_prices_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += prices_.CalculateSize(_repeated_prices_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PricingSvcQueryResponse other) {
      if (other == null) {
        return;
      }
      prices_.Add(other.prices_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            prices_.AddEntriesFrom(input, _repeated_prices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PricingSvcUpdateRequest : pb::IMessage<PricingSvcUpdateRequest> {
    private static readonly pb::MessageParser<PricingSvcUpdateRequest> _parser = new pb::MessageParser<PricingSvcUpdateRequest>(() => new PricingSvcUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PricingSvcUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.RPC.PricingSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcUpdateRequest(PricingSvcUpdateRequest other) : this() {
      RateSchedule = other.rateSchedule_ != null ? other.RateSchedule.Clone() : null;
      priceUpdates_ = other.priceUpdates_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PricingSvcUpdateRequest Clone() {
      return new PricingSvcUpdateRequest(this);
    }

    /// <summary>Field number for the "rate_schedule" field.</summary>
    public const int RateScheduleFieldNumber = 1;
    private global::HOLMS.Types.Supply.RateScheduleIndicator rateSchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RateScheduleIndicator RateSchedule {
      get { return rateSchedule_; }
      set {
        rateSchedule_ = value;
      }
    }

    /// <summary>Field number for the "price_updates" field.</summary>
    public const int PriceUpdatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Supply.PriceUpdateRequest> _repeated_priceUpdates_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Supply.PriceUpdateRequest.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Supply.PriceUpdateRequest> priceUpdates_ = new pbc::RepeatedField<global::HOLMS.Types.Supply.PriceUpdateRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Supply.PriceUpdateRequest> PriceUpdates {
      get { return priceUpdates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PricingSvcUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PricingSvcUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RateSchedule, other.RateSchedule)) return false;
      if(!priceUpdates_.Equals(other.priceUpdates_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rateSchedule_ != null) hash ^= RateSchedule.GetHashCode();
      hash ^= priceUpdates_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rateSchedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RateSchedule);
      }
      priceUpdates_.WriteTo(output, _repeated_priceUpdates_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rateSchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateSchedule);
      }
      size += priceUpdates_.CalculateSize(_repeated_priceUpdates_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PricingSvcUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.rateSchedule_ != null) {
        if (rateSchedule_ == null) {
          rateSchedule_ = new global::HOLMS.Types.Supply.RateScheduleIndicator();
        }
        RateSchedule.MergeFrom(other.RateSchedule);
      }
      priceUpdates_.Add(other.priceUpdates_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (rateSchedule_ == null) {
              rateSchedule_ = new global::HOLMS.Types.Supply.RateScheduleIndicator();
            }
            input.ReadMessage(rateSchedule_);
            break;
          }
          case 18: {
            priceUpdates_.AddEntriesFrom(input, _repeated_priceUpdates_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
