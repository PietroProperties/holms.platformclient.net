// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenancy_config/property.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.TenancyConfig {

  /// <summary>Holder for reflection information generated from tenancy_config/property.proto</summary>
  public static partial class PropertyReflection {

    #region Descriptor
    /// <summary>File descriptor for tenancy_config/property.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PropertyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch10ZW5hbmN5X2NvbmZpZy9wcm9wZXJ0eS5wcm90bxIaaG9sbXMudHlwZXMu",
            "dGVuYW5jeV9jb25maWcaHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90",
            "bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxopbW9uZXkvY2Fy",
            "ZHMvY2FyZF9tZXJjaGFudF9pbmRpY2F0b3IucHJvdG8aH3ByaW1pdGl2ZS9t",
            "b25ldGFyeV9hbW91bnQucHJvdG8aNmJvb2tpbmcvaW5kaWNhdG9ycy9jYW5j",
            "ZWxsYXRpb25fcG9saWN5X2luZGljYXRvci5wcm90bxoydGVuYW5jeV9jb25m",
            "aWcvaW5kaWNhdG9ycy9wcm9wZXJ0eV9pbmRpY2F0b3IucHJvdG8ivQgKCFBy",
            "b3BlcnR5EksKCWVudGl0eV9pZBgBIAEoCzI4LmhvbG1zLnR5cGVzLnRlbmFu",
            "Y3lfY29uZmlnLmluZGljYXRvcnMuUHJvcGVydHlJbmRpY2F0b3ISEwoLZGVz",
            "Y3JpcHRpb24YAiABKAkSNgoTY2hlY2tpbl90aW1lX29mX2RheRgDIAEoCzIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhI4ChVjaGVja19vdXRfdGltZV9v",
            "Zl9kYXkYBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SNwoUcm9s",
            "bG92ZXJfdGltZV9vZl9kYXkYBSABKAsyGS5nb29nbGUucHJvdG9idWYuRHVy",
            "YXRpb24SIwobYWxsb3dlZF9lYXJseV9jaGVja2luX2hvdXJzGAYgASgNEhkK",
            "EWlpZl9kb2NudW1fcHJlZml4GAcgASgJEhkKEWlpZl9jdXN0b21lcl9uYW1l",
            "GAggASgJEj4KD2NoZWNraW5fZGVwb3NpdBgJIAEoCzIlLmhvbG1zLnR5cGVz",
            "LnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI+ChpsYXN0X3JldmVudWVfYWNj",
            "cnVhbF9zdGFydBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "PQoZbGFzdF9kYXRlX2hrX3JvbGxvdmVyX3JhbhgLIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASEAoIYWRkcmVzczEYDCABKAkSEAoIYWRkcmVz",
            "czIYDSABKAkSDAoEY2l0eRgOIAEoCRINCgVzdGF0ZRgPIAEoCRILCgN6aXAY",
            "ECABKAkSFAoMcGhvbmVfbnVtYmVyGBEgASgJEkUKDWNhcmRfbWVyY2hhbnQY",
            "EiABKAsyLi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkTWVyY2hhbnRJ",
            "bmRpY2F0b3ISWAoTY2FuY2VsbGF0aW9uX3BvbGljeRgTIAEoCzI7LmhvbG1z",
            "LnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5DYW5jZWxsYXRpb25Qb2xpY3lJ",
            "bmRpY2F0b3ISSwocbWF4aW11bV9hdXRob3JpemF0aW9uX2Ftb3VudBgUIAEo",
            "CzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBIbChNk",
            "ZWZhdWx0X3N0YXlfbGVuZ3RoGBUgASgFEg8KB3dlYnNpdGUYFiABKAkSGQoR",
            "cmVzZXJ2YXRpb25fZW1haWwYFyABKAkSEgoKZmF4X251bWJlchgeIAEoCRIW",
            "Cg5ib29raW5nX3ByZWZpeBgfIAEoCRImCh52b2lkX2F1dGhvcml6YXRpb25z",
            "X2FmdGVyX2RheXMYICABKA0SGwoTbm9fc2hvd19kZWxheV9ob3VycxghIAEo",
            "DUIrWg10ZW5hbmN5Y29uZmlnqgIZSE9MTVMuVHlwZXMuVGVuYW5jeUNvbmZp",
            "Z2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicatorReflection.Descriptor, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.TenancyConfig.Property), global::HOLMS.Types.TenancyConfig.Property.Parser, new[]{ "EntityId", "Description", "CheckinTimeOfDay", "CheckOutTimeOfDay", "RolloverTimeOfDay", "AllowedEarlyCheckinHours", "IifDocnumPrefix", "IifCustomerName", "CheckinDeposit", "LastRevenueAccrualStart", "LastDateHkRolloverRan", "Address1", "Address2", "City", "State", "Zip", "PhoneNumber", "CardMerchant", "CancellationPolicy", "MaximumAuthorizationAmount", "DefaultStayLength", "Website", "ReservationEmail", "FaxNumber", "BookingPrefix", "VoidAuthorizationsAfterDays", "NoShowDelayHours" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Property : pb::IMessage<Property> {
    private static readonly pb::MessageParser<Property> _parser = new pb::MessageParser<Property>(() => new Property());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Property> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.TenancyConfig.PropertyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property(Property other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      description_ = other.description_;
      CheckinTimeOfDay = other.checkinTimeOfDay_ != null ? other.CheckinTimeOfDay.Clone() : null;
      CheckOutTimeOfDay = other.checkOutTimeOfDay_ != null ? other.CheckOutTimeOfDay.Clone() : null;
      RolloverTimeOfDay = other.rolloverTimeOfDay_ != null ? other.RolloverTimeOfDay.Clone() : null;
      allowedEarlyCheckinHours_ = other.allowedEarlyCheckinHours_;
      iifDocnumPrefix_ = other.iifDocnumPrefix_;
      iifCustomerName_ = other.iifCustomerName_;
      CheckinDeposit = other.checkinDeposit_ != null ? other.CheckinDeposit.Clone() : null;
      LastRevenueAccrualStart = other.lastRevenueAccrualStart_ != null ? other.LastRevenueAccrualStart.Clone() : null;
      LastDateHkRolloverRan = other.lastDateHkRolloverRan_ != null ? other.LastDateHkRolloverRan.Clone() : null;
      address1_ = other.address1_;
      address2_ = other.address2_;
      city_ = other.city_;
      state_ = other.state_;
      zip_ = other.zip_;
      phoneNumber_ = other.phoneNumber_;
      CardMerchant = other.cardMerchant_ != null ? other.CardMerchant.Clone() : null;
      CancellationPolicy = other.cancellationPolicy_ != null ? other.CancellationPolicy.Clone() : null;
      MaximumAuthorizationAmount = other.maximumAuthorizationAmount_ != null ? other.MaximumAuthorizationAmount.Clone() : null;
      defaultStayLength_ = other.defaultStayLength_;
      website_ = other.website_;
      reservationEmail_ = other.reservationEmail_;
      faxNumber_ = other.faxNumber_;
      bookingPrefix_ = other.bookingPrefix_;
      voidAuthorizationsAfterDays_ = other.voidAuthorizationsAfterDays_;
      noShowDelayHours_ = other.noShowDelayHours_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property Clone() {
      return new Property(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkin_time_of_day" field.</summary>
    public const int CheckinTimeOfDayFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration checkinTimeOfDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration CheckinTimeOfDay {
      get { return checkinTimeOfDay_; }
      set {
        checkinTimeOfDay_ = value;
      }
    }

    /// <summary>Field number for the "check_out_time_of_day" field.</summary>
    public const int CheckOutTimeOfDayFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration checkOutTimeOfDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration CheckOutTimeOfDay {
      get { return checkOutTimeOfDay_; }
      set {
        checkOutTimeOfDay_ = value;
      }
    }

    /// <summary>Field number for the "rollover_time_of_day" field.</summary>
    public const int RolloverTimeOfDayFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration rolloverTimeOfDay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration RolloverTimeOfDay {
      get { return rolloverTimeOfDay_; }
      set {
        rolloverTimeOfDay_ = value;
      }
    }

    /// <summary>Field number for the "allowed_early_checkin_hours" field.</summary>
    public const int AllowedEarlyCheckinHoursFieldNumber = 6;
    private uint allowedEarlyCheckinHours_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AllowedEarlyCheckinHours {
      get { return allowedEarlyCheckinHours_; }
      set {
        allowedEarlyCheckinHours_ = value;
      }
    }

    /// <summary>Field number for the "iif_docnum_prefix" field.</summary>
    public const int IifDocnumPrefixFieldNumber = 7;
    private string iifDocnumPrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IifDocnumPrefix {
      get { return iifDocnumPrefix_; }
      set {
        iifDocnumPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iif_customer_name" field.</summary>
    public const int IifCustomerNameFieldNumber = 8;
    private string iifCustomerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IifCustomerName {
      get { return iifCustomerName_; }
      set {
        iifCustomerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkin_deposit" field.</summary>
    public const int CheckinDepositFieldNumber = 9;
    private global::HOLMS.Types.Primitive.MonetaryAmount checkinDeposit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CheckinDeposit {
      get { return checkinDeposit_; }
      set {
        checkinDeposit_ = value;
      }
    }

    /// <summary>Field number for the "last_revenue_accrual_start" field.</summary>
    public const int LastRevenueAccrualStartFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRevenueAccrualStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRevenueAccrualStart {
      get { return lastRevenueAccrualStart_; }
      set {
        lastRevenueAccrualStart_ = value;
      }
    }

    /// <summary>Field number for the "last_date_hk_rollover_ran" field.</summary>
    public const int LastDateHkRolloverRanFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastDateHkRolloverRan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastDateHkRolloverRan {
      get { return lastDateHkRolloverRan_; }
      set {
        lastDateHkRolloverRan_ = value;
      }
    }

    /// <summary>Field number for the "address1" field.</summary>
    public const int Address1FieldNumber = 12;
    private string address1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address1 {
      get { return address1_; }
      set {
        address1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address2" field.</summary>
    public const int Address2FieldNumber = 13;
    private string address2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address2 {
      get { return address2_; }
      set {
        address2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 14;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 15;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zip" field.</summary>
    public const int ZipFieldNumber = 16;
    private string zip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zip {
      get { return zip_; }
      set {
        zip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 17;
    private string phoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "card_merchant" field.</summary>
    public const int CardMerchantFieldNumber = 18;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator cardMerchant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator CardMerchant {
      get { return cardMerchant_; }
      set {
        cardMerchant_ = value;
      }
    }

    /// <summary>Field number for the "cancellation_policy" field.</summary>
    public const int CancellationPolicyFieldNumber = 19;
    private global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator cancellationPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator CancellationPolicy {
      get { return cancellationPolicy_; }
      set {
        cancellationPolicy_ = value;
      }
    }

    /// <summary>Field number for the "maximum_authorization_amount" field.</summary>
    public const int MaximumAuthorizationAmountFieldNumber = 20;
    private global::HOLMS.Types.Primitive.MonetaryAmount maximumAuthorizationAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount MaximumAuthorizationAmount {
      get { return maximumAuthorizationAmount_; }
      set {
        maximumAuthorizationAmount_ = value;
      }
    }

    /// <summary>Field number for the "default_stay_length" field.</summary>
    public const int DefaultStayLengthFieldNumber = 21;
    private int defaultStayLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefaultStayLength {
      get { return defaultStayLength_; }
      set {
        defaultStayLength_ = value;
      }
    }

    /// <summary>Field number for the "website" field.</summary>
    public const int WebsiteFieldNumber = 22;
    private string website_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Website {
      get { return website_; }
      set {
        website_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reservation_email" field.</summary>
    public const int ReservationEmailFieldNumber = 23;
    private string reservationEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReservationEmail {
      get { return reservationEmail_; }
      set {
        reservationEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fax_number" field.</summary>
    public const int FaxNumberFieldNumber = 30;
    private string faxNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FaxNumber {
      get { return faxNumber_; }
      set {
        faxNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "booking_prefix" field.</summary>
    public const int BookingPrefixFieldNumber = 31;
    private string bookingPrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingPrefix {
      get { return bookingPrefix_; }
      set {
        bookingPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "void_authorizations_after_days" field.</summary>
    public const int VoidAuthorizationsAfterDaysFieldNumber = 32;
    private uint voidAuthorizationsAfterDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint VoidAuthorizationsAfterDays {
      get { return voidAuthorizationsAfterDays_; }
      set {
        voidAuthorizationsAfterDays_ = value;
      }
    }

    /// <summary>Field number for the "no_show_delay_hours" field.</summary>
    public const int NoShowDelayHoursFieldNumber = 33;
    private uint noShowDelayHours_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NoShowDelayHours {
      get { return noShowDelayHours_; }
      set {
        noShowDelayHours_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Property);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Property other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(CheckinTimeOfDay, other.CheckinTimeOfDay)) return false;
      if (!object.Equals(CheckOutTimeOfDay, other.CheckOutTimeOfDay)) return false;
      if (!object.Equals(RolloverTimeOfDay, other.RolloverTimeOfDay)) return false;
      if (AllowedEarlyCheckinHours != other.AllowedEarlyCheckinHours) return false;
      if (IifDocnumPrefix != other.IifDocnumPrefix) return false;
      if (IifCustomerName != other.IifCustomerName) return false;
      if (!object.Equals(CheckinDeposit, other.CheckinDeposit)) return false;
      if (!object.Equals(LastRevenueAccrualStart, other.LastRevenueAccrualStart)) return false;
      if (!object.Equals(LastDateHkRolloverRan, other.LastDateHkRolloverRan)) return false;
      if (Address1 != other.Address1) return false;
      if (Address2 != other.Address2) return false;
      if (City != other.City) return false;
      if (State != other.State) return false;
      if (Zip != other.Zip) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (!object.Equals(CardMerchant, other.CardMerchant)) return false;
      if (!object.Equals(CancellationPolicy, other.CancellationPolicy)) return false;
      if (!object.Equals(MaximumAuthorizationAmount, other.MaximumAuthorizationAmount)) return false;
      if (DefaultStayLength != other.DefaultStayLength) return false;
      if (Website != other.Website) return false;
      if (ReservationEmail != other.ReservationEmail) return false;
      if (FaxNumber != other.FaxNumber) return false;
      if (BookingPrefix != other.BookingPrefix) return false;
      if (VoidAuthorizationsAfterDays != other.VoidAuthorizationsAfterDays) return false;
      if (NoShowDelayHours != other.NoShowDelayHours) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (checkinTimeOfDay_ != null) hash ^= CheckinTimeOfDay.GetHashCode();
      if (checkOutTimeOfDay_ != null) hash ^= CheckOutTimeOfDay.GetHashCode();
      if (rolloverTimeOfDay_ != null) hash ^= RolloverTimeOfDay.GetHashCode();
      if (AllowedEarlyCheckinHours != 0) hash ^= AllowedEarlyCheckinHours.GetHashCode();
      if (IifDocnumPrefix.Length != 0) hash ^= IifDocnumPrefix.GetHashCode();
      if (IifCustomerName.Length != 0) hash ^= IifCustomerName.GetHashCode();
      if (checkinDeposit_ != null) hash ^= CheckinDeposit.GetHashCode();
      if (lastRevenueAccrualStart_ != null) hash ^= LastRevenueAccrualStart.GetHashCode();
      if (lastDateHkRolloverRan_ != null) hash ^= LastDateHkRolloverRan.GetHashCode();
      if (Address1.Length != 0) hash ^= Address1.GetHashCode();
      if (Address2.Length != 0) hash ^= Address2.GetHashCode();
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (Zip.Length != 0) hash ^= Zip.GetHashCode();
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (cardMerchant_ != null) hash ^= CardMerchant.GetHashCode();
      if (cancellationPolicy_ != null) hash ^= CancellationPolicy.GetHashCode();
      if (maximumAuthorizationAmount_ != null) hash ^= MaximumAuthorizationAmount.GetHashCode();
      if (DefaultStayLength != 0) hash ^= DefaultStayLength.GetHashCode();
      if (Website.Length != 0) hash ^= Website.GetHashCode();
      if (ReservationEmail.Length != 0) hash ^= ReservationEmail.GetHashCode();
      if (FaxNumber.Length != 0) hash ^= FaxNumber.GetHashCode();
      if (BookingPrefix.Length != 0) hash ^= BookingPrefix.GetHashCode();
      if (VoidAuthorizationsAfterDays != 0) hash ^= VoidAuthorizationsAfterDays.GetHashCode();
      if (NoShowDelayHours != 0) hash ^= NoShowDelayHours.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (checkinTimeOfDay_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CheckinTimeOfDay);
      }
      if (checkOutTimeOfDay_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CheckOutTimeOfDay);
      }
      if (rolloverTimeOfDay_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RolloverTimeOfDay);
      }
      if (AllowedEarlyCheckinHours != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(AllowedEarlyCheckinHours);
      }
      if (IifDocnumPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IifDocnumPrefix);
      }
      if (IifCustomerName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IifCustomerName);
      }
      if (checkinDeposit_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CheckinDeposit);
      }
      if (lastRevenueAccrualStart_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LastRevenueAccrualStart);
      }
      if (lastDateHkRolloverRan_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(LastDateHkRolloverRan);
      }
      if (Address1.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Address1);
      }
      if (Address2.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Address2);
      }
      if (City.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(City);
      }
      if (State.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(State);
      }
      if (Zip.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Zip);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(PhoneNumber);
      }
      if (cardMerchant_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CardMerchant);
      }
      if (cancellationPolicy_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(CancellationPolicy);
      }
      if (maximumAuthorizationAmount_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(MaximumAuthorizationAmount);
      }
      if (DefaultStayLength != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(DefaultStayLength);
      }
      if (Website.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Website);
      }
      if (ReservationEmail.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ReservationEmail);
      }
      if (FaxNumber.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(FaxNumber);
      }
      if (BookingPrefix.Length != 0) {
        output.WriteRawTag(250, 1);
        output.WriteString(BookingPrefix);
      }
      if (VoidAuthorizationsAfterDays != 0) {
        output.WriteRawTag(128, 2);
        output.WriteUInt32(VoidAuthorizationsAfterDays);
      }
      if (NoShowDelayHours != 0) {
        output.WriteRawTag(136, 2);
        output.WriteUInt32(NoShowDelayHours);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (checkinTimeOfDay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CheckinTimeOfDay);
      }
      if (checkOutTimeOfDay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CheckOutTimeOfDay);
      }
      if (rolloverTimeOfDay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RolloverTimeOfDay);
      }
      if (AllowedEarlyCheckinHours != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AllowedEarlyCheckinHours);
      }
      if (IifDocnumPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IifDocnumPrefix);
      }
      if (IifCustomerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IifCustomerName);
      }
      if (checkinDeposit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CheckinDeposit);
      }
      if (lastRevenueAccrualStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRevenueAccrualStart);
      }
      if (lastDateHkRolloverRan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastDateHkRolloverRan);
      }
      if (Address1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address1);
      }
      if (Address2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address2);
      }
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (Zip.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Zip);
      }
      if (PhoneNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (cardMerchant_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CardMerchant);
      }
      if (cancellationPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CancellationPolicy);
      }
      if (maximumAuthorizationAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaximumAuthorizationAmount);
      }
      if (DefaultStayLength != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DefaultStayLength);
      }
      if (Website.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Website);
      }
      if (ReservationEmail.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReservationEmail);
      }
      if (FaxNumber.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FaxNumber);
      }
      if (BookingPrefix.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BookingPrefix);
      }
      if (VoidAuthorizationsAfterDays != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(VoidAuthorizationsAfterDays);
      }
      if (NoShowDelayHours != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NoShowDelayHours);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Property other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.checkinTimeOfDay_ != null) {
        if (checkinTimeOfDay_ == null) {
          checkinTimeOfDay_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CheckinTimeOfDay.MergeFrom(other.CheckinTimeOfDay);
      }
      if (other.checkOutTimeOfDay_ != null) {
        if (checkOutTimeOfDay_ == null) {
          checkOutTimeOfDay_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CheckOutTimeOfDay.MergeFrom(other.CheckOutTimeOfDay);
      }
      if (other.rolloverTimeOfDay_ != null) {
        if (rolloverTimeOfDay_ == null) {
          rolloverTimeOfDay_ = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        RolloverTimeOfDay.MergeFrom(other.RolloverTimeOfDay);
      }
      if (other.AllowedEarlyCheckinHours != 0) {
        AllowedEarlyCheckinHours = other.AllowedEarlyCheckinHours;
      }
      if (other.IifDocnumPrefix.Length != 0) {
        IifDocnumPrefix = other.IifDocnumPrefix;
      }
      if (other.IifCustomerName.Length != 0) {
        IifCustomerName = other.IifCustomerName;
      }
      if (other.checkinDeposit_ != null) {
        if (checkinDeposit_ == null) {
          checkinDeposit_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CheckinDeposit.MergeFrom(other.CheckinDeposit);
      }
      if (other.lastRevenueAccrualStart_ != null) {
        if (lastRevenueAccrualStart_ == null) {
          lastRevenueAccrualStart_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRevenueAccrualStart.MergeFrom(other.LastRevenueAccrualStart);
      }
      if (other.lastDateHkRolloverRan_ != null) {
        if (lastDateHkRolloverRan_ == null) {
          lastDateHkRolloverRan_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastDateHkRolloverRan.MergeFrom(other.LastDateHkRolloverRan);
      }
      if (other.Address1.Length != 0) {
        Address1 = other.Address1;
      }
      if (other.Address2.Length != 0) {
        Address2 = other.Address2;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.Zip.Length != 0) {
        Zip = other.Zip;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.cardMerchant_ != null) {
        if (cardMerchant_ == null) {
          cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        CardMerchant.MergeFrom(other.CardMerchant);
      }
      if (other.cancellationPolicy_ != null) {
        if (cancellationPolicy_ == null) {
          cancellationPolicy_ = new global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator();
        }
        CancellationPolicy.MergeFrom(other.CancellationPolicy);
      }
      if (other.maximumAuthorizationAmount_ != null) {
        if (maximumAuthorizationAmount_ == null) {
          maximumAuthorizationAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        MaximumAuthorizationAmount.MergeFrom(other.MaximumAuthorizationAmount);
      }
      if (other.DefaultStayLength != 0) {
        DefaultStayLength = other.DefaultStayLength;
      }
      if (other.Website.Length != 0) {
        Website = other.Website;
      }
      if (other.ReservationEmail.Length != 0) {
        ReservationEmail = other.ReservationEmail;
      }
      if (other.FaxNumber.Length != 0) {
        FaxNumber = other.FaxNumber;
      }
      if (other.BookingPrefix.Length != 0) {
        BookingPrefix = other.BookingPrefix;
      }
      if (other.VoidAuthorizationsAfterDays != 0) {
        VoidAuthorizationsAfterDays = other.VoidAuthorizationsAfterDays;
      }
      if (other.NoShowDelayHours != 0) {
        NoShowDelayHours = other.NoShowDelayHours;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (checkinTimeOfDay_ == null) {
              checkinTimeOfDay_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(checkinTimeOfDay_);
            break;
          }
          case 34: {
            if (checkOutTimeOfDay_ == null) {
              checkOutTimeOfDay_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(checkOutTimeOfDay_);
            break;
          }
          case 42: {
            if (rolloverTimeOfDay_ == null) {
              rolloverTimeOfDay_ = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(rolloverTimeOfDay_);
            break;
          }
          case 48: {
            AllowedEarlyCheckinHours = input.ReadUInt32();
            break;
          }
          case 58: {
            IifDocnumPrefix = input.ReadString();
            break;
          }
          case 66: {
            IifCustomerName = input.ReadString();
            break;
          }
          case 74: {
            if (checkinDeposit_ == null) {
              checkinDeposit_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(checkinDeposit_);
            break;
          }
          case 82: {
            if (lastRevenueAccrualStart_ == null) {
              lastRevenueAccrualStart_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastRevenueAccrualStart_);
            break;
          }
          case 90: {
            if (lastDateHkRolloverRan_ == null) {
              lastDateHkRolloverRan_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(lastDateHkRolloverRan_);
            break;
          }
          case 98: {
            Address1 = input.ReadString();
            break;
          }
          case 106: {
            Address2 = input.ReadString();
            break;
          }
          case 114: {
            City = input.ReadString();
            break;
          }
          case 122: {
            State = input.ReadString();
            break;
          }
          case 130: {
            Zip = input.ReadString();
            break;
          }
          case 138: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 146: {
            if (cardMerchant_ == null) {
              cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(cardMerchant_);
            break;
          }
          case 154: {
            if (cancellationPolicy_ == null) {
              cancellationPolicy_ = new global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator();
            }
            input.ReadMessage(cancellationPolicy_);
            break;
          }
          case 162: {
            if (maximumAuthorizationAmount_ == null) {
              maximumAuthorizationAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(maximumAuthorizationAmount_);
            break;
          }
          case 168: {
            DefaultStayLength = input.ReadInt32();
            break;
          }
          case 178: {
            Website = input.ReadString();
            break;
          }
          case 186: {
            ReservationEmail = input.ReadString();
            break;
          }
          case 242: {
            FaxNumber = input.ReadString();
            break;
          }
          case 250: {
            BookingPrefix = input.ReadString();
            break;
          }
          case 256: {
            VoidAuthorizationsAfterDays = input.ReadUInt32();
            break;
          }
          case 264: {
            NoShowDelayHours = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
