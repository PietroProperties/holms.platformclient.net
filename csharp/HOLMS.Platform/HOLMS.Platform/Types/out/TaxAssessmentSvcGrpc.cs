// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/rpc/tax_assessment_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.Folio.RPC {
  public static partial class TaxAssessmentSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.TaxAssessmentSvc";

    static readonly grpc::Marshaller<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment> __Marshaller_TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> __Marshaller_TaxAssessmentSvcHypotheticalAdjustmentAssessment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment> __Marshaller_TaxAssessmentSvcHypotheticalReservationFolioAdjustment = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment.Parser.ParseFrom);

    static readonly grpc::Method<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment, global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> __Method_AssessHypotheticalGroupBookingFolioAdjustment = new grpc::Method<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment, global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AssessHypotheticalGroupBookingFolioAdjustment",
        __Marshaller_TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment,
        __Marshaller_TaxAssessmentSvcHypotheticalAdjustmentAssessment);

    static readonly grpc::Method<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment, global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> __Method_AssessHypotheticalReservaionFolioAdjustment = new grpc::Method<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment, global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AssessHypotheticalReservaionFolioAdjustment",
        __Marshaller_TaxAssessmentSvcHypotheticalReservationFolioAdjustment,
        __Marshaller_TaxAssessmentSvcHypotheticalAdjustmentAssessment);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TaxAssessmentSvc</summary>
    public abstract partial class TaxAssessmentSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> AssessHypotheticalGroupBookingFolioAdjustment(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> AssessHypotheticalReservaionFolioAdjustment(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TaxAssessmentSvc</summary>
    public partial class TaxAssessmentSvcClient : grpc::ClientBase<TaxAssessmentSvcClient>
    {
      /// <summary>Creates a new client for TaxAssessmentSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public TaxAssessmentSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TaxAssessmentSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public TaxAssessmentSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected TaxAssessmentSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected TaxAssessmentSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment AssessHypotheticalGroupBookingFolioAdjustment(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AssessHypotheticalGroupBookingFolioAdjustment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment AssessHypotheticalGroupBookingFolioAdjustment(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AssessHypotheticalGroupBookingFolioAdjustment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> AssessHypotheticalGroupBookingFolioAdjustmentAsync(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AssessHypotheticalGroupBookingFolioAdjustmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> AssessHypotheticalGroupBookingFolioAdjustmentAsync(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AssessHypotheticalGroupBookingFolioAdjustment, null, options, request);
      }
      public virtual global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment AssessHypotheticalReservaionFolioAdjustment(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AssessHypotheticalReservaionFolioAdjustment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment AssessHypotheticalReservaionFolioAdjustment(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AssessHypotheticalReservaionFolioAdjustment, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> AssessHypotheticalReservaionFolioAdjustmentAsync(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AssessHypotheticalReservaionFolioAdjustmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment> AssessHypotheticalReservaionFolioAdjustmentAsync(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AssessHypotheticalReservaionFolioAdjustment, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override TaxAssessmentSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TaxAssessmentSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(TaxAssessmentSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AssessHypotheticalGroupBookingFolioAdjustment, serviceImpl.AssessHypotheticalGroupBookingFolioAdjustment)
          .AddMethod(__Method_AssessHypotheticalReservaionFolioAdjustment, serviceImpl.AssessHypotheticalReservaionFolioAdjustment).Build();
    }

  }
}
#endregion
