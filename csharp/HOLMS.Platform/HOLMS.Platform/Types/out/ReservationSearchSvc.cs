// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/reservation_search_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.RPC {

  /// <summary>Holder for reflection information generated from booking/rpc/reservation_search_svc.proto</summary>
  public static partial class ReservationSearchSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/rpc/reservation_search_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationSearchSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihib29raW5nL3JwYy9yZXNlcnZhdGlvbl9zZWFyY2hfc3ZjLnByb3RvEhdo",
            "b2xtcy50eXBlcy5ib29raW5nLnJwYxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90bxouYm9va2luZy9pbmRpY2F0b3JzL3Jlc2VydmF0aW9uX2lu",
            "ZGljYXRvci5wcm90bxozYm9va2luZy9yZXNlcnZhdGlvbnMvcmVzZXJ2YXRp",
            "b25fcXVlcnlfZmlsdGVyLnByb3RvGi5ib29raW5nL3Jlc2VydmF0aW9ucy9y",
            "ZXNlcnZhdGlvbl9zdW1tYXJ5LnByb3RvIoEBCjVSZXNlcnZhdGlvblNlYXJj",
            "aFN2Y0dldEZpbHRlcmVkUmVzZXJ2YXRpb25MaXN0UmVxdWVzdBJICgZmaWx0",
            "ZXIYASABKA4yOC5ob2xtcy50eXBlcy5ib29raW5nLnJlc2VydmF0aW9ucy5S",
            "ZXNlcnZhdGlvblF1ZXJ5RmlsdGVyIoQBCjZSZXNlcnZhdGlvblNlYXJjaFN2",
            "Y0dldEZpbHRlcmVkUmVzZXJ2YXRpb25MaXN0UmVzcG9uc2USSgoMcmVzZXJ2",
            "YXRpb25zGAEgAygLMjQuaG9sbXMudHlwZXMuYm9va2luZy5yZXNlcnZhdGlv",
            "bnMuUmVzZXJ2YXRpb25TdW1tYXJ5IkgKMVJlc2VydmF0aW9uU2VhcmNoU3Zj",
            "U2VhcmNoUmVzZXJ2YXRpb25zQnlCb29raW5nSWQSEwoLYm9va2luZ19pX2QY",
            "ASABKAki4AEKMVJlc2VydmF0aW9uU2VhcmNoU3ZjR2V0UmVzZXJ2YXRpb25T",
            "dW1tYXJ5UmVzcG9uc2USWAoGcmVzdWx0GAEgASgOMkguaG9sbXMudHlwZXMu",
            "Ym9va2luZy5ycGMuUmVzZXJ2YXRpb25TZWFyY2hTdmNHZXRSZXNlcnZhdGlv",
            "blN1bW1hcnlSZXN1bHQSUQoTcmVzZXJ2YXRpb25fc3VtbWFyeRgCIAEoCzI0",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcucmVzZXJ2YXRpb25zLlJlc2VydmF0aW9u",
            "U3VtbWFyeSJsCh5HZXRSZXNlcnZhdGlvblN1bW1hcmllc1JlcXVlc3QSSgoM",
            "cmVzZXJ2YXRpb25zGAEgAygLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRp",
            "Y2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yKrQBCi9SZXNlcnZhdGlvblNl",
            "YXJjaFN2Y0dldFJlc2VydmF0aW9uU3VtbWFyeVJlc3VsdBI8CjhSRVNFUlZB",
            "VElPTl9TRUFSQ0hfU1ZDX0dFVF9SRVNFUlZBVElPTl9TVU1NQVJZX1JFU1VM",
            "VF9PSxAAEkMKP1JFU0VSVkFUSU9OX1NFQVJDSF9TVkNfR0VUX1JFU0VSVkFU",
            "SU9OX1NVTU1BUllfUkVTVUxUX05PVF9GT1VORBABMuQJChRSZXNlcnZhdGlv",
            "blNlYXJjaFN2YxK9AQoaR2V0RmlsdGVyZWRSZXNlcnZhdGlvbkxpc3QSTi5o",
            "b2xtcy50eXBlcy5ib29raW5nLnJwYy5SZXNlcnZhdGlvblNlYXJjaFN2Y0dl",
            "dEZpbHRlcmVkUmVzZXJ2YXRpb25MaXN0UmVxdWVzdBpPLmhvbG1zLnR5cGVz",
            "LmJvb2tpbmcucnBjLlJlc2VydmF0aW9uU2VhcmNoU3ZjR2V0RmlsdGVyZWRS",
            "ZXNlcnZhdGlvbkxpc3RSZXNwb25zZRKZAQoVR2V0UmVzZXJ2YXRpb25TdW1t",
            "YXJ5EjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0",
            "aW9uSW5kaWNhdG9yGkouaG9sbXMudHlwZXMuYm9va2luZy5ycGMuUmVzZXJ2",
            "YXRpb25TZWFyY2hTdmNHZXRSZXNlcnZhdGlvblN1bW1hcnlSZXNwb25zZRKj",
            "AQoXR2V0UmVzZXJ2YXRpb25TdW1tYXJpZXMSNy5ob2xtcy50eXBlcy5ib29r",
            "aW5nLnJwYy5HZXRSZXNlcnZhdGlvblN1bW1hcmllc1JlcXVlc3QaTy5ob2xt",
            "cy50eXBlcy5ib29raW5nLnJwYy5SZXNlcnZhdGlvblNlYXJjaFN2Y0dldEZp",
            "bHRlcmVkUmVzZXJ2YXRpb25MaXN0UmVzcG9uc2USgAEKEUdldEFycml2YWxz",
            "QnlEYXRlEhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBpPLmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcucnBjLlJlc2VydmF0aW9uU2VhcmNoU3ZjR2V0RmlsdGVy",
            "ZWRSZXNlcnZhdGlvbkxpc3RSZXNwb25zZRKCAQoTR2V0RGVwYXJ0dXJlc0J5",
            "RGF0ZRIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaTy5ob2xtcy50eXBl",
            "cy5ib29raW5nLnJwYy5SZXNlcnZhdGlvblNlYXJjaFN2Y0dldEZpbHRlcmVk",
            "UmVzZXJ2YXRpb25MaXN0UmVzcG9uc2USfwoQR2V0Tm9TaG93c0J5RGF0ZRIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaTy5ob2xtcy50eXBlcy5ib29r",
            "aW5nLnJwYy5SZXNlcnZhdGlvblNlYXJjaFN2Y0dldEZpbHRlcmVkUmVzZXJ2",
            "YXRpb25MaXN0UmVzcG9uc2USgQEKEkdldFN0YXlPdmVyc0J5RGF0ZRIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAaTy5ob2xtcy50eXBlcy5ib29raW5n",
            "LnJwYy5SZXNlcnZhdGlvblNlYXJjaFN2Y0dldEZpbHRlcmVkUmVzZXJ2YXRp",
            "b25MaXN0UmVzcG9uc2USvAEKHVNlYXJjaFJlc2VydmF0aW9uc0J5Qm9va2lu",
            "Z0lkEkouaG9sbXMudHlwZXMuYm9va2luZy5ycGMuUmVzZXJ2YXRpb25TZWFy",
            "Y2hTdmNTZWFyY2hSZXNlcnZhdGlvbnNCeUJvb2tpbmdJZBpPLmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcucnBjLlJlc2VydmF0aW9uU2VhcmNoU3ZjR2V0RmlsdGVy",
            "ZWRSZXNlcnZhdGlvbkxpc3RSZXNwb25zZUInWgtib29raW5nL3JwY6oCF0hP",
            "TE1TLlR5cGVzLkJvb2tpbmcuUlBDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Reservations.ReservationQueryFilterReflection.Descriptor, global::HOLMS.Types.Booking.Reservations.ReservationSummaryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetReservationSummaryResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetFilteredReservationListRequest), global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetFilteredReservationListRequest.Parser, new[]{ "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetFilteredReservationListResponse), global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetFilteredReservationListResponse.Parser, new[]{ "Reservations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ReservationSearchSvcSearchReservationsByBookingId), global::HOLMS.Types.Booking.RPC.ReservationSearchSvcSearchReservationsByBookingId.Parser, new[]{ "BookingID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetReservationSummaryResponse), global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetReservationSummaryResponse.Parser, new[]{ "Result", "ReservationSummary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GetReservationSummariesRequest), global::HOLMS.Types.Booking.RPC.GetReservationSummariesRequest.Parser, new[]{ "Reservations" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReservationSearchSvcGetReservationSummaryResult {
    [pbr::OriginalName("RESERVATION_SEARCH_SVC_GET_RESERVATION_SUMMARY_RESULT_OK")] Ok = 0,
    [pbr::OriginalName("RESERVATION_SEARCH_SVC_GET_RESERVATION_SUMMARY_RESULT_NOT_FOUND")] NotFound = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ReservationSearchSvcGetFilteredReservationListRequest : pb::IMessage<ReservationSearchSvcGetFilteredReservationListRequest> {
    private static readonly pb::MessageParser<ReservationSearchSvcGetFilteredReservationListRequest> _parser = new pb::MessageParser<ReservationSearchSvcGetFilteredReservationListRequest>(() => new ReservationSearchSvcGetFilteredReservationListRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationSearchSvcGetFilteredReservationListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.ReservationSearchSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetFilteredReservationListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetFilteredReservationListRequest(ReservationSearchSvcGetFilteredReservationListRequest other) : this() {
      filter_ = other.filter_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetFilteredReservationListRequest Clone() {
      return new ReservationSearchSvcGetFilteredReservationListRequest(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::HOLMS.Types.Booking.Reservations.ReservationQueryFilter filter_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Reservations.ReservationQueryFilter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationSearchSvcGetFilteredReservationListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationSearchSvcGetFilteredReservationListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter != 0) hash ^= Filter.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filter != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Filter);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Filter);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationSearchSvcGetFilteredReservationListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filter != 0) {
        Filter = other.Filter;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            filter_ = (global::HOLMS.Types.Booking.Reservations.ReservationQueryFilter) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationSearchSvcGetFilteredReservationListResponse : pb::IMessage<ReservationSearchSvcGetFilteredReservationListResponse> {
    private static readonly pb::MessageParser<ReservationSearchSvcGetFilteredReservationListResponse> _parser = new pb::MessageParser<ReservationSearchSvcGetFilteredReservationListResponse>(() => new ReservationSearchSvcGetFilteredReservationListResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationSearchSvcGetFilteredReservationListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.ReservationSearchSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetFilteredReservationListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetFilteredReservationListResponse(ReservationSearchSvcGetFilteredReservationListResponse other) : this() {
      reservations_ = other.reservations_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetFilteredReservationListResponse Clone() {
      return new ReservationSearchSvcGetFilteredReservationListResponse(this);
    }

    /// <summary>Field number for the "reservations" field.</summary>
    public const int ReservationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Reservations.ReservationSummary> _repeated_reservations_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Reservations.ReservationSummary.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationSummary> reservations_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationSummary> Reservations {
      get { return reservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationSearchSvcGetFilteredReservationListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationSearchSvcGetFilteredReservationListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reservations_.Equals(other.reservations_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reservations_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reservations_.WriteTo(output, _repeated_reservations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reservations_.CalculateSize(_repeated_reservations_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationSearchSvcGetFilteredReservationListResponse other) {
      if (other == null) {
        return;
      }
      reservations_.Add(other.reservations_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            reservations_.AddEntriesFrom(input, _repeated_reservations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationSearchSvcSearchReservationsByBookingId : pb::IMessage<ReservationSearchSvcSearchReservationsByBookingId> {
    private static readonly pb::MessageParser<ReservationSearchSvcSearchReservationsByBookingId> _parser = new pb::MessageParser<ReservationSearchSvcSearchReservationsByBookingId>(() => new ReservationSearchSvcSearchReservationsByBookingId());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationSearchSvcSearchReservationsByBookingId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.ReservationSearchSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcSearchReservationsByBookingId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcSearchReservationsByBookingId(ReservationSearchSvcSearchReservationsByBookingId other) : this() {
      bookingID_ = other.bookingID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcSearchReservationsByBookingId Clone() {
      return new ReservationSearchSvcSearchReservationsByBookingId(this);
    }

    /// <summary>Field number for the "booking_i_d" field.</summary>
    public const int BookingIDFieldNumber = 1;
    private string bookingID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingID {
      get { return bookingID_; }
      set {
        bookingID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationSearchSvcSearchReservationsByBookingId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationSearchSvcSearchReservationsByBookingId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BookingID != other.BookingID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BookingID.Length != 0) hash ^= BookingID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BookingID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BookingID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BookingID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookingID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationSearchSvcSearchReservationsByBookingId other) {
      if (other == null) {
        return;
      }
      if (other.BookingID.Length != 0) {
        BookingID = other.BookingID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            BookingID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationSearchSvcGetReservationSummaryResponse : pb::IMessage<ReservationSearchSvcGetReservationSummaryResponse> {
    private static readonly pb::MessageParser<ReservationSearchSvcGetReservationSummaryResponse> _parser = new pb::MessageParser<ReservationSearchSvcGetReservationSummaryResponse>(() => new ReservationSearchSvcGetReservationSummaryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationSearchSvcGetReservationSummaryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.ReservationSearchSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetReservationSummaryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetReservationSummaryResponse(ReservationSearchSvcGetReservationSummaryResponse other) : this() {
      result_ = other.result_;
      ReservationSummary = other.reservationSummary_ != null ? other.ReservationSummary.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSearchSvcGetReservationSummaryResponse Clone() {
      return new ReservationSearchSvcGetReservationSummaryResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetReservationSummaryResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetReservationSummaryResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "reservation_summary" field.</summary>
    public const int ReservationSummaryFieldNumber = 2;
    private global::HOLMS.Types.Booking.Reservations.ReservationSummary reservationSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Reservations.ReservationSummary ReservationSummary {
      get { return reservationSummary_; }
      set {
        reservationSummary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationSearchSvcGetReservationSummaryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationSearchSvcGetReservationSummaryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ReservationSummary, other.ReservationSummary)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (reservationSummary_ != null) hash ^= ReservationSummary.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (reservationSummary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservationSummary);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (reservationSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservationSummary);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationSearchSvcGetReservationSummaryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.reservationSummary_ != null) {
        if (reservationSummary_ == null) {
          reservationSummary_ = new global::HOLMS.Types.Booking.Reservations.ReservationSummary();
        }
        ReservationSummary.MergeFrom(other.ReservationSummary);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Booking.RPC.ReservationSearchSvcGetReservationSummaryResult) input.ReadEnum();
            break;
          }
          case 18: {
            if (reservationSummary_ == null) {
              reservationSummary_ = new global::HOLMS.Types.Booking.Reservations.ReservationSummary();
            }
            input.ReadMessage(reservationSummary_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetReservationSummariesRequest : pb::IMessage<GetReservationSummariesRequest> {
    private static readonly pb::MessageParser<GetReservationSummariesRequest> _parser = new pb::MessageParser<GetReservationSummariesRequest>(() => new GetReservationSummariesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReservationSummariesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.ReservationSearchSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationSummariesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationSummariesRequest(GetReservationSummariesRequest other) : this() {
      reservations_ = other.reservations_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationSummariesRequest Clone() {
      return new GetReservationSummariesRequest(this);
    }

    /// <summary>Field number for the "reservations" field.</summary>
    public const int ReservationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> _repeated_reservations_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Indicators.ReservationIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> reservations_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.ReservationIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> Reservations {
      get { return reservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReservationSummariesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReservationSummariesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reservations_.Equals(other.reservations_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reservations_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reservations_.WriteTo(output, _repeated_reservations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reservations_.CalculateSize(_repeated_reservations_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReservationSummariesRequest other) {
      if (other == null) {
        return;
      }
      reservations_.Add(other.reservations_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            reservations_.AddEntriesFrom(input, _repeated_reservations_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
