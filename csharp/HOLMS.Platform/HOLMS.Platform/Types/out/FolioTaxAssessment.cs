// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/fsv2/folio_tax_assessment.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio.FSv2 {

  /// <summary>Holder for reflection information generated from folio/fsv2/folio_tax_assessment.proto</summary>
  public static partial class FolioTaxAssessmentReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/fsv2/folio_tax_assessment.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FolioTaxAssessmentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVmb2xpby9mc3YyL2ZvbGlvX3RheF9hc3Nlc3NtZW50LnByb3RvEhZob2xt",
            "cy50eXBlcy5mb2xpby5mc3YyGihtb25leS9hY2NvdW50aW5nL3RheF9mZWVf",
            "aW5kaWNhdG9yLnByb3RvGh9wcmltaXRpdmUvbW9uZXRhcnlfYW1vdW50LnBy",
            "b3RvIp0BChJGb2xpb1RheEFzc2Vzc21lbnQSEAoIdGF4X25hbWUYASABKAkS",
            "PgoHdGF4X2ZlZRgCIAEoCzItLmhvbG1zLnR5cGVzLm1vbmV5LmFjY291bnRp",
            "bmcuVGF4RmVlSW5kaWNhdG9yEjUKBmFtb3VudBgDIAEoCzIlLmhvbG1zLnR5",
            "cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudEIZqgIWSE9MTVMuVHlwZXMu",
            "Rm9saW8uRlN2MmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Accounting.TaxFeeIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment), global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment.Parser, new[]{ "TaxName", "TaxFee", "Amount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FolioTaxAssessment : pb::IMessage<FolioTaxAssessment> {
    private static readonly pb::MessageParser<FolioTaxAssessment> _parser = new pb::MessageParser<FolioTaxAssessment>(() => new FolioTaxAssessment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolioTaxAssessment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.FSv2.FolioTaxAssessmentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioTaxAssessment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioTaxAssessment(FolioTaxAssessment other) : this() {
      taxName_ = other.taxName_;
      TaxFee = other.taxFee_ != null ? other.TaxFee.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioTaxAssessment Clone() {
      return new FolioTaxAssessment(this);
    }

    /// <summary>Field number for the "tax_name" field.</summary>
    public const int TaxNameFieldNumber = 1;
    private string taxName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxName {
      get { return taxName_; }
      set {
        taxName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tax_fee" field.</summary>
    public const int TaxFeeFieldNumber = 2;
    private global::HOLMS.Types.Money.Accounting.TaxFeeIndicator taxFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.TaxFeeIndicator TaxFee {
      get { return taxFee_; }
      set {
        taxFee_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolioTaxAssessment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolioTaxAssessment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaxName != other.TaxName) return false;
      if (!object.Equals(TaxFee, other.TaxFee)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaxName.Length != 0) hash ^= TaxName.GetHashCode();
      if (taxFee_ != null) hash ^= TaxFee.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaxName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaxName);
      }
      if (taxFee_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaxFee);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaxName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaxName);
      }
      if (taxFee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaxFee);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolioTaxAssessment other) {
      if (other == null) {
        return;
      }
      if (other.TaxName.Length != 0) {
        TaxName = other.TaxName;
      }
      if (other.taxFee_ != null) {
        if (taxFee_ == null) {
          taxFee_ = new global::HOLMS.Types.Money.Accounting.TaxFeeIndicator();
        }
        TaxFee.MergeFrom(other.TaxFee);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TaxName = input.ReadString();
            break;
          }
          case 18: {
            if (taxFee_ == null) {
              taxFee_ = new global::HOLMS.Types.Money.Accounting.TaxFeeIndicator();
            }
            input.ReadMessage(taxFee_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
