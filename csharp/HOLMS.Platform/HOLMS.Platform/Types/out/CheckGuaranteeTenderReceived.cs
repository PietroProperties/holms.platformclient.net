// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/reservations/check_guarantee_tender_received.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Reservations {

  /// <summary>Holder for reflection information generated from booking/reservations/check_guarantee_tender_received.proto</summary>
  public static partial class CheckGuaranteeTenderReceivedReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/reservations/check_guarantee_tender_received.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CheckGuaranteeTenderReceivedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjpib29raW5nL3Jlc2VydmF0aW9ucy9jaGVja19ndWFyYW50ZWVfdGVuZGVy",
            "X3JlY2VpdmVkLnByb3RvEiBob2xtcy50eXBlcy5ib29raW5nLnJlc2VydmF0",
            "aW9ucxouYm9va2luZy9pbmRpY2F0b3JzL3Jlc2VydmF0aW9uX2luZGljYXRv",
            "ci5wcm90bxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90byK2AQoc",
            "Q2hlY2tHdWFyYW50ZWVUZW5kZXJSZWNlaXZlZBJJCgtyZXNlcnZhdGlvbhgB",
            "IAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZh",
            "dGlvbkluZGljYXRvchI1CgZhbW91bnQYAiABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQSFAoMY2hlY2tfbnVtYmVyGAMgASgJ",
            "QjlaFGJvb2tpbmcvcmVzZXJ2YXRpb25zqgIgSE9MTVMuVHlwZXMuQm9va2lu",
            "Zy5SZXNlcnZhdGlvbnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Reservations.CheckGuaranteeTenderReceived), global::HOLMS.Types.Booking.Reservations.CheckGuaranteeTenderReceived.Parser, new[]{ "Reservation", "Amount", "CheckNumber" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CheckGuaranteeTenderReceived : pb::IMessage<CheckGuaranteeTenderReceived> {
    private static readonly pb::MessageParser<CheckGuaranteeTenderReceived> _parser = new pb::MessageParser<CheckGuaranteeTenderReceived>(() => new CheckGuaranteeTenderReceived());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckGuaranteeTenderReceived> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Reservations.CheckGuaranteeTenderReceivedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckGuaranteeTenderReceived() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckGuaranteeTenderReceived(CheckGuaranteeTenderReceived other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      checkNumber_ = other.checkNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckGuaranteeTenderReceived Clone() {
      return new CheckGuaranteeTenderReceived(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "check_number" field.</summary>
    public const int CheckNumberFieldNumber = 3;
    private string checkNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckNumber {
      get { return checkNumber_; }
      set {
        checkNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckGuaranteeTenderReceived);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckGuaranteeTenderReceived other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (CheckNumber != other.CheckNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (CheckNumber.Length != 0) hash ^= CheckNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (CheckNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CheckNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (CheckNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CheckNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckGuaranteeTenderReceived other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.CheckNumber.Length != 0) {
        CheckNumber = other.CheckNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            CheckNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
