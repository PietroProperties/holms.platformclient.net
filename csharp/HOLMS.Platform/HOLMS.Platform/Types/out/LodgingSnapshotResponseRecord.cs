// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/snapshot/lodging_snapshot_response_record.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.Snapshot {

  /// <summary>Holder for reflection information generated from supply/snapshot/lodging_snapshot_response_record.proto</summary>
  public static partial class LodgingSnapshotResponseRecordReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/snapshot/lodging_snapshot_response_record.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LodgingSnapshotResponseRecordReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZzdXBwbHkvc25hcHNob3QvbG9kZ2luZ19zbmFwc2hvdF9yZXNwb25zZV9y",
            "ZWNvcmQucHJvdG8SG2hvbG1zLnR5cGVzLnN1cHBseS5zbmFwc2hvdBodcHJp",
            "bWl0aXZlL3BiX2xvY2FsX2RhdGUucHJvdG8aH3ByaW1pdGl2ZS9tb25ldGFy",
            "eV9hbW91bnQucHJvdG8aK3N1cHBseS9yb29tX3R5cGVzL3Jvb21fdHlwZV9p",
            "bmRpY2F0b3IucHJvdG8aL3N1cHBseS9zbmFwc2hvdC9sb2RnaW5nX3NuYXBz",
            "aG90X3F1YW50aXR5LnByb3RvIsECCh1Mb2RnaW5nU25hcHNob3RSZXNwb25z",
            "ZVJlY29yZBJDCglyb29tX3R5cGUYASABKAsyMC5ob2xtcy50eXBlcy5zdXBw",
            "bHkucm9vbV90eXBlcy5Sb29tVHlwZUluZGljYXRvchIwCgRkYXRlGAIgASgL",
            "MiIuaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiTG9jYWxEYXRlEjwKDW9mZmVy",
            "ZWRfcHJpY2UYAyABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRh",
            "cnlBbW91bnQSSAoKcXVhbnRpdGllcxgEIAEoCzI0LmhvbG1zLnR5cGVzLnN1",
            "cHBseS5zbmFwc2hvdC5Mb2RnaW5nU25hcHNob3RRdWFudGl0eRIhChlyZXF1",
            "aXJlZF9yZXNlcnZhdGlvbl90YWdzGAUgAygJQi9aD3N1cHBseS9zbmFwc2hv",
            "dKoCG0hPTE1TLlR5cGVzLlN1cHBseS5TbmFwc2hvdGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbLocalDateReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotQuantityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotResponseRecord), global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotResponseRecord.Parser, new[]{ "RoomType", "Date", "OfferedPrice", "Quantities", "RequiredReservationTags" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LodgingSnapshotResponseRecord : pb::IMessage<LodgingSnapshotResponseRecord> {
    private static readonly pb::MessageParser<LodgingSnapshotResponseRecord> _parser = new pb::MessageParser<LodgingSnapshotResponseRecord>(() => new LodgingSnapshotResponseRecord());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LodgingSnapshotResponseRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotResponseRecordReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LodgingSnapshotResponseRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LodgingSnapshotResponseRecord(LodgingSnapshotResponseRecord other) : this() {
      RoomType = other.roomType_ != null ? other.RoomType.Clone() : null;
      Date = other.date_ != null ? other.Date.Clone() : null;
      OfferedPrice = other.offeredPrice_ != null ? other.OfferedPrice.Clone() : null;
      Quantities = other.quantities_ != null ? other.Quantities.Clone() : null;
      requiredReservationTags_ = other.requiredReservationTags_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LodgingSnapshotResponseRecord Clone() {
      return new LodgingSnapshotResponseRecord(this);
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 1;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomType {
      get { return roomType_; }
      set {
        roomType_ = value;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbLocalDate date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "offered_price" field.</summary>
    public const int OfferedPriceFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount offeredPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount OfferedPrice {
      get { return offeredPrice_; }
      set {
        offeredPrice_ = value;
      }
    }

    /// <summary>Field number for the "quantities" field.</summary>
    public const int QuantitiesFieldNumber = 4;
    private global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotQuantity quantities_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotQuantity Quantities {
      get { return quantities_; }
      set {
        quantities_ = value;
      }
    }

    /// <summary>Field number for the "required_reservation_tags" field.</summary>
    public const int RequiredReservationTagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_requiredReservationTags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> requiredReservationTags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RequiredReservationTags {
      get { return requiredReservationTags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LodgingSnapshotResponseRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LodgingSnapshotResponseRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoomType, other.RoomType)) return false;
      if (!object.Equals(Date, other.Date)) return false;
      if (!object.Equals(OfferedPrice, other.OfferedPrice)) return false;
      if (!object.Equals(Quantities, other.Quantities)) return false;
      if(!requiredReservationTags_.Equals(other.requiredReservationTags_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (roomType_ != null) hash ^= RoomType.GetHashCode();
      if (date_ != null) hash ^= Date.GetHashCode();
      if (offeredPrice_ != null) hash ^= OfferedPrice.GetHashCode();
      if (quantities_ != null) hash ^= Quantities.GetHashCode();
      hash ^= requiredReservationTags_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (roomType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoomType);
      }
      if (date_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Date);
      }
      if (offeredPrice_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OfferedPrice);
      }
      if (quantities_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Quantities);
      }
      requiredReservationTags_.WriteTo(output, _repeated_requiredReservationTags_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (roomType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomType);
      }
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (offeredPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OfferedPrice);
      }
      if (quantities_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quantities);
      }
      size += requiredReservationTags_.CalculateSize(_repeated_requiredReservationTags_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LodgingSnapshotResponseRecord other) {
      if (other == null) {
        return;
      }
      if (other.roomType_ != null) {
        if (roomType_ == null) {
          roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomType.MergeFrom(other.RoomType);
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.offeredPrice_ != null) {
        if (offeredPrice_ == null) {
          offeredPrice_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        OfferedPrice.MergeFrom(other.OfferedPrice);
      }
      if (other.quantities_ != null) {
        if (quantities_ == null) {
          quantities_ = new global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotQuantity();
        }
        Quantities.MergeFrom(other.Quantities);
      }
      requiredReservationTags_.Add(other.requiredReservationTags_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (roomType_ == null) {
              roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomType_);
            break;
          }
          case 18: {
            if (date_ == null) {
              date_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(date_);
            break;
          }
          case 26: {
            if (offeredPrice_ == null) {
              offeredPrice_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(offeredPrice_);
            break;
          }
          case 34: {
            if (quantities_ == null) {
              quantities_ = new global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotQuantity();
            }
            input.ReadMessage(quantities_);
            break;
          }
          case 42: {
            requiredReservationTags_.AddEntriesFrom(input, _repeated_requiredReservationTags_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
