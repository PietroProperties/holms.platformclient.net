// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenancy_config/rpc/revenue_management_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.TenancyConfig.RPC {
  public static partial class ForeignPropertyConfigurationSvc
  {
    static readonly string __ServiceName = "holms.types.tenancy_config.rpc.ForeignPropertyConfigurationSvc";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> __Marshaller_ReveneueManagementResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest> __Marshaller_ReveneueManagementRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_Empty,
        __Marshaller_ReveneueManagementResponse);

    static readonly grpc::Method<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest, global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> __Method_Update = new grpc::Method<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest, global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_ReveneueManagementRequest,
        __Marshaller_ReveneueManagementResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.TenancyConfig.RPC.RevenueManagementSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ForeignPropertyConfigurationSvc</summary>
    public abstract partial class ForeignPropertyConfigurationSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> Update(global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ForeignPropertyConfigurationSvc</summary>
    public partial class ForeignPropertyConfigurationSvcClient : grpc::ClientBase<ForeignPropertyConfigurationSvcClient>
    {
      /// <summary>Creates a new client for ForeignPropertyConfigurationSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ForeignPropertyConfigurationSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ForeignPropertyConfigurationSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ForeignPropertyConfigurationSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ForeignPropertyConfigurationSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ForeignPropertyConfigurationSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> GetAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> GetAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse Update(global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse Update(global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> UpdateAsync(global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementResponse> UpdateAsync(global::HOLMS.Types.TenancyConfig.RPC.ReveneueManagementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ForeignPropertyConfigurationSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ForeignPropertyConfigurationSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ForeignPropertyConfigurationSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_Update, serviceImpl.Update).Build();
    }

  }
}
#endregion
