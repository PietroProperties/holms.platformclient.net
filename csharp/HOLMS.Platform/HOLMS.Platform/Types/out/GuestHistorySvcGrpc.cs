// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crm/rpc/guest_history_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.CRM.RPC {
  public static partial class GuestHistorySvc
  {
    static readonly string __ServiceName = "holms.types.crm.rpc.GuestHistorySvc";

    static readonly grpc::Marshaller<global::HOLMS.Types.CRM.Guests.GuestIndicator> __Marshaller_GuestIndicator = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Guests.GuestIndicator.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.CRM.Guests.GuestHistorySummary> __Marshaller_GuestHistorySummary = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Guests.GuestHistorySummary.Parser.ParseFrom);

    static readonly grpc::Method<global::HOLMS.Types.CRM.Guests.GuestIndicator, global::HOLMS.Types.CRM.Guests.GuestHistorySummary> __Method_GetGuestHistory = new grpc::Method<global::HOLMS.Types.CRM.Guests.GuestIndicator, global::HOLMS.Types.CRM.Guests.GuestHistorySummary>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGuestHistory",
        __Marshaller_GuestIndicator,
        __Marshaller_GuestHistorySummary);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.CRM.RPC.GuestHistorySvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GuestHistorySvc</summary>
    public abstract partial class GuestHistorySvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.Guests.GuestHistorySummary> GetGuestHistory(global::HOLMS.Types.CRM.Guests.GuestIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GuestHistorySvc</summary>
    public partial class GuestHistorySvcClient : grpc::ClientBase<GuestHistorySvcClient>
    {
      /// <summary>Creates a new client for GuestHistorySvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GuestHistorySvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GuestHistorySvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GuestHistorySvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GuestHistorySvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GuestHistorySvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.CRM.Guests.GuestHistorySummary GetGuestHistory(global::HOLMS.Types.CRM.Guests.GuestIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGuestHistory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.Guests.GuestHistorySummary GetGuestHistory(global::HOLMS.Types.CRM.Guests.GuestIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGuestHistory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.GuestHistorySummary> GetGuestHistoryAsync(global::HOLMS.Types.CRM.Guests.GuestIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGuestHistoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.GuestHistorySummary> GetGuestHistoryAsync(global::HOLMS.Types.CRM.Guests.GuestIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGuestHistory, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GuestHistorySvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GuestHistorySvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GuestHistorySvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGuestHistory, serviceImpl.GetGuestHistory).Build();
    }

  }
}
#endregion
