// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/restriction_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.Booking.RPC {
  public static partial class RestrictionSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.RestrictionSvc";

    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest> __Marshaller_RestrictionSvcGetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse> __Marshaller_RestrictionSvcGetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest> __Marshaller_RestrictionSvcUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);

    static readonly grpc::Method<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest, global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse> __Method_Get = new grpc::Method<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest, global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_RestrictionSvcGetRequest,
        __Marshaller_RestrictionSvcGetResponse);

    static readonly grpc::Method<global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateRestrictions = new grpc::Method<global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRestrictions",
        __Marshaller_RestrictionSvcUpdateRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Booking.RPC.RestrictionSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RestrictionSvc</summary>
    public abstract partial class RestrictionSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse> Get(global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateRestrictions(global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RestrictionSvc</summary>
    public partial class RestrictionSvcClient : grpc::ClientBase<RestrictionSvcClient>
    {
      /// <summary>Creates a new client for RestrictionSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public RestrictionSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RestrictionSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public RestrictionSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected RestrictionSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected RestrictionSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse Get(global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse Get(global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse> GetAsync(global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.RestrictionSvcGetResponse> GetAsync(global::HOLMS.Types.Booking.RPC.RestrictionSvcGetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateRestrictions(global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateRestrictions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateRestrictions(global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRestrictions, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateRestrictionsAsync(global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateRestrictionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateRestrictionsAsync(global::HOLMS.Types.Booking.RPC.RestrictionSvcUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRestrictions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override RestrictionSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RestrictionSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RestrictionSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_UpdateRestrictions, serviceImpl.UpdateRestrictions).Build();
    }

  }
}
#endregion
