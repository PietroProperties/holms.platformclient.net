// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/groups/group_booking.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Groups {

  /// <summary>Holder for reflection information generated from booking/groups/group_booking.proto</summary>
  public static partial class GroupBookingReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/groups/group_booking.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupBookingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJib29raW5nL2dyb3Vwcy9ncm91cF9ib29raW5nLnByb3RvEhpob2xtcy50",
            "eXBlcy5ib29raW5nLmdyb3VwcxoqcHJpbWl0aXZlL3BiX2luY2x1c2l2ZV9v",
            "cHNkYXRlX3JhbmdlLnByb3RvGhRwcmltaXRpdmUvdXVpZC5wcm90bxo2Ym9v",
            "a2luZy9pbmRpY2F0b3JzL2NhbmNlbGxhdGlvbl9wb2xpY3lfaW5kaWNhdG9y",
            "LnByb3RvGi9ib29raW5nL2luZGljYXRvcnMvdHJhdmVsX2FnZW50X2luZGlj",
            "YXRvci5wcm90bxowYm9va2luZy9pbmRpY2F0b3JzL2dyb3VwX2Jvb2tpbmdf",
            "aW5kaWNhdG9yLnByb3RvGilib29raW5nL2dyb3Vwcy9ncm91cF9ib29raW5n",
            "X3N0YXR1cy5wcm90bxogY3JtL2dyb3Vwcy9ncm91cF9pbmRpY2F0b3IucHJv",
            "dG8aJHN1cHBseS9yYXRlX3NjaGVkdWxlX2luZGljYXRvci5wcm90bxo+dGVu",
            "YW5jeV9jb25maWcvaW5kaWNhdG9ycy9ncm91cF9ib29raW5nX21ldGhvZF9p",
            "bmRpY2F0b3IucHJvdG8itwcKDEdyb3VwQm9va2luZxJICgllbnRpdHlfaWQY",
            "ASABKAsyNS5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBC",
            "b29raW5nSW5kaWNhdG9yEj4KBnN0YXR1cxgCIAEoDjIuLmhvbG1zLnR5cGVz",
            "LmJvb2tpbmcuZ3JvdXBzLkdyb3VwQm9va2luZ1N0YXR1cxISCgp0YXhfZXhl",
            "bXB0GAMgASgIEg4KBnRheF9pZBgEIAEoCRIaChJncm91cF9wYXlzX2xvZGdp",
            "bmcYBSABKAgSHgoWZ3JvdXBfcGF5c19pbmNpZGVudGFscxgGIAEoCBIYChBh",
            "ZGRpdGlvbmFsX25vdGVzGAcgASgJEhsKE2N1c3RvbWVyX2Jvb2tpbmdfaWQY",
            "CCABKAkSQgoKZGF0ZV9yYW5nZRgJIAEoCzIuLmhvbG1zLnR5cGVzLnByaW1p",
            "dGl2ZS5QYkluY2x1c2l2ZU9wc2RhdGVSYW5nZRJACg1yYXRlX3NjaGVkdWxl",
            "GAsgASgLMikuaG9sbXMudHlwZXMuc3VwcGx5LlJhdGVTY2hlZHVsZUluZGlj",
            "YXRvchI1CgVncm91cBgMIAEoCzImLmhvbG1zLnR5cGVzLmNybS5ncm91cHMu",
            "R3JvdXBJbmRpY2F0b3ISPQoYY29uZmlybWF0aW9uX3RlbXBsYXRlX2lkGA0g",
            "ASgLMhsuaG9sbXMudHlwZXMucHJpbWl0aXZlLlV1aWQSWgoOYm9va2luZ19t",
            "ZXRob2QYDiABKAsyQi5ob2xtcy50eXBlcy50ZW5hbmN5X2NvbmZpZy5pbmRp",
            "Y2F0b3JzLkdyb3VwQm9va2luZ01ldGhvZEluZGljYXRvchI4ChNhcnJpdmFs",
            "X3RlbXBsYXRlX2lkGA8gASgLMhsuaG9sbXMudHlwZXMucHJpbWl0aXZlLlV1",
            "aWQSOgoVcmVzZXJ2YXRpb25fc291cmNlX2lkGBAgASgLMhsuaG9sbXMudHlw",
            "ZXMucHJpbWl0aXZlLlV1aWQSSgoMdHJhdmVsX2FnZW50GBEgASgLMjQuaG9s",
            "bXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlRyYXZlbEFnZW50SW5kaWNh",
            "dG9yElgKE2NhbmNlbGxhdGlvbl9wb2xpY3kYEiABKAsyOy5ob2xtcy50eXBl",
            "cy5ib29raW5nLmluZGljYXRvcnMuQ2FuY2VsbGF0aW9uUG9saWN5SW5kaWNh",
            "dG9yEhIKCmdyb3VwX25hbWUYEyABKAlCLVoOYm9va2luZy9ncm91cHOqAhpI",
            "T0xNUy5UeXBlcy5Cb29raW5nLkdyb3Vwc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Primitive.UuidReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.TravelAgentIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.GroupBookingIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Groups.GroupBookingStatusReflection.Descriptor, global::HOLMS.Types.CRM.Groups.GroupIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.RateScheduleIndicatorReflection.Descriptor, global::HOLMS.Types.TenancyConfig.Indicators.GroupBookingMethodIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Groups.GroupBooking), global::HOLMS.Types.Booking.Groups.GroupBooking.Parser, new[]{ "EntityId", "Status", "TaxExempt", "TaxId", "GroupPaysLodging", "GroupPaysIncidentals", "AdditionalNotes", "CustomerBookingId", "DateRange", "RateSchedule", "Group", "ConfirmationTemplateId", "BookingMethod", "ArrivalTemplateId", "ReservationSourceId", "TravelAgent", "CancellationPolicy", "GroupName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GroupBooking : pb::IMessage<GroupBooking> {
    private static readonly pb::MessageParser<GroupBooking> _parser = new pb::MessageParser<GroupBooking>(() => new GroupBooking());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBooking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Groups.GroupBookingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBooking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBooking(GroupBooking other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      status_ = other.status_;
      taxExempt_ = other.taxExempt_;
      taxId_ = other.taxId_;
      groupPaysLodging_ = other.groupPaysLodging_;
      groupPaysIncidentals_ = other.groupPaysIncidentals_;
      additionalNotes_ = other.additionalNotes_;
      customerBookingId_ = other.customerBookingId_;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      RateSchedule = other.rateSchedule_ != null ? other.RateSchedule.Clone() : null;
      Group = other.group_ != null ? other.Group.Clone() : null;
      ConfirmationTemplateId = other.confirmationTemplateId_ != null ? other.ConfirmationTemplateId.Clone() : null;
      BookingMethod = other.bookingMethod_ != null ? other.BookingMethod.Clone() : null;
      ArrivalTemplateId = other.arrivalTemplateId_ != null ? other.ArrivalTemplateId.Clone() : null;
      ReservationSourceId = other.reservationSourceId_ != null ? other.ReservationSourceId.Clone() : null;
      TravelAgent = other.travelAgent_ != null ? other.TravelAgent.Clone() : null;
      CancellationPolicy = other.cancellationPolicy_ != null ? other.CancellationPolicy.Clone() : null;
      groupName_ = other.groupName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBooking Clone() {
      return new GroupBooking(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::HOLMS.Types.Booking.Groups.GroupBookingStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Groups.GroupBookingStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "tax_exempt" field.</summary>
    public const int TaxExemptFieldNumber = 3;
    private bool taxExempt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TaxExempt {
      get { return taxExempt_; }
      set {
        taxExempt_ = value;
      }
    }

    /// <summary>Field number for the "tax_id" field.</summary>
    public const int TaxIdFieldNumber = 4;
    private string taxId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxId {
      get { return taxId_; }
      set {
        taxId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_pays_lodging" field.</summary>
    public const int GroupPaysLodgingFieldNumber = 5;
    private bool groupPaysLodging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GroupPaysLodging {
      get { return groupPaysLodging_; }
      set {
        groupPaysLodging_ = value;
      }
    }

    /// <summary>Field number for the "group_pays_incidentals" field.</summary>
    public const int GroupPaysIncidentalsFieldNumber = 6;
    private bool groupPaysIncidentals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GroupPaysIncidentals {
      get { return groupPaysIncidentals_; }
      set {
        groupPaysIncidentals_ = value;
      }
    }

    /// <summary>Field number for the "additional_notes" field.</summary>
    public const int AdditionalNotesFieldNumber = 7;
    private string additionalNotes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdditionalNotes {
      get { return additionalNotes_; }
      set {
        additionalNotes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customer_booking_id" field.</summary>
    public const int CustomerBookingIdFieldNumber = 8;
    private string customerBookingId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerBookingId {
      get { return customerBookingId_; }
      set {
        customerBookingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 9;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "rate_schedule" field.</summary>
    public const int RateScheduleFieldNumber = 11;
    private global::HOLMS.Types.Supply.RateScheduleIndicator rateSchedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RateScheduleIndicator RateSchedule {
      get { return rateSchedule_; }
      set {
        rateSchedule_ = value;
      }
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 12;
    private global::HOLMS.Types.CRM.Groups.GroupIndicator group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.CRM.Groups.GroupIndicator Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "confirmation_template_id" field.</summary>
    public const int ConfirmationTemplateIdFieldNumber = 13;
    private global::HOLMS.Types.Primitive.Uuid confirmationTemplateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid ConfirmationTemplateId {
      get { return confirmationTemplateId_; }
      set {
        confirmationTemplateId_ = value;
      }
    }

    /// <summary>Field number for the "booking_method" field.</summary>
    public const int BookingMethodFieldNumber = 14;
    private global::HOLMS.Types.TenancyConfig.Indicators.GroupBookingMethodIndicator bookingMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.GroupBookingMethodIndicator BookingMethod {
      get { return bookingMethod_; }
      set {
        bookingMethod_ = value;
      }
    }

    /// <summary>Field number for the "arrival_template_id" field.</summary>
    public const int ArrivalTemplateIdFieldNumber = 15;
    private global::HOLMS.Types.Primitive.Uuid arrivalTemplateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid ArrivalTemplateId {
      get { return arrivalTemplateId_; }
      set {
        arrivalTemplateId_ = value;
      }
    }

    /// <summary>Field number for the "reservation_source_id" field.</summary>
    public const int ReservationSourceIdFieldNumber = 16;
    private global::HOLMS.Types.Primitive.Uuid reservationSourceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid ReservationSourceId {
      get { return reservationSourceId_; }
      set {
        reservationSourceId_ = value;
      }
    }

    /// <summary>Field number for the "travel_agent" field.</summary>
    public const int TravelAgentFieldNumber = 17;
    private global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator travelAgent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator TravelAgent {
      get { return travelAgent_; }
      set {
        travelAgent_ = value;
      }
    }

    /// <summary>Field number for the "cancellation_policy" field.</summary>
    public const int CancellationPolicyFieldNumber = 18;
    private global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator cancellationPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator CancellationPolicy {
      get { return cancellationPolicy_; }
      set {
        cancellationPolicy_ = value;
      }
    }

    /// <summary>Field number for the "group_name" field.</summary>
    public const int GroupNameFieldNumber = 19;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBooking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBooking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (Status != other.Status) return false;
      if (TaxExempt != other.TaxExempt) return false;
      if (TaxId != other.TaxId) return false;
      if (GroupPaysLodging != other.GroupPaysLodging) return false;
      if (GroupPaysIncidentals != other.GroupPaysIncidentals) return false;
      if (AdditionalNotes != other.AdditionalNotes) return false;
      if (CustomerBookingId != other.CustomerBookingId) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(RateSchedule, other.RateSchedule)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      if (!object.Equals(ConfirmationTemplateId, other.ConfirmationTemplateId)) return false;
      if (!object.Equals(BookingMethod, other.BookingMethod)) return false;
      if (!object.Equals(ArrivalTemplateId, other.ArrivalTemplateId)) return false;
      if (!object.Equals(ReservationSourceId, other.ReservationSourceId)) return false;
      if (!object.Equals(TravelAgent, other.TravelAgent)) return false;
      if (!object.Equals(CancellationPolicy, other.CancellationPolicy)) return false;
      if (GroupName != other.GroupName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (TaxExempt != false) hash ^= TaxExempt.GetHashCode();
      if (TaxId.Length != 0) hash ^= TaxId.GetHashCode();
      if (GroupPaysLodging != false) hash ^= GroupPaysLodging.GetHashCode();
      if (GroupPaysIncidentals != false) hash ^= GroupPaysIncidentals.GetHashCode();
      if (AdditionalNotes.Length != 0) hash ^= AdditionalNotes.GetHashCode();
      if (CustomerBookingId.Length != 0) hash ^= CustomerBookingId.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (rateSchedule_ != null) hash ^= RateSchedule.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      if (confirmationTemplateId_ != null) hash ^= ConfirmationTemplateId.GetHashCode();
      if (bookingMethod_ != null) hash ^= BookingMethod.GetHashCode();
      if (arrivalTemplateId_ != null) hash ^= ArrivalTemplateId.GetHashCode();
      if (reservationSourceId_ != null) hash ^= ReservationSourceId.GetHashCode();
      if (travelAgent_ != null) hash ^= TravelAgent.GetHashCode();
      if (cancellationPolicy_ != null) hash ^= CancellationPolicy.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (TaxExempt != false) {
        output.WriteRawTag(24);
        output.WriteBool(TaxExempt);
      }
      if (TaxId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaxId);
      }
      if (GroupPaysLodging != false) {
        output.WriteRawTag(40);
        output.WriteBool(GroupPaysLodging);
      }
      if (GroupPaysIncidentals != false) {
        output.WriteRawTag(48);
        output.WriteBool(GroupPaysIncidentals);
      }
      if (AdditionalNotes.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AdditionalNotes);
      }
      if (CustomerBookingId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CustomerBookingId);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DateRange);
      }
      if (rateSchedule_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RateSchedule);
      }
      if (group_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Group);
      }
      if (confirmationTemplateId_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ConfirmationTemplateId);
      }
      if (bookingMethod_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(BookingMethod);
      }
      if (arrivalTemplateId_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ArrivalTemplateId);
      }
      if (reservationSourceId_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ReservationSourceId);
      }
      if (travelAgent_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(TravelAgent);
      }
      if (cancellationPolicy_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(CancellationPolicy);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(GroupName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TaxExempt != false) {
        size += 1 + 1;
      }
      if (TaxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaxId);
      }
      if (GroupPaysLodging != false) {
        size += 1 + 1;
      }
      if (GroupPaysIncidentals != false) {
        size += 1 + 1;
      }
      if (AdditionalNotes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdditionalNotes);
      }
      if (CustomerBookingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerBookingId);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (rateSchedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateSchedule);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (confirmationTemplateId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfirmationTemplateId);
      }
      if (bookingMethod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BookingMethod);
      }
      if (arrivalTemplateId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrivalTemplateId);
      }
      if (reservationSourceId_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReservationSourceId);
      }
      if (travelAgent_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TravelAgent);
      }
      if (cancellationPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CancellationPolicy);
      }
      if (GroupName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBooking other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.TaxExempt != false) {
        TaxExempt = other.TaxExempt;
      }
      if (other.TaxId.Length != 0) {
        TaxId = other.TaxId;
      }
      if (other.GroupPaysLodging != false) {
        GroupPaysLodging = other.GroupPaysLodging;
      }
      if (other.GroupPaysIncidentals != false) {
        GroupPaysIncidentals = other.GroupPaysIncidentals;
      }
      if (other.AdditionalNotes.Length != 0) {
        AdditionalNotes = other.AdditionalNotes;
      }
      if (other.CustomerBookingId.Length != 0) {
        CustomerBookingId = other.CustomerBookingId;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.rateSchedule_ != null) {
        if (rateSchedule_ == null) {
          rateSchedule_ = new global::HOLMS.Types.Supply.RateScheduleIndicator();
        }
        RateSchedule.MergeFrom(other.RateSchedule);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::HOLMS.Types.CRM.Groups.GroupIndicator();
        }
        Group.MergeFrom(other.Group);
      }
      if (other.confirmationTemplateId_ != null) {
        if (confirmationTemplateId_ == null) {
          confirmationTemplateId_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        ConfirmationTemplateId.MergeFrom(other.ConfirmationTemplateId);
      }
      if (other.bookingMethod_ != null) {
        if (bookingMethod_ == null) {
          bookingMethod_ = new global::HOLMS.Types.TenancyConfig.Indicators.GroupBookingMethodIndicator();
        }
        BookingMethod.MergeFrom(other.BookingMethod);
      }
      if (other.arrivalTemplateId_ != null) {
        if (arrivalTemplateId_ == null) {
          arrivalTemplateId_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        ArrivalTemplateId.MergeFrom(other.ArrivalTemplateId);
      }
      if (other.reservationSourceId_ != null) {
        if (reservationSourceId_ == null) {
          reservationSourceId_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        ReservationSourceId.MergeFrom(other.ReservationSourceId);
      }
      if (other.travelAgent_ != null) {
        if (travelAgent_ == null) {
          travelAgent_ = new global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator();
        }
        TravelAgent.MergeFrom(other.TravelAgent);
      }
      if (other.cancellationPolicy_ != null) {
        if (cancellationPolicy_ == null) {
          cancellationPolicy_ = new global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator();
        }
        CancellationPolicy.MergeFrom(other.CancellationPolicy);
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 16: {
            status_ = (global::HOLMS.Types.Booking.Groups.GroupBookingStatus) input.ReadEnum();
            break;
          }
          case 24: {
            TaxExempt = input.ReadBool();
            break;
          }
          case 34: {
            TaxId = input.ReadString();
            break;
          }
          case 40: {
            GroupPaysLodging = input.ReadBool();
            break;
          }
          case 48: {
            GroupPaysIncidentals = input.ReadBool();
            break;
          }
          case 58: {
            AdditionalNotes = input.ReadString();
            break;
          }
          case 66: {
            CustomerBookingId = input.ReadString();
            break;
          }
          case 74: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 90: {
            if (rateSchedule_ == null) {
              rateSchedule_ = new global::HOLMS.Types.Supply.RateScheduleIndicator();
            }
            input.ReadMessage(rateSchedule_);
            break;
          }
          case 98: {
            if (group_ == null) {
              group_ = new global::HOLMS.Types.CRM.Groups.GroupIndicator();
            }
            input.ReadMessage(group_);
            break;
          }
          case 106: {
            if (confirmationTemplateId_ == null) {
              confirmationTemplateId_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(confirmationTemplateId_);
            break;
          }
          case 114: {
            if (bookingMethod_ == null) {
              bookingMethod_ = new global::HOLMS.Types.TenancyConfig.Indicators.GroupBookingMethodIndicator();
            }
            input.ReadMessage(bookingMethod_);
            break;
          }
          case 122: {
            if (arrivalTemplateId_ == null) {
              arrivalTemplateId_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(arrivalTemplateId_);
            break;
          }
          case 130: {
            if (reservationSourceId_ == null) {
              reservationSourceId_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(reservationSourceId_);
            break;
          }
          case 138: {
            if (travelAgent_ == null) {
              travelAgent_ = new global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator();
            }
            input.ReadMessage(travelAgent_);
            break;
          }
          case 146: {
            if (cancellationPolicy_ == null) {
              cancellationPolicy_ = new global::HOLMS.Types.Booking.Indicators.CancellationPolicyIndicator();
            }
            input.ReadMessage(cancellationPolicy_);
            break;
          }
          case 154: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
