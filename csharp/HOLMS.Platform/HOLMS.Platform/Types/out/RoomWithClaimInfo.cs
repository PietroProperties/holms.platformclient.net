// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operations/rooms/room_with_claim_info.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Operations.Rooms {

  /// <summary>Holder for reflection information generated from operations/rooms/room_with_claim_info.proto</summary>
  public static partial class RoomWithClaimInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for operations/rooms/room_with_claim_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoomWithClaimInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitvcGVyYXRpb25zL3Jvb21zL3Jvb21fd2l0aF9jbGFpbV9pbmZvLnByb3Rv",
            "Ehxob2xtcy50eXBlcy5vcGVyYXRpb25zLnJvb21zGhtvcGVyYXRpb25zL3Jv",
            "b21zL3Jvb20ucHJvdG8iigEKEVJvb21XaXRoQ2xhaW1JbmZvEjAKBHJvb20Y",
            "ASABKAsyIi5ob2xtcy50eXBlcy5vcGVyYXRpb25zLnJvb21zLlJvb20SHgoW",
            "Y3VycmVudGx5X291dF9vZl9vcmRlchgCIAEoCBIjChthc3NpZ25hYmxlX2Zv",
            "cl90YXJnZXRfZGF0ZXMYAyABKAhCH6oCHEhPTE1TLlR5cGVzLk9wZXJhdGlv",
            "bnMuUm9vbXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Operations.Rooms.RoomReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Operations.Rooms.RoomWithClaimInfo), global::HOLMS.Types.Operations.Rooms.RoomWithClaimInfo.Parser, new[]{ "Room", "CurrentlyOutOfOrder", "AssignableForTargetDates" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoomWithClaimInfo : pb::IMessage<RoomWithClaimInfo> {
    private static readonly pb::MessageParser<RoomWithClaimInfo> _parser = new pb::MessageParser<RoomWithClaimInfo>(() => new RoomWithClaimInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomWithClaimInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Operations.Rooms.RoomWithClaimInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomWithClaimInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomWithClaimInfo(RoomWithClaimInfo other) : this() {
      Room = other.room_ != null ? other.Room.Clone() : null;
      currentlyOutOfOrder_ = other.currentlyOutOfOrder_;
      assignableForTargetDates_ = other.assignableForTargetDates_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomWithClaimInfo Clone() {
      return new RoomWithClaimInfo(this);
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 1;
    private global::HOLMS.Types.Operations.Rooms.Room room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.Rooms.Room Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    /// <summary>Field number for the "currently_out_of_order" field.</summary>
    public const int CurrentlyOutOfOrderFieldNumber = 2;
    private bool currentlyOutOfOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CurrentlyOutOfOrder {
      get { return currentlyOutOfOrder_; }
      set {
        currentlyOutOfOrder_ = value;
      }
    }

    /// <summary>Field number for the "assignable_for_target_dates" field.</summary>
    public const int AssignableForTargetDatesFieldNumber = 3;
    private bool assignableForTargetDates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssignableForTargetDates {
      get { return assignableForTargetDates_; }
      set {
        assignableForTargetDates_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomWithClaimInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomWithClaimInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Room, other.Room)) return false;
      if (CurrentlyOutOfOrder != other.CurrentlyOutOfOrder) return false;
      if (AssignableForTargetDates != other.AssignableForTargetDates) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (room_ != null) hash ^= Room.GetHashCode();
      if (CurrentlyOutOfOrder != false) hash ^= CurrentlyOutOfOrder.GetHashCode();
      if (AssignableForTargetDates != false) hash ^= AssignableForTargetDates.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (room_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Room);
      }
      if (CurrentlyOutOfOrder != false) {
        output.WriteRawTag(16);
        output.WriteBool(CurrentlyOutOfOrder);
      }
      if (AssignableForTargetDates != false) {
        output.WriteRawTag(24);
        output.WriteBool(AssignableForTargetDates);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (CurrentlyOutOfOrder != false) {
        size += 1 + 1;
      }
      if (AssignableForTargetDates != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomWithClaimInfo other) {
      if (other == null) {
        return;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          room_ = new global::HOLMS.Types.Operations.Rooms.Room();
        }
        Room.MergeFrom(other.Room);
      }
      if (other.CurrentlyOutOfOrder != false) {
        CurrentlyOutOfOrder = other.CurrentlyOutOfOrder;
      }
      if (other.AssignableForTargetDates != false) {
        AssignableForTargetDates = other.AssignableForTargetDates;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (room_ == null) {
              room_ = new global::HOLMS.Types.Operations.Rooms.Room();
            }
            input.ReadMessage(room_);
            break;
          }
          case 16: {
            CurrentlyOutOfOrder = input.ReadBool();
            break;
          }
          case 24: {
            AssignableForTargetDates = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
