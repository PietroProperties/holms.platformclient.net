// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/cards/transactions/payment_card_sale.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Cards.Transactions {

  /// <summary>Holder for reflection information generated from money/cards/transactions/payment_card_sale.proto</summary>
  public static partial class PaymentCardSaleReflection {

    #region Descriptor
    /// <summary>File descriptor for money/cards/transactions/payment_card_sale.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PaymentCardSaleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBtb25leS9jYXJkcy90cmFuc2FjdGlvbnMvcGF5bWVudF9jYXJkX3NhbGUu",
            "cHJvdG8SJGhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLnRyYW5zYWN0aW9ucxop",
            "bW9uZXkvY2FyZHMvY2FyZF9tZXJjaGFudF9pbmRpY2F0b3IucHJvdG8aKG1v",
            "bmV5L2NhcmRzL3Rva2VuaXplZF9wYXltZW50X2NhcmQucHJvdG8aOm1vbmV5",
            "L2NhcmRzL3RyYW5zYWN0aW9ucy9wYXltZW50X2NhcmRfc2FsZV9pbmRpY2F0",
            "b3IucHJvdG8aOW1vbmV5L2NhcmRzL3RyYW5zYWN0aW9ucy9wYXltZW50X2Nh",
            "cmRfYXV0aG9yaXphdGlvbi5wcm90bxpCbW9uZXkvY2FyZHMvdHJhbnNhY3Rp",
            "b25zL3BheW1lbnRfY2FyZF9hdXRob3JpemF0aW9uX2luY3JlYXNlLnByb3Rv",
            "GkJtb25leS9jYXJkcy90cmFuc2FjdGlvbnMvcGF5bWVudF9jYXJkX2F1dGhv",
            "cml6YXRpb25fcmV2ZXJzYWwucHJvdG8aOG1vbmV5L2NhcmRzL3RyYW5zYWN0",
            "aW9ucy9wYXltZW50X2NhcmRfc2FsZV9jYXB0dXJlLnByb3RvGjVtb25leS9j",
            "YXJkcy90cmFuc2FjdGlvbnMvcGF5bWVudF9jYXJkX3NhbGVfdm9pZC5wcm90",
            "bxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90byKMBwoPUGF5bWVu",
            "dENhcmRTYWxlElEKCWVudGl0eV9pZBgBIAEoCzI+LmhvbG1zLnR5cGVzLm1v",
            "bmV5LmNhcmRzLnRyYW5zYWN0aW9ucy5QYXltZW50Q2FyZFNhbGVJbmRpY2F0",
            "b3ISQwoLbWVyY2hhbnRfaWQYAiABKAsyLi5ob2xtcy50eXBlcy5tb25leS5j",
            "YXJkcy5DYXJkTWVyY2hhbnRJbmRpY2F0b3ISQwoMcGF5bWVudF9jYXJkGAMg",
            "ASgLMi0uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuVG9rZW5pemVkUGF5bWVu",
            "dENhcmQSQAoRYXV0aG9yaXplZF9hbW91bnQYBCABKAsyJS5ob2xtcy50eXBl",
            "cy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSPgoPY2FwdHVyZWRfYW1vdW50",
            "GAUgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50",
            "Eh0KFWhvc3RfcmVmZXJlbmNlX251bWJlchgGIAEoCRJUCgxlbnRyeV9tZXRo",
            "b2QYByABKA4yPi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlv",
            "bnMuQXV0aG9yaXphdGlvbkVudHJ5TWV0aG9kElUKDWF1dGhvcml6YXRpb24Y",
            "CCABKAsyPi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMu",
            "UGF5bWVudENhcmRBdXRob3JpemF0aW9uElkKCWluY3JlYXNlcxgJIAMoCzJG",
            "LmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLnRyYW5zYWN0aW9ucy5QYXltZW50",
            "Q2FyZEF1dGhvcml6YXRpb25JbmNyZWFzZRJZCglyZXZlcnNhbHMYCiADKAsy",
            "Ri5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuUGF5bWVu",
            "dENhcmRBdXRob3JpemF0aW9uUmV2ZXJzYWwSTgoIY2FwdHVyZXMYCyADKAsy",
            "PC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuUGF5bWVu",
            "dENhcmRTYWxlQ2FwdHVyZRJICgV2b2lkcxgMIAMoCzI5LmhvbG1zLnR5cGVz",
            "Lm1vbmV5LmNhcmRzLnRyYW5zYWN0aW9ucy5QYXltZW50Q2FyZFNhbGVWb2lk",
            "QieqAiRIT0xNUy5UeXBlcy5Nb25leS5DYXJkcy5UcmFuc2FjdGlvbnNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.TokenizedPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Cards.TransactionsA.PaymentCardSaleIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIncreaseReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReversalReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCaptureReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleVoidReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale), global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale.Parser, new[]{ "EntityId", "MerchantId", "PaymentCard", "AuthorizedAmount", "CapturedAmount", "HostReferenceNumber", "EntryMethod", "Authorization", "Increases", "Reversals", "Captures", "Voids" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PaymentCardSale : pb::IMessage<PaymentCardSale> {
    private static readonly pb::MessageParser<PaymentCardSale> _parser = new pb::MessageParser<PaymentCardSale>(() => new PaymentCardSale());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentCardSale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentCardSale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentCardSale(PaymentCardSale other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      MerchantId = other.merchantId_ != null ? other.MerchantId.Clone() : null;
      PaymentCard = other.paymentCard_ != null ? other.PaymentCard.Clone() : null;
      AuthorizedAmount = other.authorizedAmount_ != null ? other.AuthorizedAmount.Clone() : null;
      CapturedAmount = other.capturedAmount_ != null ? other.CapturedAmount.Clone() : null;
      hostReferenceNumber_ = other.hostReferenceNumber_;
      entryMethod_ = other.entryMethod_;
      Authorization = other.authorization_ != null ? other.Authorization.Clone() : null;
      increases_ = other.increases_.Clone();
      reversals_ = other.reversals_.Clone();
      captures_ = other.captures_.Clone();
      voids_ = other.voids_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentCardSale Clone() {
      return new PaymentCardSale(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.TransactionsA.PaymentCardSaleIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.TransactionsA.PaymentCardSaleIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "merchant_id" field.</summary>
    public const int MerchantIdFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator merchantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator MerchantId {
      get { return merchantId_; }
      set {
        merchantId_ = value;
      }
    }

    /// <summary>Field number for the "payment_card" field.</summary>
    public const int PaymentCardFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.TokenizedPaymentCard paymentCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.TokenizedPaymentCard PaymentCard {
      get { return paymentCard_; }
      set {
        paymentCard_ = value;
      }
    }

    /// <summary>Field number for the "authorized_amount" field.</summary>
    public const int AuthorizedAmountFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount authorizedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AuthorizedAmount {
      get { return authorizedAmount_; }
      set {
        authorizedAmount_ = value;
      }
    }

    /// <summary>Field number for the "captured_amount" field.</summary>
    public const int CapturedAmountFieldNumber = 5;
    private global::HOLMS.Types.Primitive.MonetaryAmount capturedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CapturedAmount {
      get { return capturedAmount_; }
      set {
        capturedAmount_ = value;
      }
    }

    /// <summary>Field number for the "host_reference_number" field.</summary>
    public const int HostReferenceNumberFieldNumber = 6;
    private string hostReferenceNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostReferenceNumber {
      get { return hostReferenceNumber_; }
      set {
        hostReferenceNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry_method" field.</summary>
    public const int EntryMethodFieldNumber = 7;
    private global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethod entryMethod_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethod EntryMethod {
      get { return entryMethod_; }
      set {
        entryMethod_ = value;
      }
    }

    /// <summary>Field number for the "authorization" field.</summary>
    public const int AuthorizationFieldNumber = 8;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorization authorization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorization Authorization {
      get { return authorization_; }
      set {
        authorization_ = value;
      }
    }

    /// <summary>Field number for the "increases" field.</summary>
    public const int IncreasesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIncrease> _repeated_increases_codec
        = pb::FieldCodec.ForMessage(74, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIncrease.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIncrease> increases_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIncrease>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationIncrease> Increases {
      get { return increases_; }
    }

    /// <summary>Field number for the "reversals" field.</summary>
    public const int ReversalsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReversal> _repeated_reversals_codec
        = pb::FieldCodec.ForMessage(82, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReversal.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReversal> reversals_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReversal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorizationReversal> Reversals {
      get { return reversals_; }
    }

    /// <summary>Field number for the "captures" field.</summary>
    public const int CapturesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> _repeated_captures_codec
        = pb::FieldCodec.ForMessage(90, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> captures_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> Captures {
      get { return captures_; }
    }

    /// <summary>Field number for the "voids" field.</summary>
    public const int VoidsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleVoid> _repeated_voids_codec
        = pb::FieldCodec.ForMessage(98, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleVoid.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleVoid> voids_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleVoid>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleVoid> Voids {
      get { return voids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentCardSale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentCardSale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (!object.Equals(MerchantId, other.MerchantId)) return false;
      if (!object.Equals(PaymentCard, other.PaymentCard)) return false;
      if (!object.Equals(AuthorizedAmount, other.AuthorizedAmount)) return false;
      if (!object.Equals(CapturedAmount, other.CapturedAmount)) return false;
      if (HostReferenceNumber != other.HostReferenceNumber) return false;
      if (EntryMethod != other.EntryMethod) return false;
      if (!object.Equals(Authorization, other.Authorization)) return false;
      if(!increases_.Equals(other.increases_)) return false;
      if(!reversals_.Equals(other.reversals_)) return false;
      if(!captures_.Equals(other.captures_)) return false;
      if(!voids_.Equals(other.voids_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (merchantId_ != null) hash ^= MerchantId.GetHashCode();
      if (paymentCard_ != null) hash ^= PaymentCard.GetHashCode();
      if (authorizedAmount_ != null) hash ^= AuthorizedAmount.GetHashCode();
      if (capturedAmount_ != null) hash ^= CapturedAmount.GetHashCode();
      if (HostReferenceNumber.Length != 0) hash ^= HostReferenceNumber.GetHashCode();
      if (EntryMethod != 0) hash ^= EntryMethod.GetHashCode();
      if (authorization_ != null) hash ^= Authorization.GetHashCode();
      hash ^= increases_.GetHashCode();
      hash ^= reversals_.GetHashCode();
      hash ^= captures_.GetHashCode();
      hash ^= voids_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (merchantId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MerchantId);
      }
      if (paymentCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PaymentCard);
      }
      if (authorizedAmount_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AuthorizedAmount);
      }
      if (capturedAmount_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CapturedAmount);
      }
      if (HostReferenceNumber.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HostReferenceNumber);
      }
      if (EntryMethod != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) EntryMethod);
      }
      if (authorization_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Authorization);
      }
      increases_.WriteTo(output, _repeated_increases_codec);
      reversals_.WriteTo(output, _repeated_reversals_codec);
      captures_.WriteTo(output, _repeated_captures_codec);
      voids_.WriteTo(output, _repeated_voids_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (merchantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerchantId);
      }
      if (paymentCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentCard);
      }
      if (authorizedAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorizedAmount);
      }
      if (capturedAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapturedAmount);
      }
      if (HostReferenceNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostReferenceNumber);
      }
      if (EntryMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntryMethod);
      }
      if (authorization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authorization);
      }
      size += increases_.CalculateSize(_repeated_increases_codec);
      size += reversals_.CalculateSize(_repeated_reversals_codec);
      size += captures_.CalculateSize(_repeated_captures_codec);
      size += voids_.CalculateSize(_repeated_voids_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentCardSale other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Money.Cards.TransactionsA.PaymentCardSaleIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.merchantId_ != null) {
        if (merchantId_ == null) {
          merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        MerchantId.MergeFrom(other.MerchantId);
      }
      if (other.paymentCard_ != null) {
        if (paymentCard_ == null) {
          paymentCard_ = new global::HOLMS.Types.Money.Cards.TokenizedPaymentCard();
        }
        PaymentCard.MergeFrom(other.PaymentCard);
      }
      if (other.authorizedAmount_ != null) {
        if (authorizedAmount_ == null) {
          authorizedAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AuthorizedAmount.MergeFrom(other.AuthorizedAmount);
      }
      if (other.capturedAmount_ != null) {
        if (capturedAmount_ == null) {
          capturedAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CapturedAmount.MergeFrom(other.CapturedAmount);
      }
      if (other.HostReferenceNumber.Length != 0) {
        HostReferenceNumber = other.HostReferenceNumber;
      }
      if (other.EntryMethod != 0) {
        EntryMethod = other.EntryMethod;
      }
      if (other.authorization_ != null) {
        if (authorization_ == null) {
          authorization_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorization();
        }
        Authorization.MergeFrom(other.Authorization);
      }
      increases_.Add(other.increases_);
      reversals_.Add(other.reversals_);
      captures_.Add(other.captures_);
      voids_.Add(other.voids_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Money.Cards.TransactionsA.PaymentCardSaleIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            if (merchantId_ == null) {
              merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(merchantId_);
            break;
          }
          case 26: {
            if (paymentCard_ == null) {
              paymentCard_ = new global::HOLMS.Types.Money.Cards.TokenizedPaymentCard();
            }
            input.ReadMessage(paymentCard_);
            break;
          }
          case 34: {
            if (authorizedAmount_ == null) {
              authorizedAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(authorizedAmount_);
            break;
          }
          case 42: {
            if (capturedAmount_ == null) {
              capturedAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(capturedAmount_);
            break;
          }
          case 50: {
            HostReferenceNumber = input.ReadString();
            break;
          }
          case 56: {
            entryMethod_ = (global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethod) input.ReadEnum();
            break;
          }
          case 66: {
            if (authorization_ == null) {
              authorization_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardAuthorization();
            }
            input.ReadMessage(authorization_);
            break;
          }
          case 74: {
            increases_.AddEntriesFrom(input, _repeated_increases_codec);
            break;
          }
          case 82: {
            reversals_.AddEntriesFrom(input, _repeated_reversals_codec);
            break;
          }
          case 90: {
            captures_.AddEntriesFrom(input, _repeated_captures_codec);
            break;
          }
          case 98: {
            voids_.AddEntriesFrom(input, _repeated_voids_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
