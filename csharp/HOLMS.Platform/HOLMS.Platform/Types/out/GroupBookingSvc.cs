// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/group_booking_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.RPC {

  /// <summary>Holder for reflection information generated from booking/rpc/group_booking_svc.proto</summary>
  public static partial class GroupBookingSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/rpc/group_booking_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupBookingSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNib29raW5nL3JwYy9ncm91cF9ib29raW5nX3N2Yy5wcm90bxIXaG9sbXMu",
            "dHlwZXMuYm9va2luZy5ycGMaG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90",
            "bxoiYm9va2luZy9ncm91cHMvZ3JvdXBfYm9va2luZy5wcm90bxomYm9va2lu",
            "Zy9ncm91cHMvZ3JvdXBfYm9va2luZ19leHQucHJvdG8aMGJvb2tpbmcvaW5k",
            "aWNhdG9ycy9ncm91cF9ib29raW5nX2luZGljYXRvci5wcm90bxo1Ym9va2lu",
            "Zy9ncm91cHMvZ3JvdXBfYm9va2luZ19yb29tX3R5cGVfcXVhbnRpdHkucHJv",
            "dG8aIGNybS9ncm91cHMvZ3JvdXBfaW5kaWNhdG9yLnByb3RvGiFzdXBwbHkv",
            "cHJpY2VfdXBkYXRlX3JlcXVlc3QucHJvdG8aLmJvb2tpbmcvcmVzZXJ2YXRp",
            "b25zL3Jlc2VydmF0aW9uX3N1bW1hcnkucHJvdG8aMGJvb2tpbmcvZ3JvdXBz",
            "L3BheW1lbnRfcmVzZXJ2YXRpb25fbWFwcGluZy5wcm90bxosYm9va2luZy9n",
            "cm91cHMvZ3JvdXBfYm9va2luZ3NfaW52b2ljZXMucHJvdG8aKWJvb2tpbmcv",
            "Z3JvdXBzL3Jlc2VydmF0aW9uX2ludm9pY2VzLnByb3RvGhRwcmltaXRpdmUv",
            "dXVpZC5wcm90bxogaWFtL3N0YWZmX21lbWJlcl9pbmRpY2F0b3IucHJvdG8a",
            "H2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aK3N1cHBseS9yb29t",
            "X3R5cGVzL3Jvb21fdHlwZV9pbmRpY2F0b3IucHJvdG8aKnByaW1pdGl2ZS9w",
            "Yl9pbmNsdXNpdmVfb3BzZGF0ZV9yYW5nZS5wcm90bxopc3VwcGx5L2V2ZW50",
            "X2Jvb2tpbmdfaG9sZF9pbmRpY2F0b3IucHJvdG8aLWJvb2tpbmcvZ3JvdXBz",
            "L3VuYXNzaWduZWRfYm9va2luZ19ob2xkcy5wcm90bxouYm9va2luZy9pbmRp",
            "Y2F0b3JzL3Jlc2VydmF0aW9uX2luZGljYXRvci5wcm90bxoydGVuYW5jeV9j",
            "b25maWcvaW5kaWNhdG9ycy9wcm9wZXJ0eV9pbmRpY2F0b3IucHJvdG8iWwoa",
            "R3JvdXBCb29raW5nU3ZjQWxsQm9va2luZ3MSPQoIYm9va2luZ3MYASADKAsy",
            "Ky5ob2xtcy50eXBlcy5ib29raW5nLmdyb3Vwcy5Hcm91cEJvb2tpbmdFeHQi",
            "owEKIUdyb3VwQm9va2luZ1N2Y1ByaWNlVXBkYXRlUmVxdWVzdBJGCgdib29r",
            "aW5nGAEgASgLMjUuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLkdy",
            "b3VwQm9va2luZ0luZGljYXRvchI2CgZwcmljZXMYAiADKAsyJi5ob2xtcy50",
            "eXBlcy5zdXBwbHkuUHJpY2VVcGRhdGVSZXF1ZXN0ItcCCiRHcm91cEJvb2tp",
            "bmdTdmNRdWFudGl0eVVwZGF0ZVJlcXVlc3QSRgoHYm9va2luZxgBIAEoCzI1",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5Hcm91cEJvb2tpbmdJ",
            "bmRpY2F0b3ISTAoKcXVhbnRpdGllcxgCIAMoCzI4LmhvbG1zLnR5cGVzLmJv",
            "b2tpbmcuZ3JvdXBzLkdyb3VwQm9va2luZ1Jvb21UeXBlUXVhbnRpdHkSQgoK",
            "ZGF0ZV9yYW5nZRgDIAEoCzIuLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5QYklu",
            "Y2x1c2l2ZU9wc2RhdGVSYW5nZRJVChNhZGRfaG9sZF9xdWFudGl0aWVzGAQg",
            "AygLMjguaG9sbXMudHlwZXMuYm9va2luZy5ncm91cHMuR3JvdXBCb29raW5n",
            "Um9vbVR5cGVRdWFudGl0eSJ7Ci1Hcm91cEJvb2tpbmdTdmNHZXRSZXNlcnZh",
            "dGlvbnNXaXRoVGFnUmVzcG9uc2USSgoMcmVzZXJ2YXRpb25zGAEgAygLMjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5yZXNlcnZhdGlvbnMuUmVzZXJ2YXRpb25T",
            "dW1tYXJ5ImkKHkdyb3VwQm9va2luZ1N2Y0dldEJ5SWRzUmVxdWVzdBJHCghi",
            "b29raW5ncxgBIAMoCzI1LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9y",
            "cy5Hcm91cEJvb2tpbmdJbmRpY2F0b3IiXAofR3JvdXBCb29raW5nU3ZjR2V0",
            "QnlJZHNSZXNwb25zZRI5Cgdib29raW5nGAEgAygLMiguaG9sbXMudHlwZXMu",
            "Ym9va2luZy5ncm91cHMuR3JvdXBCb29raW5nInIKIFBheW1lbnRSZXNlcnZh",
            "dGlvbk1hcHBpbmdSZXF1ZXN0Ek4KD3BheW1lbnRfbWFwcGluZxgBIAMoCzI1",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcuZ3JvdXBzLlBheW1lbnRSZXNlcnZhdGlv",
            "bk1hcHBpbmcidAoiR3JvdXBCb29raW5nUGF5bWVudE1hcHBpbmdSZXNwb25z",
            "ZRJOCg9wYXltZW50X21hcHBpbmcYASADKAsyNS5ob2xtcy50eXBlcy5ib29r",
            "aW5nLmdyb3Vwcy5QYXltZW50UmVzZXJ2YXRpb25NYXBwaW5nInwKIUdyb3Vw",
            "Qm9va2luZ0ludm9pY2VNYXBwaW5nUmVxdWVzdBJXChdncm91cF9ib29raW5n",
            "c19pbnZvaWNlcxgBIAMoCzI2LmhvbG1zLnR5cGVzLmJvb2tpbmcuZ3JvdXBz",
            "Lkdyb3VwQm9va2luZ0ludm9pY2VNYXBwaW5nIm0KIkdyb3VwQm9va2luZ0lu",
            "dm9pY2VNYXBwaW5nUmVzcG9uc2USLwoKaW52b2ljZV9pZBgBIAEoCzIbLmhv",
            "bG1zLnR5cGVzLnByaW1pdGl2ZS5VdWlkEhYKDmludm9pY2VfbnVtYmVyGAIg",
            "ASgFInYKG0dyb3VwQm9va2luZ0ludm9pY2VSZXNwb25zZRJXChdncm91cF9i",
            "b29raW5nc19pbnZvaWNlcxgBIAMoCzI2LmhvbG1zLnR5cGVzLmJvb2tpbmcu",
            "Z3JvdXBzLkdyb3VwQm9va2luZ0ludm9pY2VNYXBwaW5nIncKIFJlc2VydmF0",
            "aW9uSW52b2ljZU1hcHBpbmdSZXF1ZXN0ElMKFHJlc2VydmF0aW9uX2ludm9p",
            "Y2VzGAEgAygLMjUuaG9sbXMudHlwZXMuYm9va2luZy5ncm91cHMuUmVzZXJ2",
            "YXRpb25JbnZvaWNlTWFwcGluZyJ4CiFSZXNlcnZhdGlvbkludm9pY2VNYXBw",
            "aW5nUmVzcG9uc2USUwoUcmVzZXJ2YXRpb25faW52b2ljZXMYASADKAsyNS5o",
            "b2xtcy50eXBlcy5ib29raW5nLmdyb3Vwcy5SZXNlcnZhdGlvbkludm9pY2VN",
            "YXBwaW5nIq0BChJJbnZvaWNlVm9pZFJlcXVlc3QSLwoKaW52b2ljZV9pZBgB",
            "IAEoCzIbLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5VdWlkEjcKCHN0YWZmX2lk",
            "GAIgASgLMiUuaG9sbXMudHlwZXMuaWFtLlN0YWZmTWVtYmVySW5kaWNhdG9y",
            "Ei0KCXZvaWRlZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXAitQEKJkluY3JlYXNlR3JvdXBIb2xkRm9yUmVzZXJ2YXRpb25SZXF1ZXN0",
            "EkYKB2Jvb2tpbmcYASABKAsyNS5ob2xtcy50eXBlcy5ib29raW5nLmluZGlj",
            "YXRvcnMuR3JvdXBCb29raW5nSW5kaWNhdG9yEkMKCXJvb21fdHlwZRgCIAEo",
            "CzIwLmhvbG1zLnR5cGVzLnN1cHBseS5yb29tX3R5cGVzLlJvb21UeXBlSW5k",
            "aWNhdG9yIjkKJ0luY3JlYXNlR3JvdXBIb2xkRm9yUmVzZXJ2YXRpb25SZXNw",
            "b25zZRIOCgZyZXN1bHQYASABKAgitQEKIEdyb3VwQm9va2luZ1N2Y0RlbGV0",
            "ZUhvbGRSZXF1ZXN0EkYKB2Jvb2tpbmcYASABKAsyNS5ob2xtcy50eXBlcy5i",
            "b29raW5nLmluZGljYXRvcnMuR3JvdXBCb29raW5nSW5kaWNhdG9yEkkKEmV2",
            "ZW50X2Jvb2tpbmdfaG9sZBgCIAEoCzItLmhvbG1zLnR5cGVzLnN1cHBseS5F",
            "dmVudEJvb2tpbmdIb2xkSW5kaWNhdG9yInMKI0dyb3VwQm9va2luZ1VuYXNz",
            "aWduZWRIb2xkc1Jlc3BvbnNlEkwKEHVuYXNzaWduZWRfaG9sZHMYASADKAsy",
            "Mi5ob2xtcy50eXBlcy5ib29raW5nLmdyb3Vwcy5VbmFzc2lnbmVkQm9va2lu",
            "Z0hvbGRzIqIBChFVcGRhdGVIb2xkUmVxdWVzdBJCCgpkYXRlX3JhbmdlGAEg",
            "ASgLMi4uaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiSW5jbHVzaXZlT3BzZGF0",
            "ZVJhbmdlEkkKEmV2ZW50X2Jvb2tpbmdfaG9sZBgCIAEoCzItLmhvbG1zLnR5",
            "cGVzLnN1cHBseS5FdmVudEJvb2tpbmdIb2xkSW5kaWNhdG9yIsoCCg9TeW5j",
            "SG9sZFJlcXVlc3QSRgoHYm9va2luZxgBIAEoCzI1LmhvbG1zLnR5cGVzLmJv",
            "b2tpbmcuaW5kaWNhdG9ycy5Hcm91cEJvb2tpbmdJbmRpY2F0b3ISQwoJcm9v",
            "bV90eXBlGAIgASgLMjAuaG9sbXMudHlwZXMuc3VwcGx5LnJvb21fdHlwZXMu",
            "Um9vbVR5cGVJbmRpY2F0b3ISQgoKZGF0ZV9yYW5nZRgDIAEoCzIuLmhvbG1z",
            "LnR5cGVzLnByaW1pdGl2ZS5QYkluY2x1c2l2ZU9wc2RhdGVSYW5nZRJJCgty",
            "ZXNlcnZhdGlvbhgEIAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNh",
            "dG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchIbChNib29raW5nX3RhZ19wcmVz",
            "ZW50GAUgASgIIpgBChNHcm91cEJvb2tpbmdSZXF1ZXN0EjUKBWdyb3VwGAEg",
            "ASgLMiYuaG9sbXMudHlwZXMuY3JtLmdyb3Vwcy5Hcm91cEluZGljYXRvchJK",
            "Cghwcm9wZXJ0eRgCIAEoCzI4LmhvbG1zLnR5cGVzLnRlbmFuY3lfY29uZmln",
            "LmluZGljYXRvcnMuUHJvcGVydHlJbmRpY2F0b3IygBoKD0dyb3VwQm9va2lu",
            "Z1N2YxJSCgNBbGwSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaMy5ob2xtcy50",
            "eXBlcy5ib29raW5nLnJwYy5Hcm91cEJvb2tpbmdTdmNBbGxCb29raW5ncxJj",
            "CgZDcmVhdGUSLC5ob2xtcy50eXBlcy5ib29raW5nLnJwYy5Hcm91cEJvb2tp",
            "bmdSZXF1ZXN0GisuaG9sbXMudHlwZXMuYm9va2luZy5ncm91cHMuR3JvdXBC",
            "b29raW5nRXh0El8KBlVwZGF0ZRIoLmhvbG1zLnR5cGVzLmJvb2tpbmcuZ3Jv",
            "dXBzLkdyb3VwQm9va2luZxorLmhvbG1zLnR5cGVzLmJvb2tpbmcuZ3JvdXBz",
            "Lkdyb3VwQm9va2luZ0V4dBJuChhVcGRhdGVHcm91cEJvb2tpbmdQcmljZXMS",
            "Oi5ob2xtcy50eXBlcy5ib29raW5nLnJwYy5Hcm91cEJvb2tpbmdTdmNQcmlj",
            "ZVVwZGF0ZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSaQoQVXBk",
            "YXRlUXVhbnRpdGllcxI9LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLkdyb3Vw",
            "Qm9va2luZ1N2Y1F1YW50aXR5VXBkYXRlUmVxdWVzdBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRKhAQogR2V0UmVzZXJ2YXRpb25TdW1tYXJpZXNXaXRoR0JU",
            "YWcSNS5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBCb29r",
            "aW5nSW5kaWNhdG9yGkYuaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBC",
            "b29raW5nU3ZjR2V0UmVzZXJ2YXRpb25zV2l0aFRhZ1Jlc3BvbnNlEmoKB0dl",
            "dEJ5SWQSNS5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBC",
            "b29raW5nSW5kaWNhdG9yGiguaG9sbXMudHlwZXMuYm9va2luZy5ncm91cHMu",
            "R3JvdXBCb29raW5nEnEKC0dldEJ5SWRGdWxsEjUuaG9sbXMudHlwZXMuYm9v",
            "a2luZy5pbmRpY2F0b3JzLkdyb3VwQm9va2luZ0luZGljYXRvchorLmhvbG1z",
            "LnR5cGVzLmJvb2tpbmcuZ3JvdXBzLkdyb3VwQm9va2luZ0V4dBJ9CghHZXRC",
            "eUlkcxI3LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLkdyb3VwQm9va2luZ1N2",
            "Y0dldEJ5SWRzUmVxdWVzdBo4LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLkdy",
            "b3VwQm9va2luZ1N2Y0dldEJ5SWRzUmVzcG9uc2USbgoZTWFwUGF5bWVudFdp",
            "dGhSZXNlcnZhdGlvbhI5LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLlBheW1l",
            "bnRSZXNlcnZhdGlvbk1hcHBpbmdSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5EosBChVHZXRQYXltZW50TWFwcGluZ0J5SWQSNS5ob2xtcy50eXBl",
            "cy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBCb29raW5nSW5kaWNhdG9yGjsu",
            "aG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29raW5nUGF5bWVudE1h",
            "cHBpbmdSZXNwb25zZRKGAQoXR2V0R3JvdXBCb29raW5nSW52b2ljZXMSNS5o",
            "b2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBCb29raW5nSW5k",
            "aWNhdG9yGjQuaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29raW5n",
            "SW52b2ljZVJlc3BvbnNlEpcBChxDcmVhdGVJbnZvaWNlRm9yR3JvdXBCb29r",
            "aW5nEjouaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29raW5nSW52",
            "b2ljZU1hcHBpbmdSZXF1ZXN0GjsuaG9sbXMudHlwZXMuYm9va2luZy5ycGMu",
            "R3JvdXBCb29raW5nSW52b2ljZU1hcHBpbmdSZXNwb25zZRJ1CiBDcmVhdGVS",
            "ZXNlcnZhdGlvbkludm9pY2VNYXBwaW5ncxI5LmhvbG1zLnR5cGVzLmJvb2tp",
            "bmcucnBjLlJlc2VydmF0aW9uSW52b2ljZU1hcHBpbmdSZXF1ZXN0GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5EpUBCiBHZXRSZXNlcnZhdGlvbkludm9pY2VG",
            "cm9tR3JvdXBJZBI1LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5H",
            "cm91cEJvb2tpbmdJbmRpY2F0b3IaOi5ob2xtcy50eXBlcy5ib29raW5nLnJw",
            "Yy5SZXNlcnZhdGlvbkludm9pY2VNYXBwaW5nUmVzcG9uc2USVgoPVm9pZElu",
            "dm9pY2VCeUlkEisuaG9sbXMudHlwZXMuYm9va2luZy5ycGMuSW52b2ljZVZv",
            "aWRSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EmgKEUNyZWF0ZVdp",
            "dGhvdXRTYXZlEiYuaG9sbXMudHlwZXMuY3JtLmdyb3Vwcy5Hcm91cEluZGlj",
            "YXRvchorLmhvbG1zLnR5cGVzLmJvb2tpbmcuZ3JvdXBzLkdyb3VwQm9va2lu",
            "Z0V4dBKsAQonSW5jcmVhc2VFdmVudEdyb3VwSG9sZEZvck5ld1Jlc2VydmF0",
            "aW9uEj8uaG9sbXMudHlwZXMuYm9va2luZy5ycGMuSW5jcmVhc2VHcm91cEhv",
            "bGRGb3JSZXNlcnZhdGlvblJlcXVlc3QaQC5ob2xtcy50eXBlcy5ib29raW5n",
            "LnJwYy5JbmNyZWFzZUdyb3VwSG9sZEZvclJlc2VydmF0aW9uUmVzcG9uc2US",
            "TQoJRm9saW9TeW5jEiguaG9sbXMudHlwZXMuYm9va2luZy5ncm91cHMuR3Jv",
            "dXBCb29raW5nGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EnUKDkFsbEJ5RGF0",
            "ZVJhbmdlEi4uaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiSW5jbHVzaXZlT3Bz",
            "ZGF0ZVJhbmdlGjMuaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29r",
            "aW5nU3ZjQWxsQm9va2luZ3MSaAoPRHJvcFVudXNlZEhvbGRzEj0uaG9sbXMu",
            "dHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29raW5nU3ZjUXVhbnRpdHlVcGRh",
            "dGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EmQKC0NyZWF0ZUhv",
            "bGRzEj0uaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29raW5nU3Zj",
            "UXVhbnRpdHlVcGRhdGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "El8KCkRlbGV0ZUhvbGQSOS5ob2xtcy50eXBlcy5ib29raW5nLnJwYy5Hcm91",
            "cEJvb2tpbmdTdmNEZWxldGVIb2xkUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eRKJAQoSR2V0QWxsQm9va2luZ0hvbGRzEjUuaG9sbXMudHlwZXMu",
            "Ym9va2luZy5pbmRpY2F0b3JzLkdyb3VwQm9va2luZ0luZGljYXRvcho8Lmhv",
            "bG1zLnR5cGVzLmJvb2tpbmcucnBjLkdyb3VwQm9va2luZ1VuYXNzaWduZWRI",
            "b2xkc1Jlc3BvbnNlElAKClVwZGF0ZUhvbGQSKi5ob2xtcy50eXBlcy5ib29r",
            "aW5nLnJwYy5VcGRhdGVIb2xkUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRJqChlNaWdyYXRlQm9va2luZ1RvTmV3RGVzaWduEjUuaG9sbXMudHlw",
            "ZXMuYm9va2luZy5pbmRpY2F0b3JzLkdyb3VwQm9va2luZ0luZGljYXRvchoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJrCidTeW5jUmVzZXJ2YXRpb25Ib2xk",
            "V2l0aEV2ZW50Qm9va2luZ0hvbGQSKC5ob2xtcy50eXBlcy5ib29raW5nLnJw",
            "Yy5TeW5jSG9sZFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSpgEK",
            "JUdldFJlc2VydmF0aW9uU3VtbWFyaWVzV2l0aEZvbGlvR0JUYWcSNS5ob2xt",
            "cy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBCb29raW5nSW5kaWNh",
            "dG9yGkYuaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR3JvdXBCb29raW5nU3Zj",
            "R2V0UmVzZXJ2YXRpb25zV2l0aFRhZ1Jlc3BvbnNlQidaC2Jvb2tpbmcvcnBj",
            "qgIXSE9MTVMuVHlwZXMuQm9va2luZy5SUENiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Booking.Groups.GroupBookingReflection.Descriptor, global::HOLMS.Types.Booking.Groups.GroupBookingExtReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.GroupBookingIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantityReflection.Descriptor, global::HOLMS.Types.CRM.Groups.GroupIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.PriceUpdateRequestReflection.Descriptor, global::HOLMS.Types.Booking.Reservations.ReservationSummaryReflection.Descriptor, global::HOLMS.Types.Booking.Groups.PaymentReservationMappingReflection.Descriptor, global::HOLMS.Types.Booking.Groups.GroupBookingsInvoicesReflection.Descriptor, global::HOLMS.Types.Booking.Groups.ReservationInvoicesReflection.Descriptor, global::HOLMS.Types.Primitive.UuidReflection.Descriptor, global::HOLMS.Types.IAM.StaffMemberIndicatorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Supply.EventBookingHoldIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Groups.UnassignedBookingHoldsReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings), global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings.Parser, new[]{ "Bookings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest), global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest.Parser, new[]{ "Booking", "Prices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest), global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest.Parser, new[]{ "Booking", "Quantities", "DateRange", "AddHoldQuantities" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse.Parser, new[]{ "Reservations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest.Parser, new[]{ "Bookings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse.Parser, new[]{ "Booking" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest), global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest.Parser, new[]{ "PaymentMapping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse), global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse.Parser, new[]{ "PaymentMapping" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingInvoiceMappingRequest), global::HOLMS.Types.Booking.RPC.GroupBookingInvoiceMappingRequest.Parser, new[]{ "GroupBookingsInvoices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingInvoiceMappingResponse), global::HOLMS.Types.Booking.RPC.GroupBookingInvoiceMappingResponse.Parser, new[]{ "InvoiceId", "InvoiceNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingInvoiceResponse), global::HOLMS.Types.Booking.RPC.GroupBookingInvoiceResponse.Parser, new[]{ "GroupBookingsInvoices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ReservationInvoiceMappingRequest), global::HOLMS.Types.Booking.RPC.ReservationInvoiceMappingRequest.Parser, new[]{ "ReservationInvoices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.ReservationInvoiceMappingResponse), global::HOLMS.Types.Booking.RPC.ReservationInvoiceMappingResponse.Parser, new[]{ "ReservationInvoices" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.InvoiceVoidRequest), global::HOLMS.Types.Booking.RPC.InvoiceVoidRequest.Parser, new[]{ "InvoiceId", "StaffId", "VoidedAt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.IncreaseGroupHoldForReservationRequest), global::HOLMS.Types.Booking.RPC.IncreaseGroupHoldForReservationRequest.Parser, new[]{ "Booking", "RoomType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.IncreaseGroupHoldForReservationResponse), global::HOLMS.Types.Booking.RPC.IncreaseGroupHoldForReservationResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingSvcDeleteHoldRequest), global::HOLMS.Types.Booking.RPC.GroupBookingSvcDeleteHoldRequest.Parser, new[]{ "Booking", "EventBookingHold" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingUnassignedHoldsResponse), global::HOLMS.Types.Booking.RPC.GroupBookingUnassignedHoldsResponse.Parser, new[]{ "UnassignedHolds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.UpdateHoldRequest), global::HOLMS.Types.Booking.RPC.UpdateHoldRequest.Parser, new[]{ "DateRange", "EventBookingHold" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.SyncHoldRequest), global::HOLMS.Types.Booking.RPC.SyncHoldRequest.Parser, new[]{ "Booking", "RoomType", "DateRange", "Reservation", "BookingTagPresent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GroupBookingRequest), global::HOLMS.Types.Booking.RPC.GroupBookingRequest.Parser, new[]{ "Group", "Property" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GroupBookingSvcAllBookings : pb::IMessage<GroupBookingSvcAllBookings> {
    private static readonly pb::MessageParser<GroupBookingSvcAllBookings> _parser = new pb::MessageParser<GroupBookingSvcAllBookings>(() => new GroupBookingSvcAllBookings());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcAllBookings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcAllBookings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcAllBookings(GroupBookingSvcAllBookings other) : this() {
      bookings_ = other.bookings_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcAllBookings Clone() {
      return new GroupBookingSvcAllBookings(this);
    }

    /// <summary>Field number for the "bookings" field.</summary>
    public const int BookingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.GroupBookingExt> _repeated_bookings_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.GroupBookingExt.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingExt> bookings_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingExt>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingExt> Bookings {
      get { return bookings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcAllBookings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcAllBookings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bookings_.Equals(other.bookings_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bookings_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bookings_.WriteTo(output, _repeated_bookings_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bookings_.CalculateSize(_repeated_bookings_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcAllBookings other) {
      if (other == null) {
        return;
      }
      bookings_.Add(other.bookings_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            bookings_.AddEntriesFrom(input, _repeated_bookings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingSvcPriceUpdateRequest : pb::IMessage<GroupBookingSvcPriceUpdateRequest> {
    private static readonly pb::MessageParser<GroupBookingSvcPriceUpdateRequest> _parser = new pb::MessageParser<GroupBookingSvcPriceUpdateRequest>(() => new GroupBookingSvcPriceUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcPriceUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcPriceUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcPriceUpdateRequest(GroupBookingSvcPriceUpdateRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      prices_ = other.prices_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcPriceUpdateRequest Clone() {
      return new GroupBookingSvcPriceUpdateRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "prices" field.</summary>
    public const int PricesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Supply.PriceUpdateRequest> _repeated_prices_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Supply.PriceUpdateRequest.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Supply.PriceUpdateRequest> prices_ = new pbc::RepeatedField<global::HOLMS.Types.Supply.PriceUpdateRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Supply.PriceUpdateRequest> Prices {
      get { return prices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcPriceUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcPriceUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if(!prices_.Equals(other.prices_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      hash ^= prices_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      prices_.WriteTo(output, _repeated_prices_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      size += prices_.CalculateSize(_repeated_prices_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcPriceUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      prices_.Add(other.prices_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            prices_.AddEntriesFrom(input, _repeated_prices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingSvcQuantityUpdateRequest : pb::IMessage<GroupBookingSvcQuantityUpdateRequest> {
    private static readonly pb::MessageParser<GroupBookingSvcQuantityUpdateRequest> _parser = new pb::MessageParser<GroupBookingSvcQuantityUpdateRequest>(() => new GroupBookingSvcQuantityUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcQuantityUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcQuantityUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcQuantityUpdateRequest(GroupBookingSvcQuantityUpdateRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      quantities_ = other.quantities_.Clone();
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      addHoldQuantities_ = other.addHoldQuantities_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcQuantityUpdateRequest Clone() {
      return new GroupBookingSvcQuantityUpdateRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "quantities" field.</summary>
    public const int QuantitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity> _repeated_quantities_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity> quantities_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity> Quantities {
      get { return quantities_; }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 3;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "add_hold_quantities" field.</summary>
    public const int AddHoldQuantitiesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity> _repeated_addHoldQuantities_codec
        = pb::FieldCodec.ForMessage(34, global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity> addHoldQuantities_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingRoomTypeQuantity> AddHoldQuantities {
      get { return addHoldQuantities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcQuantityUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcQuantityUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if(!quantities_.Equals(other.quantities_)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if(!addHoldQuantities_.Equals(other.addHoldQuantities_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      hash ^= quantities_.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      hash ^= addHoldQuantities_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      quantities_.WriteTo(output, _repeated_quantities_codec);
      if (dateRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DateRange);
      }
      addHoldQuantities_.WriteTo(output, _repeated_addHoldQuantities_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      size += quantities_.CalculateSize(_repeated_quantities_codec);
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      size += addHoldQuantities_.CalculateSize(_repeated_addHoldQuantities_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcQuantityUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      quantities_.Add(other.quantities_);
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      addHoldQuantities_.Add(other.addHoldQuantities_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            quantities_.AddEntriesFrom(input, _repeated_quantities_codec);
            break;
          }
          case 26: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 34: {
            addHoldQuantities_.AddEntriesFrom(input, _repeated_addHoldQuantities_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingSvcGetReservationsWithTagResponse : pb::IMessage<GroupBookingSvcGetReservationsWithTagResponse> {
    private static readonly pb::MessageParser<GroupBookingSvcGetReservationsWithTagResponse> _parser = new pb::MessageParser<GroupBookingSvcGetReservationsWithTagResponse>(() => new GroupBookingSvcGetReservationsWithTagResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcGetReservationsWithTagResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetReservationsWithTagResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetReservationsWithTagResponse(GroupBookingSvcGetReservationsWithTagResponse other) : this() {
      reservations_ = other.reservations_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetReservationsWithTagResponse Clone() {
      return new GroupBookingSvcGetReservationsWithTagResponse(this);
    }

    /// <summary>Field number for the "reservations" field.</summary>
    public const int ReservationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Reservations.ReservationSummary> _repeated_reservations_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Reservations.ReservationSummary.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationSummary> reservations_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationSummary>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationSummary> Reservations {
      get { return reservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcGetReservationsWithTagResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcGetReservationsWithTagResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reservations_.Equals(other.reservations_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reservations_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reservations_.WriteTo(output, _repeated_reservations_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reservations_.CalculateSize(_repeated_reservations_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcGetReservationsWithTagResponse other) {
      if (other == null) {
        return;
      }
      reservations_.Add(other.reservations_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            reservations_.AddEntriesFrom(input, _repeated_reservations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingSvcGetByIdsRequest : pb::IMessage<GroupBookingSvcGetByIdsRequest> {
    private static readonly pb::MessageParser<GroupBookingSvcGetByIdsRequest> _parser = new pb::MessageParser<GroupBookingSvcGetByIdsRequest>(() => new GroupBookingSvcGetByIdsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcGetByIdsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetByIdsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetByIdsRequest(GroupBookingSvcGetByIdsRequest other) : this() {
      bookings_ = other.bookings_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetByIdsRequest Clone() {
      return new GroupBookingSvcGetByIdsRequest(this);
    }

    /// <summary>Field number for the "bookings" field.</summary>
    public const int BookingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator> _repeated_bookings_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator> bookings_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator> Bookings {
      get { return bookings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcGetByIdsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcGetByIdsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bookings_.Equals(other.bookings_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bookings_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bookings_.WriteTo(output, _repeated_bookings_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bookings_.CalculateSize(_repeated_bookings_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcGetByIdsRequest other) {
      if (other == null) {
        return;
      }
      bookings_.Add(other.bookings_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            bookings_.AddEntriesFrom(input, _repeated_bookings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingSvcGetByIdsResponse : pb::IMessage<GroupBookingSvcGetByIdsResponse> {
    private static readonly pb::MessageParser<GroupBookingSvcGetByIdsResponse> _parser = new pb::MessageParser<GroupBookingSvcGetByIdsResponse>(() => new GroupBookingSvcGetByIdsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcGetByIdsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetByIdsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetByIdsResponse(GroupBookingSvcGetByIdsResponse other) : this() {
      booking_ = other.booking_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcGetByIdsResponse Clone() {
      return new GroupBookingSvcGetByIdsResponse(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.GroupBooking> _repeated_booking_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.GroupBooking.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBooking> booking_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBooking>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBooking> Booking {
      get { return booking_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcGetByIdsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcGetByIdsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!booking_.Equals(other.booking_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= booking_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      booking_.WriteTo(output, _repeated_booking_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += booking_.CalculateSize(_repeated_booking_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcGetByIdsResponse other) {
      if (other == null) {
        return;
      }
      booking_.Add(other.booking_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            booking_.AddEntriesFrom(input, _repeated_booking_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaymentReservationMappingRequest : pb::IMessage<PaymentReservationMappingRequest> {
    private static readonly pb::MessageParser<PaymentReservationMappingRequest> _parser = new pb::MessageParser<PaymentReservationMappingRequest>(() => new PaymentReservationMappingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentReservationMappingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentReservationMappingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentReservationMappingRequest(PaymentReservationMappingRequest other) : this() {
      paymentMapping_ = other.paymentMapping_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentReservationMappingRequest Clone() {
      return new PaymentReservationMappingRequest(this);
    }

    /// <summary>Field number for the "payment_mapping" field.</summary>
    public const int PaymentMappingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping> _repeated_paymentMapping_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.PaymentReservationMapping.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping> paymentMapping_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping> PaymentMapping {
      get { return paymentMapping_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentReservationMappingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentReservationMappingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paymentMapping_.Equals(other.paymentMapping_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paymentMapping_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paymentMapping_.WriteTo(output, _repeated_paymentMapping_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paymentMapping_.CalculateSize(_repeated_paymentMapping_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentReservationMappingRequest other) {
      if (other == null) {
        return;
      }
      paymentMapping_.Add(other.paymentMapping_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            paymentMapping_.AddEntriesFrom(input, _repeated_paymentMapping_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingPaymentMappingResponse : pb::IMessage<GroupBookingPaymentMappingResponse> {
    private static readonly pb::MessageParser<GroupBookingPaymentMappingResponse> _parser = new pb::MessageParser<GroupBookingPaymentMappingResponse>(() => new GroupBookingPaymentMappingResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingPaymentMappingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingPaymentMappingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingPaymentMappingResponse(GroupBookingPaymentMappingResponse other) : this() {
      paymentMapping_ = other.paymentMapping_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingPaymentMappingResponse Clone() {
      return new GroupBookingPaymentMappingResponse(this);
    }

    /// <summary>Field number for the "payment_mapping" field.</summary>
    public const int PaymentMappingFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping> _repeated_paymentMapping_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.PaymentReservationMapping.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping> paymentMapping_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.PaymentReservationMapping> PaymentMapping {
      get { return paymentMapping_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingPaymentMappingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingPaymentMappingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paymentMapping_.Equals(other.paymentMapping_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paymentMapping_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paymentMapping_.WriteTo(output, _repeated_paymentMapping_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paymentMapping_.CalculateSize(_repeated_paymentMapping_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingPaymentMappingResponse other) {
      if (other == null) {
        return;
      }
      paymentMapping_.Add(other.paymentMapping_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            paymentMapping_.AddEntriesFrom(input, _repeated_paymentMapping_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingInvoiceMappingRequest : pb::IMessage<GroupBookingInvoiceMappingRequest> {
    private static readonly pb::MessageParser<GroupBookingInvoiceMappingRequest> _parser = new pb::MessageParser<GroupBookingInvoiceMappingRequest>(() => new GroupBookingInvoiceMappingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingInvoiceMappingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceMappingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceMappingRequest(GroupBookingInvoiceMappingRequest other) : this() {
      groupBookingsInvoices_ = other.groupBookingsInvoices_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceMappingRequest Clone() {
      return new GroupBookingInvoiceMappingRequest(this);
    }

    /// <summary>Field number for the "group_bookings_invoices" field.</summary>
    public const int GroupBookingsInvoicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping> _repeated_groupBookingsInvoices_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping> groupBookingsInvoices_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping> GroupBookingsInvoices {
      get { return groupBookingsInvoices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingInvoiceMappingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingInvoiceMappingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!groupBookingsInvoices_.Equals(other.groupBookingsInvoices_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= groupBookingsInvoices_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      groupBookingsInvoices_.WriteTo(output, _repeated_groupBookingsInvoices_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += groupBookingsInvoices_.CalculateSize(_repeated_groupBookingsInvoices_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingInvoiceMappingRequest other) {
      if (other == null) {
        return;
      }
      groupBookingsInvoices_.Add(other.groupBookingsInvoices_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            groupBookingsInvoices_.AddEntriesFrom(input, _repeated_groupBookingsInvoices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingInvoiceMappingResponse : pb::IMessage<GroupBookingInvoiceMappingResponse> {
    private static readonly pb::MessageParser<GroupBookingInvoiceMappingResponse> _parser = new pb::MessageParser<GroupBookingInvoiceMappingResponse>(() => new GroupBookingInvoiceMappingResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingInvoiceMappingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceMappingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceMappingResponse(GroupBookingInvoiceMappingResponse other) : this() {
      InvoiceId = other.invoiceId_ != null ? other.InvoiceId.Clone() : null;
      invoiceNumber_ = other.invoiceNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceMappingResponse Clone() {
      return new GroupBookingInvoiceMappingResponse(this);
    }

    /// <summary>Field number for the "invoice_id" field.</summary>
    public const int InvoiceIdFieldNumber = 1;
    private global::HOLMS.Types.Primitive.Uuid invoiceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid InvoiceId {
      get { return invoiceId_; }
      set {
        invoiceId_ = value;
      }
    }

    /// <summary>Field number for the "invoice_number" field.</summary>
    public const int InvoiceNumberFieldNumber = 2;
    private int invoiceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InvoiceNumber {
      get { return invoiceNumber_; }
      set {
        invoiceNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingInvoiceMappingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingInvoiceMappingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InvoiceId, other.InvoiceId)) return false;
      if (InvoiceNumber != other.InvoiceNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (invoiceId_ != null) hash ^= InvoiceId.GetHashCode();
      if (InvoiceNumber != 0) hash ^= InvoiceNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (invoiceId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InvoiceId);
      }
      if (InvoiceNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(InvoiceNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (invoiceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvoiceId);
      }
      if (InvoiceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InvoiceNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingInvoiceMappingResponse other) {
      if (other == null) {
        return;
      }
      if (other.invoiceId_ != null) {
        if (invoiceId_ == null) {
          invoiceId_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        InvoiceId.MergeFrom(other.InvoiceId);
      }
      if (other.InvoiceNumber != 0) {
        InvoiceNumber = other.InvoiceNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (invoiceId_ == null) {
              invoiceId_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(invoiceId_);
            break;
          }
          case 16: {
            InvoiceNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingInvoiceResponse : pb::IMessage<GroupBookingInvoiceResponse> {
    private static readonly pb::MessageParser<GroupBookingInvoiceResponse> _parser = new pb::MessageParser<GroupBookingInvoiceResponse>(() => new GroupBookingInvoiceResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingInvoiceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceResponse(GroupBookingInvoiceResponse other) : this() {
      groupBookingsInvoices_ = other.groupBookingsInvoices_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingInvoiceResponse Clone() {
      return new GroupBookingInvoiceResponse(this);
    }

    /// <summary>Field number for the "group_bookings_invoices" field.</summary>
    public const int GroupBookingsInvoicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping> _repeated_groupBookingsInvoices_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping> groupBookingsInvoices_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.GroupBookingInvoiceMapping> GroupBookingsInvoices {
      get { return groupBookingsInvoices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingInvoiceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingInvoiceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!groupBookingsInvoices_.Equals(other.groupBookingsInvoices_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= groupBookingsInvoices_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      groupBookingsInvoices_.WriteTo(output, _repeated_groupBookingsInvoices_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += groupBookingsInvoices_.CalculateSize(_repeated_groupBookingsInvoices_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingInvoiceResponse other) {
      if (other == null) {
        return;
      }
      groupBookingsInvoices_.Add(other.groupBookingsInvoices_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            groupBookingsInvoices_.AddEntriesFrom(input, _repeated_groupBookingsInvoices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationInvoiceMappingRequest : pb::IMessage<ReservationInvoiceMappingRequest> {
    private static readonly pb::MessageParser<ReservationInvoiceMappingRequest> _parser = new pb::MessageParser<ReservationInvoiceMappingRequest>(() => new ReservationInvoiceMappingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationInvoiceMappingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMappingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMappingRequest(ReservationInvoiceMappingRequest other) : this() {
      reservationInvoices_ = other.reservationInvoices_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMappingRequest Clone() {
      return new ReservationInvoiceMappingRequest(this);
    }

    /// <summary>Field number for the "reservation_invoices" field.</summary>
    public const int ReservationInvoicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping> _repeated_reservationInvoices_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping> reservationInvoices_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping> ReservationInvoices {
      get { return reservationInvoices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationInvoiceMappingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationInvoiceMappingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reservationInvoices_.Equals(other.reservationInvoices_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reservationInvoices_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reservationInvoices_.WriteTo(output, _repeated_reservationInvoices_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reservationInvoices_.CalculateSize(_repeated_reservationInvoices_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationInvoiceMappingRequest other) {
      if (other == null) {
        return;
      }
      reservationInvoices_.Add(other.reservationInvoices_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            reservationInvoices_.AddEntriesFrom(input, _repeated_reservationInvoices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservationInvoiceMappingResponse : pb::IMessage<ReservationInvoiceMappingResponse> {
    private static readonly pb::MessageParser<ReservationInvoiceMappingResponse> _parser = new pb::MessageParser<ReservationInvoiceMappingResponse>(() => new ReservationInvoiceMappingResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationInvoiceMappingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMappingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMappingResponse(ReservationInvoiceMappingResponse other) : this() {
      reservationInvoices_ = other.reservationInvoices_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMappingResponse Clone() {
      return new ReservationInvoiceMappingResponse(this);
    }

    /// <summary>Field number for the "reservation_invoices" field.</summary>
    public const int ReservationInvoicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping> _repeated_reservationInvoices_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping> reservationInvoices_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping> ReservationInvoices {
      get { return reservationInvoices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationInvoiceMappingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationInvoiceMappingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reservationInvoices_.Equals(other.reservationInvoices_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reservationInvoices_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      reservationInvoices_.WriteTo(output, _repeated_reservationInvoices_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += reservationInvoices_.CalculateSize(_repeated_reservationInvoices_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationInvoiceMappingResponse other) {
      if (other == null) {
        return;
      }
      reservationInvoices_.Add(other.reservationInvoices_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            reservationInvoices_.AddEntriesFrom(input, _repeated_reservationInvoices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvoiceVoidRequest : pb::IMessage<InvoiceVoidRequest> {
    private static readonly pb::MessageParser<InvoiceVoidRequest> _parser = new pb::MessageParser<InvoiceVoidRequest>(() => new InvoiceVoidRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvoiceVoidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceVoidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceVoidRequest(InvoiceVoidRequest other) : this() {
      InvoiceId = other.invoiceId_ != null ? other.InvoiceId.Clone() : null;
      StaffId = other.staffId_ != null ? other.StaffId.Clone() : null;
      VoidedAt = other.voidedAt_ != null ? other.VoidedAt.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceVoidRequest Clone() {
      return new InvoiceVoidRequest(this);
    }

    /// <summary>Field number for the "invoice_id" field.</summary>
    public const int InvoiceIdFieldNumber = 1;
    private global::HOLMS.Types.Primitive.Uuid invoiceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid InvoiceId {
      get { return invoiceId_; }
      set {
        invoiceId_ = value;
      }
    }

    /// <summary>Field number for the "staff_id" field.</summary>
    public const int StaffIdFieldNumber = 2;
    private global::HOLMS.Types.IAM.StaffMemberIndicator staffId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.StaffMemberIndicator StaffId {
      get { return staffId_; }
      set {
        staffId_ = value;
      }
    }

    /// <summary>Field number for the "voided_at" field.</summary>
    public const int VoidedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp voidedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp VoidedAt {
      get { return voidedAt_; }
      set {
        voidedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvoiceVoidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvoiceVoidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InvoiceId, other.InvoiceId)) return false;
      if (!object.Equals(StaffId, other.StaffId)) return false;
      if (!object.Equals(VoidedAt, other.VoidedAt)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (invoiceId_ != null) hash ^= InvoiceId.GetHashCode();
      if (staffId_ != null) hash ^= StaffId.GetHashCode();
      if (voidedAt_ != null) hash ^= VoidedAt.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (invoiceId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InvoiceId);
      }
      if (staffId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StaffId);
      }
      if (voidedAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VoidedAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (invoiceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvoiceId);
      }
      if (staffId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StaffId);
      }
      if (voidedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoidedAt);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvoiceVoidRequest other) {
      if (other == null) {
        return;
      }
      if (other.invoiceId_ != null) {
        if (invoiceId_ == null) {
          invoiceId_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        InvoiceId.MergeFrom(other.InvoiceId);
      }
      if (other.staffId_ != null) {
        if (staffId_ == null) {
          staffId_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
        }
        StaffId.MergeFrom(other.StaffId);
      }
      if (other.voidedAt_ != null) {
        if (voidedAt_ == null) {
          voidedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        VoidedAt.MergeFrom(other.VoidedAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (invoiceId_ == null) {
              invoiceId_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(invoiceId_);
            break;
          }
          case 18: {
            if (staffId_ == null) {
              staffId_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
            }
            input.ReadMessage(staffId_);
            break;
          }
          case 26: {
            if (voidedAt_ == null) {
              voidedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(voidedAt_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncreaseGroupHoldForReservationRequest : pb::IMessage<IncreaseGroupHoldForReservationRequest> {
    private static readonly pb::MessageParser<IncreaseGroupHoldForReservationRequest> _parser = new pb::MessageParser<IncreaseGroupHoldForReservationRequest>(() => new IncreaseGroupHoldForReservationRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncreaseGroupHoldForReservationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseGroupHoldForReservationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseGroupHoldForReservationRequest(IncreaseGroupHoldForReservationRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      RoomType = other.roomType_ != null ? other.RoomType.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseGroupHoldForReservationRequest Clone() {
      return new IncreaseGroupHoldForReservationRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 2;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomType {
      get { return roomType_; }
      set {
        roomType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncreaseGroupHoldForReservationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncreaseGroupHoldForReservationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(RoomType, other.RoomType)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (roomType_ != null) hash ^= RoomType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (roomType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (roomType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncreaseGroupHoldForReservationRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.roomType_ != null) {
        if (roomType_ == null) {
          roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomType.MergeFrom(other.RoomType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (roomType_ == null) {
              roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomType_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncreaseGroupHoldForReservationResponse : pb::IMessage<IncreaseGroupHoldForReservationResponse> {
    private static readonly pb::MessageParser<IncreaseGroupHoldForReservationResponse> _parser = new pb::MessageParser<IncreaseGroupHoldForReservationResponse>(() => new IncreaseGroupHoldForReservationResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncreaseGroupHoldForReservationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseGroupHoldForReservationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseGroupHoldForReservationResponse(IncreaseGroupHoldForReservationResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncreaseGroupHoldForReservationResponse Clone() {
      return new IncreaseGroupHoldForReservationResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncreaseGroupHoldForReservationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncreaseGroupHoldForReservationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncreaseGroupHoldForReservationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingSvcDeleteHoldRequest : pb::IMessage<GroupBookingSvcDeleteHoldRequest> {
    private static readonly pb::MessageParser<GroupBookingSvcDeleteHoldRequest> _parser = new pb::MessageParser<GroupBookingSvcDeleteHoldRequest>(() => new GroupBookingSvcDeleteHoldRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingSvcDeleteHoldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcDeleteHoldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcDeleteHoldRequest(GroupBookingSvcDeleteHoldRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      EventBookingHold = other.eventBookingHold_ != null ? other.EventBookingHold.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingSvcDeleteHoldRequest Clone() {
      return new GroupBookingSvcDeleteHoldRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "event_booking_hold" field.</summary>
    public const int EventBookingHoldFieldNumber = 2;
    private global::HOLMS.Types.Supply.EventBookingHoldIndicator eventBookingHold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.EventBookingHoldIndicator EventBookingHold {
      get { return eventBookingHold_; }
      set {
        eventBookingHold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingSvcDeleteHoldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingSvcDeleteHoldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(EventBookingHold, other.EventBookingHold)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (eventBookingHold_ != null) hash ^= EventBookingHold.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (eventBookingHold_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventBookingHold);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (eventBookingHold_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventBookingHold);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingSvcDeleteHoldRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.eventBookingHold_ != null) {
        if (eventBookingHold_ == null) {
          eventBookingHold_ = new global::HOLMS.Types.Supply.EventBookingHoldIndicator();
        }
        EventBookingHold.MergeFrom(other.EventBookingHold);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (eventBookingHold_ == null) {
              eventBookingHold_ = new global::HOLMS.Types.Supply.EventBookingHoldIndicator();
            }
            input.ReadMessage(eventBookingHold_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingUnassignedHoldsResponse : pb::IMessage<GroupBookingUnassignedHoldsResponse> {
    private static readonly pb::MessageParser<GroupBookingUnassignedHoldsResponse> _parser = new pb::MessageParser<GroupBookingUnassignedHoldsResponse>(() => new GroupBookingUnassignedHoldsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingUnassignedHoldsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingUnassignedHoldsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingUnassignedHoldsResponse(GroupBookingUnassignedHoldsResponse other) : this() {
      unassignedHolds_ = other.unassignedHolds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingUnassignedHoldsResponse Clone() {
      return new GroupBookingUnassignedHoldsResponse(this);
    }

    /// <summary>Field number for the "unassigned_holds" field.</summary>
    public const int UnassignedHoldsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds> _repeated_unassignedHolds_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds> unassignedHolds_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Groups.UnassignedBookingHolds> UnassignedHolds {
      get { return unassignedHolds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingUnassignedHoldsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingUnassignedHoldsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unassignedHolds_.Equals(other.unassignedHolds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unassignedHolds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unassignedHolds_.WriteTo(output, _repeated_unassignedHolds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unassignedHolds_.CalculateSize(_repeated_unassignedHolds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingUnassignedHoldsResponse other) {
      if (other == null) {
        return;
      }
      unassignedHolds_.Add(other.unassignedHolds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            unassignedHolds_.AddEntriesFrom(input, _repeated_unassignedHolds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateHoldRequest : pb::IMessage<UpdateHoldRequest> {
    private static readonly pb::MessageParser<UpdateHoldRequest> _parser = new pb::MessageParser<UpdateHoldRequest>(() => new UpdateHoldRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateHoldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateHoldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateHoldRequest(UpdateHoldRequest other) : this() {
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      EventBookingHold = other.eventBookingHold_ != null ? other.EventBookingHold.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateHoldRequest Clone() {
      return new UpdateHoldRequest(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "event_booking_hold" field.</summary>
    public const int EventBookingHoldFieldNumber = 2;
    private global::HOLMS.Types.Supply.EventBookingHoldIndicator eventBookingHold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.EventBookingHoldIndicator EventBookingHold {
      get { return eventBookingHold_; }
      set {
        eventBookingHold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateHoldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateHoldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(EventBookingHold, other.EventBookingHold)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (eventBookingHold_ != null) hash ^= EventBookingHold.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (eventBookingHold_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventBookingHold);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (eventBookingHold_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventBookingHold);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateHoldRequest other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.eventBookingHold_ != null) {
        if (eventBookingHold_ == null) {
          eventBookingHold_ = new global::HOLMS.Types.Supply.EventBookingHoldIndicator();
        }
        EventBookingHold.MergeFrom(other.EventBookingHold);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 18: {
            if (eventBookingHold_ == null) {
              eventBookingHold_ = new global::HOLMS.Types.Supply.EventBookingHoldIndicator();
            }
            input.ReadMessage(eventBookingHold_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SyncHoldRequest : pb::IMessage<SyncHoldRequest> {
    private static readonly pb::MessageParser<SyncHoldRequest> _parser = new pb::MessageParser<SyncHoldRequest>(() => new SyncHoldRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncHoldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncHoldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncHoldRequest(SyncHoldRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      RoomType = other.roomType_ != null ? other.RoomType.Clone() : null;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      bookingTagPresent_ = other.bookingTagPresent_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncHoldRequest Clone() {
      return new SyncHoldRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 2;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomType {
      get { return roomType_; }
      set {
        roomType_ = value;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 3;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 4;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "booking_tag_present" field.</summary>
    public const int BookingTagPresentFieldNumber = 5;
    private bool bookingTagPresent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BookingTagPresent {
      get { return bookingTagPresent_; }
      set {
        bookingTagPresent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncHoldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncHoldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(RoomType, other.RoomType)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (BookingTagPresent != other.BookingTagPresent) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (roomType_ != null) hash ^= RoomType.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (BookingTagPresent != false) hash ^= BookingTagPresent.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (roomType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoomType);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DateRange);
      }
      if (reservation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reservation);
      }
      if (BookingTagPresent != false) {
        output.WriteRawTag(40);
        output.WriteBool(BookingTagPresent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (roomType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomType);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (BookingTagPresent != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncHoldRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.roomType_ != null) {
        if (roomType_ == null) {
          roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomType.MergeFrom(other.RoomType);
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.BookingTagPresent != false) {
        BookingTagPresent = other.BookingTagPresent;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (roomType_ == null) {
              roomType_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomType_);
            break;
          }
          case 26: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 34: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 40: {
            BookingTagPresent = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingRequest : pb::IMessage<GroupBookingRequest> {
    private static readonly pb::MessageParser<GroupBookingRequest> _parser = new pb::MessageParser<GroupBookingRequest>(() => new GroupBookingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingRequest(GroupBookingRequest other) : this() {
      Group = other.group_ != null ? other.Group.Clone() : null;
      Property = other.property_ != null ? other.Property.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingRequest Clone() {
      return new GroupBookingRequest(this);
    }

    /// <summary>Field number for the "group" field.</summary>
    public const int GroupFieldNumber = 1;
    private global::HOLMS.Types.CRM.Groups.GroupIndicator group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.CRM.Groups.GroupIndicator Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 2;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Group, other.Group)) return false;
      if (!object.Equals(Property, other.Property)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (group_ != null) hash ^= Group.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (group_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Group);
      }
      if (property_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingRequest other) {
      if (other == null) {
        return;
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::HOLMS.Types.CRM.Groups.GroupIndicator();
        }
        Group.MergeFrom(other.Group);
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        Property.MergeFrom(other.Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (group_ == null) {
              group_ = new global::HOLMS.Types.CRM.Groups.GroupIndicator();
            }
            input.ReadMessage(group_);
            break;
          }
          case 18: {
            if (property_ == null) {
              property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(property_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
