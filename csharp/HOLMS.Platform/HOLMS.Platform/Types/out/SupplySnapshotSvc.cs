// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/rpc/supply_snapshot_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.RPC {

  /// <summary>Holder for reflection information generated from supply/rpc/supply_snapshot_svc.proto</summary>
  public static partial class SupplySnapshotSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/rpc/supply_snapshot_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SupplySnapshotSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRzdXBwbHkvcnBjL3N1cHBseV9zbmFwc2hvdF9zdmMucHJvdG8SFmhvbG1z",
            "LnR5cGVzLnN1cHBseS5ycGMaKnByaW1pdGl2ZS9wYl9pbmNsdXNpdmVfb3Bz",
            "ZGF0ZV9yYW5nZS5wcm90bxo7c3VwcGx5L3NuYXBzaG90L2luY2lkZW50YWxz",
            "X3NuYXBzaG90X3JlcXVlc3RfcmVzcG9uc2UucHJvdG8aN3N1cHBseS9zbmFw",
            "c2hvdC9sb2RnaW5nX3NuYXBzaG90X3JlcXVlc3RfcmVzcG9uc2UucHJvdG8a",
            "QHN1cHBseS9zbmFwc2hvdC9sb2RnaW5nX3F1YW50aXR5X3NuYXBzaG90X3Jl",
            "cXVlc3RfcmVzcG9uc2UucHJvdG8aMnRlbmFuY3lfY29uZmlnL2luZGljYXRv",
            "cnMvcHJvcGVydHlfaW5kaWNhdG9yLnByb3RvIr4CCiRTdXBwbHlTbmFwc2hv",
            "dFN2Y1NuYXBzaG90V2l0aFRhZ3NSZXESSgoIcHJvcGVydHkYASABKAsyOC5o",
            "b2xtcy50eXBlcy50ZW5hbmN5X2NvbmZpZy5pbmRpY2F0b3JzLlByb3BlcnR5",
            "SW5kaWNhdG9yEkIKCmRhdGVfcmFuZ2UYAiABKAsyLi5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuUGJJbmNsdXNpdmVPcHNkYXRlUmFuZ2USGAoQcmVzZXJ2YXRp",
            "b25fdGFncxgDIAMoCRIsCiRpc19tb2NrX3ByaWNlX3JlcXVpcmVkX3dpdGhv",
            "dXRfaG9sZHMYBCABKAgSHgoWbnVtYmVyX29mX2FkdWx0X2d1ZXN0cxgFIAEo",
            "BRIeChZudW1iZXJfb2ZfY2hpbGRfZ3Vlc3RzGAYgASgFIqsBChlJbmNpZGVu",
            "dGFsU25hcHNob3RSZXF1ZXN0EkoKCHByb3BlcnR5GAEgASgLMjguaG9sbXMu",
            "dHlwZXMudGVuYW5jeV9jb25maWcuaW5kaWNhdG9ycy5Qcm9wZXJ0eUluZGlj",
            "YXRvchJCCgpkYXRlX3JhbmdlGAIgASgLMi4uaG9sbXMudHlwZXMucHJpbWl0",
            "aXZlLlBiSW5jbHVzaXZlT3BzZGF0ZVJhbmdlMoUFChFTdXBwbHlTbmFwc2hv",
            "dFN2YxKaAQodTG9kZ2luZ1NuYXBzaG90RnJvbVRhZ3NTdHJpY3QSPC5ob2xt",
            "cy50eXBlcy5zdXBwbHkucnBjLlN1cHBseVNuYXBzaG90U3ZjU25hcHNob3RX",
            "aXRoVGFnc1JlcRo7LmhvbG1zLnR5cGVzLnN1cHBseS5zbmFwc2hvdC5Mb2Rn",
            "aW5nU25hcHNob3RSZXF1ZXN0UmVzcG9uc2USmgEKHUxvZGdpbmdTbmFwc2hv",
            "dEZyb21UYWdzTWVyZ2VkEjwuaG9sbXMudHlwZXMuc3VwcGx5LnJwYy5TdXBw",
            "bHlTbmFwc2hvdFN2Y1NuYXBzaG90V2l0aFRhZ3NSZXEaOy5ob2xtcy50eXBl",
            "cy5zdXBwbHkuc25hcHNob3QuTG9kZ2luZ1NuYXBzaG90UmVxdWVzdFJlc3Bv",
            "bnNlEqoBCiVMb2RnaW5nUXVhbnRpdHlTbmFwc2hvdEZyb21UYWdzU3RyaWN0",
            "EjwuaG9sbXMudHlwZXMuc3VwcGx5LnJwYy5TdXBwbHlTbmFwc2hvdFN2Y1Nu",
            "YXBzaG90V2l0aFRhZ3NSZXEaQy5ob2xtcy50eXBlcy5zdXBwbHkuc25hcHNo",
            "b3QuTG9kZ2luZ1F1YW50aXR5U25hcHNob3RSZXF1ZXN0UmVzcG9uc2USiAEK",
            "EkluY2lkZW50YWxTbmFwc2hvdBIxLmhvbG1zLnR5cGVzLnN1cHBseS5ycGMu",
            "SW5jaWRlbnRhbFNuYXBzaG90UmVxdWVzdBo/LmhvbG1zLnR5cGVzLnN1cHBs",
            "eS5zbmFwc2hvdC5JbmNpZGVudGFsc1NuYXBzaG90UmVxdWVzdFJlc3BvbnNl",
            "QiVaCnN1cHBseS9ycGOqAhZIT0xNUy5UeXBlcy5TdXBwbHkuUlBDYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Supply.Snapshot.IncidentalsSnapshotRequestResponseReflection.Descriptor, global::HOLMS.Types.Supply.Snapshot.LodgingSnapshotRequestResponseReflection.Descriptor, global::HOLMS.Types.Supply.Snapshot.LodgingQuantitySnapshotRequestResponseReflection.Descriptor, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.RPC.SupplySnapshotSvcSnapshotWithTagsReq), global::HOLMS.Types.Supply.RPC.SupplySnapshotSvcSnapshotWithTagsReq.Parser, new[]{ "Property", "DateRange", "ReservationTags", "IsMockPriceRequiredWithoutHolds", "NumberOfAdultGuests", "NumberOfChildGuests" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.RPC.IncidentalSnapshotRequest), global::HOLMS.Types.Supply.RPC.IncidentalSnapshotRequest.Parser, new[]{ "Property", "DateRange" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SupplySnapshotSvcSnapshotWithTagsReq : pb::IMessage<SupplySnapshotSvcSnapshotWithTagsReq> {
    private static readonly pb::MessageParser<SupplySnapshotSvcSnapshotWithTagsReq> _parser = new pb::MessageParser<SupplySnapshotSvcSnapshotWithTagsReq>(() => new SupplySnapshotSvcSnapshotWithTagsReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SupplySnapshotSvcSnapshotWithTagsReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.RPC.SupplySnapshotSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupplySnapshotSvcSnapshotWithTagsReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupplySnapshotSvcSnapshotWithTagsReq(SupplySnapshotSvcSnapshotWithTagsReq other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      reservationTags_ = other.reservationTags_.Clone();
      isMockPriceRequiredWithoutHolds_ = other.isMockPriceRequiredWithoutHolds_;
      numberOfAdultGuests_ = other.numberOfAdultGuests_;
      numberOfChildGuests_ = other.numberOfChildGuests_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupplySnapshotSvcSnapshotWithTagsReq Clone() {
      return new SupplySnapshotSvcSnapshotWithTagsReq(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "reservation_tags" field.</summary>
    public const int ReservationTagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_reservationTags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> reservationTags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReservationTags {
      get { return reservationTags_; }
    }

    /// <summary>Field number for the "is_mock_price_required_without_holds" field.</summary>
    public const int IsMockPriceRequiredWithoutHoldsFieldNumber = 4;
    private bool isMockPriceRequiredWithoutHolds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMockPriceRequiredWithoutHolds {
      get { return isMockPriceRequiredWithoutHolds_; }
      set {
        isMockPriceRequiredWithoutHolds_ = value;
      }
    }

    /// <summary>Field number for the "number_of_adult_guests" field.</summary>
    public const int NumberOfAdultGuestsFieldNumber = 5;
    private int numberOfAdultGuests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfAdultGuests {
      get { return numberOfAdultGuests_; }
      set {
        numberOfAdultGuests_ = value;
      }
    }

    /// <summary>Field number for the "number_of_child_guests" field.</summary>
    public const int NumberOfChildGuestsFieldNumber = 6;
    private int numberOfChildGuests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfChildGuests {
      get { return numberOfChildGuests_; }
      set {
        numberOfChildGuests_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SupplySnapshotSvcSnapshotWithTagsReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SupplySnapshotSvcSnapshotWithTagsReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if(!reservationTags_.Equals(other.reservationTags_)) return false;
      if (IsMockPriceRequiredWithoutHolds != other.IsMockPriceRequiredWithoutHolds) return false;
      if (NumberOfAdultGuests != other.NumberOfAdultGuests) return false;
      if (NumberOfChildGuests != other.NumberOfChildGuests) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      hash ^= reservationTags_.GetHashCode();
      if (IsMockPriceRequiredWithoutHolds != false) hash ^= IsMockPriceRequiredWithoutHolds.GetHashCode();
      if (NumberOfAdultGuests != 0) hash ^= NumberOfAdultGuests.GetHashCode();
      if (NumberOfChildGuests != 0) hash ^= NumberOfChildGuests.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateRange);
      }
      reservationTags_.WriteTo(output, _repeated_reservationTags_codec);
      if (IsMockPriceRequiredWithoutHolds != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsMockPriceRequiredWithoutHolds);
      }
      if (NumberOfAdultGuests != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NumberOfAdultGuests);
      }
      if (NumberOfChildGuests != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NumberOfChildGuests);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      size += reservationTags_.CalculateSize(_repeated_reservationTags_codec);
      if (IsMockPriceRequiredWithoutHolds != false) {
        size += 1 + 1;
      }
      if (NumberOfAdultGuests != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfAdultGuests);
      }
      if (NumberOfChildGuests != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfChildGuests);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SupplySnapshotSvcSnapshotWithTagsReq other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      reservationTags_.Add(other.reservationTags_);
      if (other.IsMockPriceRequiredWithoutHolds != false) {
        IsMockPriceRequiredWithoutHolds = other.IsMockPriceRequiredWithoutHolds;
      }
      if (other.NumberOfAdultGuests != 0) {
        NumberOfAdultGuests = other.NumberOfAdultGuests;
      }
      if (other.NumberOfChildGuests != 0) {
        NumberOfChildGuests = other.NumberOfChildGuests;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(property_);
            break;
          }
          case 18: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 26: {
            reservationTags_.AddEntriesFrom(input, _repeated_reservationTags_codec);
            break;
          }
          case 32: {
            IsMockPriceRequiredWithoutHolds = input.ReadBool();
            break;
          }
          case 40: {
            NumberOfAdultGuests = input.ReadInt32();
            break;
          }
          case 48: {
            NumberOfChildGuests = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncidentalSnapshotRequest : pb::IMessage<IncidentalSnapshotRequest> {
    private static readonly pb::MessageParser<IncidentalSnapshotRequest> _parser = new pb::MessageParser<IncidentalSnapshotRequest>(() => new IncidentalSnapshotRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncidentalSnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.RPC.SupplySnapshotSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentalSnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentalSnapshotRequest(IncidentalSnapshotRequest other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncidentalSnapshotRequest Clone() {
      return new IncidentalSnapshotRequest(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncidentalSnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncidentalSnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncidentalSnapshotRequest other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(property_);
            break;
          }
          case 18: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
