// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/rpc/card_capture_reporting_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Reporting.RPC {

  /// <summary>Holder for reflection information generated from reporting/rpc/card_capture_reporting_svc.proto</summary>
  public static partial class CardCaptureReportingSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for reporting/rpc/card_capture_reporting_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CardCaptureReportingSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5yZXBvcnRpbmcvcnBjL2NhcmRfY2FwdHVyZV9yZXBvcnRpbmdfc3ZjLnBy",
            "b3RvEhlob2xtcy50eXBlcy5yZXBvcnRpbmcucnBjGiltb25leS9jYXJkcy9j",
            "YXJkX21lcmNoYW50X2luZGljYXRvci5wcm90bxowcHJpbWl0aXZlL3BiX2lu",
            "Y2x1c2l2ZV9jYWxlbmRhcl9kYXRlX3JhbmdlLnByb3RvInkKMENhcmRDYXB0",
            "dXJlUmVwb3J0aW5nU3ZjR2V0UGVuZGluZ0NhcHR1cmVzUmVxdWVzdBJFCg1j",
            "YXJkX21lcmNoYW50GAEgASgLMi4uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMu",
            "Q2FyZE1lcmNoYW50SW5kaWNhdG9yIsMBCjFDYXJkQ2FwdHVyZVJlcG9ydFN2",
            "Y0dldFRyYW5zbWl0dGVkQ2FwdHVyZXNSZXF1ZXN0EkUKDWNhcmRfbWVyY2hh",
            "bnQYASABKAsyLi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkTWVyY2hh",
            "bnRJbmRpY2F0b3ISRwoKZGF0ZV9yYW5nZRgCIAEoCzIzLmhvbG1zLnR5cGVz",
            "LnByaW1pdGl2ZS5QYkluY2x1c2l2ZUNhbGVuZGFyRGF0ZVJhbmdlIjkKJUNh",
            "cmRDYXB0dXJlUmVwb3J0aW5nU3ZjUmVwb3J0UmVzcG9uc2USEAoIZG9jdW1l",
            "bnQYASABKAky9gIKF0NhcmRDYXB0dXJlUmVwb3J0aW5nU3ZjEqkBChhHZXRQ",
            "ZW5kaW5nQ2FwdHVyZXNSZXBvcnQSSy5ob2xtcy50eXBlcy5yZXBvcnRpbmcu",
            "cnBjLkNhcmRDYXB0dXJlUmVwb3J0aW5nU3ZjR2V0UGVuZGluZ0NhcHR1cmVz",
            "UmVxdWVzdBpALmhvbG1zLnR5cGVzLnJlcG9ydGluZy5ycGMuQ2FyZENhcHR1",
            "cmVSZXBvcnRpbmdTdmNSZXBvcnRSZXNwb25zZRKuAQocR2V0VHJhbnNtaXR0",
            "ZWRDYXB0dXJlc1JlcG9ydBJMLmhvbG1zLnR5cGVzLnJlcG9ydGluZy5ycGMu",
            "Q2FyZENhcHR1cmVSZXBvcnRTdmNHZXRUcmFuc21pdHRlZENhcHR1cmVzUmVx",
            "dWVzdBpALmhvbG1zLnR5cGVzLnJlcG9ydGluZy5ycGMuQ2FyZENhcHR1cmVS",
            "ZXBvcnRpbmdTdmNSZXBvcnRSZXNwb25zZUIcqgIZSE9MTVMuVHlwZXMuUmVw",
            "b3J0aW5nLlJQQ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRangeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcGetPendingCapturesRequest), global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcGetPendingCapturesRequest.Parser, new[]{ "CardMerchant" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.CardCaptureReportSvcGetTransmittedCapturesRequest), global::HOLMS.Types.Reporting.RPC.CardCaptureReportSvcGetTransmittedCapturesRequest.Parser, new[]{ "CardMerchant", "DateRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReportResponse), global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReportResponse.Parser, new[]{ "Document" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CardCaptureReportingSvcGetPendingCapturesRequest : pb::IMessage<CardCaptureReportingSvcGetPendingCapturesRequest> {
    private static readonly pb::MessageParser<CardCaptureReportingSvcGetPendingCapturesRequest> _parser = new pb::MessageParser<CardCaptureReportingSvcGetPendingCapturesRequest>(() => new CardCaptureReportingSvcGetPendingCapturesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCaptureReportingSvcGetPendingCapturesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcGetPendingCapturesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcGetPendingCapturesRequest(CardCaptureReportingSvcGetPendingCapturesRequest other) : this() {
      CardMerchant = other.cardMerchant_ != null ? other.CardMerchant.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcGetPendingCapturesRequest Clone() {
      return new CardCaptureReportingSvcGetPendingCapturesRequest(this);
    }

    /// <summary>Field number for the "card_merchant" field.</summary>
    public const int CardMerchantFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator cardMerchant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator CardMerchant {
      get { return cardMerchant_; }
      set {
        cardMerchant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCaptureReportingSvcGetPendingCapturesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCaptureReportingSvcGetPendingCapturesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardMerchant, other.CardMerchant)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardMerchant_ != null) hash ^= CardMerchant.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cardMerchant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardMerchant);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardMerchant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardMerchant);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCaptureReportingSvcGetPendingCapturesRequest other) {
      if (other == null) {
        return;
      }
      if (other.cardMerchant_ != null) {
        if (cardMerchant_ == null) {
          cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        CardMerchant.MergeFrom(other.CardMerchant);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cardMerchant_ == null) {
              cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(cardMerchant_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardCaptureReportSvcGetTransmittedCapturesRequest : pb::IMessage<CardCaptureReportSvcGetTransmittedCapturesRequest> {
    private static readonly pb::MessageParser<CardCaptureReportSvcGetTransmittedCapturesRequest> _parser = new pb::MessageParser<CardCaptureReportSvcGetTransmittedCapturesRequest>(() => new CardCaptureReportSvcGetTransmittedCapturesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCaptureReportSvcGetTransmittedCapturesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportSvcGetTransmittedCapturesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportSvcGetTransmittedCapturesRequest(CardCaptureReportSvcGetTransmittedCapturesRequest other) : this() {
      CardMerchant = other.cardMerchant_ != null ? other.CardMerchant.Clone() : null;
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportSvcGetTransmittedCapturesRequest Clone() {
      return new CardCaptureReportSvcGetTransmittedCapturesRequest(this);
    }

    /// <summary>Field number for the "card_merchant" field.</summary>
    public const int CardMerchantFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator cardMerchant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator CardMerchant {
      get { return cardMerchant_; }
      set {
        cardMerchant_ = value;
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCaptureReportSvcGetTransmittedCapturesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCaptureReportSvcGetTransmittedCapturesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardMerchant, other.CardMerchant)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardMerchant_ != null) hash ^= CardMerchant.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cardMerchant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardMerchant);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardMerchant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardMerchant);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCaptureReportSvcGetTransmittedCapturesRequest other) {
      if (other == null) {
        return;
      }
      if (other.cardMerchant_ != null) {
        if (cardMerchant_ == null) {
          cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        CardMerchant.MergeFrom(other.CardMerchant);
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cardMerchant_ == null) {
              cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(cardMerchant_);
            break;
          }
          case 18: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardCaptureReportingSvcReportResponse : pb::IMessage<CardCaptureReportingSvcReportResponse> {
    private static readonly pb::MessageParser<CardCaptureReportingSvcReportResponse> _parser = new pb::MessageParser<CardCaptureReportingSvcReportResponse>(() => new CardCaptureReportingSvcReportResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCaptureReportingSvcReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcReportResponse(CardCaptureReportingSvcReportResponse other) : this() {
      document_ = other.document_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcReportResponse Clone() {
      return new CardCaptureReportingSvcReportResponse(this);
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 1;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCaptureReportingSvcReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCaptureReportingSvcReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Document != other.Document) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Document.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Document);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCaptureReportingSvcReportResponse other) {
      if (other == null) {
        return;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Document = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
