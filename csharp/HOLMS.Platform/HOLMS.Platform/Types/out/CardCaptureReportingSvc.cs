// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/rpc/card_capture_reporting_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Reporting.RPC {

  /// <summary>Holder for reflection information generated from reporting/rpc/card_capture_reporting_svc.proto</summary>
  public static partial class CardCaptureReportingSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for reporting/rpc/card_capture_reporting_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CardCaptureReportingSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5yZXBvcnRpbmcvcnBjL2NhcmRfY2FwdHVyZV9yZXBvcnRpbmdfc3ZjLnBy",
            "b3RvEhlob2xtcy50eXBlcy5yZXBvcnRpbmcucnBjGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvGiltb25leS9jYXJkcy9jYXJkX21lcmNoYW50",
            "X2luZGljYXRvci5wcm90byJ9CjRDYXJkQ2FwdHVyZVJlcG9ydGluZ1N2Y0dl",
            "dFBlbmRpbmdUcmFuc2FjdGlvbnNSZXF1ZXN0EkUKDWNhcmRfbWVyY2hhbnQY",
            "ASABKAsyLi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkTWVyY2hhbnRJ",
            "bmRpY2F0b3Ii3AEKMUNhcmRDYXB0dXJlUmVwb3J0U3ZjR2V0U2V0dGxlZFRy",
            "YW5zYWN0aW9uc1JlcXVlc3QSRQoNY2FyZF9tZXJjaGFudBgBIAEoCzIuLmhv",
            "bG1zLnR5cGVzLm1vbmV5LmNhcmRzLkNhcmRNZXJjaGFudEluZGljYXRvchIw",
            "CgxyZXBvcnRfc3RhcnQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEi4KCnJlcG9ydF9lbmQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wIjkKJUNhcmRDYXB0dXJlUmVwb3J0aW5nU3ZjUmVwb3J0UmVzcG9u",
            "c2USEAoIZG9jdW1lbnQYASABKAky/gIKF0NhcmRDYXB0dXJlUmVwb3J0aW5n",
            "U3ZjErEBChxHZXRQZW5kaW5nVHJhbnNhY3Rpb25zUmVwb3J0Ek8uaG9sbXMu",
            "dHlwZXMucmVwb3J0aW5nLnJwYy5DYXJkQ2FwdHVyZVJlcG9ydGluZ1N2Y0dl",
            "dFBlbmRpbmdUcmFuc2FjdGlvbnNSZXF1ZXN0GkAuaG9sbXMudHlwZXMucmVw",
            "b3J0aW5nLnJwYy5DYXJkQ2FwdHVyZVJlcG9ydGluZ1N2Y1JlcG9ydFJlc3Bv",
            "bnNlEq4BChxHZXRTZXR0bGVkVHJhbnNhY3Rpb25zUmVwb3J0EkwuaG9sbXMu",
            "dHlwZXMucmVwb3J0aW5nLnJwYy5DYXJkQ2FwdHVyZVJlcG9ydFN2Y0dldFNl",
            "dHRsZWRUcmFuc2FjdGlvbnNSZXF1ZXN0GkAuaG9sbXMudHlwZXMucmVwb3J0",
            "aW5nLnJwYy5DYXJkQ2FwdHVyZVJlcG9ydGluZ1N2Y1JlcG9ydFJlc3BvbnNl",
            "QixaDm9wZXJhdGlvbnMvcnBjqgIZSE9MTVMuVHlwZXMuUmVwb3J0aW5nLlJQ",
            "Q2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcGetPendingTransactionsRequest), global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcGetPendingTransactionsRequest.Parser, new[]{ "CardMerchant" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.CardCaptureReportSvcGetSettledTransactionsRequest), global::HOLMS.Types.Reporting.RPC.CardCaptureReportSvcGetSettledTransactionsRequest.Parser, new[]{ "CardMerchant", "ReportStart", "ReportEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReportResponse), global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReportResponse.Parser, new[]{ "Document" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CardCaptureReportingSvcGetPendingTransactionsRequest : pb::IMessage<CardCaptureReportingSvcGetPendingTransactionsRequest> {
    private static readonly pb::MessageParser<CardCaptureReportingSvcGetPendingTransactionsRequest> _parser = new pb::MessageParser<CardCaptureReportingSvcGetPendingTransactionsRequest>(() => new CardCaptureReportingSvcGetPendingTransactionsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCaptureReportingSvcGetPendingTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcGetPendingTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcGetPendingTransactionsRequest(CardCaptureReportingSvcGetPendingTransactionsRequest other) : this() {
      CardMerchant = other.cardMerchant_ != null ? other.CardMerchant.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcGetPendingTransactionsRequest Clone() {
      return new CardCaptureReportingSvcGetPendingTransactionsRequest(this);
    }

    /// <summary>Field number for the "card_merchant" field.</summary>
    public const int CardMerchantFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator cardMerchant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator CardMerchant {
      get { return cardMerchant_; }
      set {
        cardMerchant_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCaptureReportingSvcGetPendingTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCaptureReportingSvcGetPendingTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardMerchant, other.CardMerchant)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardMerchant_ != null) hash ^= CardMerchant.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cardMerchant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardMerchant);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardMerchant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardMerchant);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCaptureReportingSvcGetPendingTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.cardMerchant_ != null) {
        if (cardMerchant_ == null) {
          cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        CardMerchant.MergeFrom(other.CardMerchant);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cardMerchant_ == null) {
              cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(cardMerchant_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardCaptureReportSvcGetSettledTransactionsRequest : pb::IMessage<CardCaptureReportSvcGetSettledTransactionsRequest> {
    private static readonly pb::MessageParser<CardCaptureReportSvcGetSettledTransactionsRequest> _parser = new pb::MessageParser<CardCaptureReportSvcGetSettledTransactionsRequest>(() => new CardCaptureReportSvcGetSettledTransactionsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCaptureReportSvcGetSettledTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportSvcGetSettledTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportSvcGetSettledTransactionsRequest(CardCaptureReportSvcGetSettledTransactionsRequest other) : this() {
      CardMerchant = other.cardMerchant_ != null ? other.CardMerchant.Clone() : null;
      ReportStart = other.reportStart_ != null ? other.ReportStart.Clone() : null;
      ReportEnd = other.reportEnd_ != null ? other.ReportEnd.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportSvcGetSettledTransactionsRequest Clone() {
      return new CardCaptureReportSvcGetSettledTransactionsRequest(this);
    }

    /// <summary>Field number for the "card_merchant" field.</summary>
    public const int CardMerchantFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator cardMerchant_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator CardMerchant {
      get { return cardMerchant_; }
      set {
        cardMerchant_ = value;
      }
    }

    /// <summary>Field number for the "report_start" field.</summary>
    public const int ReportStartFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp reportStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReportStart {
      get { return reportStart_; }
      set {
        reportStart_ = value;
      }
    }

    /// <summary>Field number for the "report_end" field.</summary>
    public const int ReportEndFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp reportEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReportEnd {
      get { return reportEnd_; }
      set {
        reportEnd_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCaptureReportSvcGetSettledTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCaptureReportSvcGetSettledTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CardMerchant, other.CardMerchant)) return false;
      if (!object.Equals(ReportStart, other.ReportStart)) return false;
      if (!object.Equals(ReportEnd, other.ReportEnd)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cardMerchant_ != null) hash ^= CardMerchant.GetHashCode();
      if (reportStart_ != null) hash ^= ReportStart.GetHashCode();
      if (reportEnd_ != null) hash ^= ReportEnd.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cardMerchant_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CardMerchant);
      }
      if (reportStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReportStart);
      }
      if (reportEnd_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReportEnd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cardMerchant_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CardMerchant);
      }
      if (reportStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportStart);
      }
      if (reportEnd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportEnd);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCaptureReportSvcGetSettledTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.cardMerchant_ != null) {
        if (cardMerchant_ == null) {
          cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        CardMerchant.MergeFrom(other.CardMerchant);
      }
      if (other.reportStart_ != null) {
        if (reportStart_ == null) {
          reportStart_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReportStart.MergeFrom(other.ReportStart);
      }
      if (other.reportEnd_ != null) {
        if (reportEnd_ == null) {
          reportEnd_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReportEnd.MergeFrom(other.ReportEnd);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cardMerchant_ == null) {
              cardMerchant_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(cardMerchant_);
            break;
          }
          case 18: {
            if (reportStart_ == null) {
              reportStart_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(reportStart_);
            break;
          }
          case 26: {
            if (reportEnd_ == null) {
              reportEnd_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(reportEnd_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardCaptureReportingSvcReportResponse : pb::IMessage<CardCaptureReportingSvcReportResponse> {
    private static readonly pb::MessageParser<CardCaptureReportingSvcReportResponse> _parser = new pb::MessageParser<CardCaptureReportingSvcReportResponse>(() => new CardCaptureReportingSvcReportResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardCaptureReportingSvcReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.CardCaptureReportingSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcReportResponse(CardCaptureReportingSvcReportResponse other) : this() {
      document_ = other.document_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardCaptureReportingSvcReportResponse Clone() {
      return new CardCaptureReportingSvcReportResponse(this);
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 1;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardCaptureReportingSvcReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardCaptureReportingSvcReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Document != other.Document) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Document.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Document);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardCaptureReportingSvcReportResponse other) {
      if (other == null) {
        return;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Document = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
