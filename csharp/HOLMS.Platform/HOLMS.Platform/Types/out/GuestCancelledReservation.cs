// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crm/guests/guest_cancelled_reservation.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.CRM.Guests {

  /// <summary>Holder for reflection information generated from crm/guests/guest_cancelled_reservation.proto</summary>
  public static partial class GuestCancelledReservationReflection {

    #region Descriptor
    /// <summary>File descriptor for crm/guests/guest_cancelled_reservation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GuestCancelledReservationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixjcm0vZ3Vlc3RzL2d1ZXN0X2NhbmNlbGxlZF9yZXNlcnZhdGlvbi5wcm90",
            "bxIWaG9sbXMudHlwZXMuY3JtLmd1ZXN0cxouYm9va2luZy9pbmRpY2F0b3Jz",
            "L3Jlc2VydmF0aW9uX2luZGljYXRvci5wcm90bxogY3JtL2d1ZXN0cy9ndWVz",
            "dF9pbmRpY2F0b3IucHJvdG8i4wEKGUd1ZXN0Q2FuY2VsbGVkUmVzZXJ2YXRp",
            "b24SFwoPcGVuYWx0eV9hcHBsaWVkGAEgASgIEiUKHWRheXNfYmVmb3JlX3Jl",
            "c2VydmF0aW9uX3N0YXJ0GAIgASgFEkwKDnJlc2VydmF0aW9uX2lkGAMgASgL",
            "MjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9u",
            "SW5kaWNhdG9yEjgKCGd1ZXN0X2lkGAQgASgLMiYuaG9sbXMudHlwZXMuY3Jt",
            "Lmd1ZXN0cy5HdWVzdEluZGljYXRvckIlWgpjcm0vZ3Vlc3RzqgIWSE9MTVMu",
            "VHlwZXMuQ1JNLkd1ZXN0c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.CRM.Guests.GuestIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.CRM.Guests.GuestCancelledReservation), global::HOLMS.Types.CRM.Guests.GuestCancelledReservation.Parser, new[]{ "PenaltyApplied", "DaysBeforeReservationStart", "ReservationId", "GuestId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GuestCancelledReservation : pb::IMessage<GuestCancelledReservation> {
    private static readonly pb::MessageParser<GuestCancelledReservation> _parser = new pb::MessageParser<GuestCancelledReservation>(() => new GuestCancelledReservation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuestCancelledReservation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.CRM.Guests.GuestCancelledReservationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuestCancelledReservation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuestCancelledReservation(GuestCancelledReservation other) : this() {
      penaltyApplied_ = other.penaltyApplied_;
      daysBeforeReservationStart_ = other.daysBeforeReservationStart_;
      ReservationId = other.reservationId_ != null ? other.ReservationId.Clone() : null;
      GuestId = other.guestId_ != null ? other.GuestId.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuestCancelledReservation Clone() {
      return new GuestCancelledReservation(this);
    }

    /// <summary>Field number for the "penalty_applied" field.</summary>
    public const int PenaltyAppliedFieldNumber = 1;
    private bool penaltyApplied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PenaltyApplied {
      get { return penaltyApplied_; }
      set {
        penaltyApplied_ = value;
      }
    }

    /// <summary>Field number for the "days_before_reservation_start" field.</summary>
    public const int DaysBeforeReservationStartFieldNumber = 2;
    private int daysBeforeReservationStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DaysBeforeReservationStart {
      get { return daysBeforeReservationStart_; }
      set {
        daysBeforeReservationStart_ = value;
      }
    }

    /// <summary>Field number for the "reservation_id" field.</summary>
    public const int ReservationIdFieldNumber = 3;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator ReservationId {
      get { return reservationId_; }
      set {
        reservationId_ = value;
      }
    }

    /// <summary>Field number for the "guest_id" field.</summary>
    public const int GuestIdFieldNumber = 4;
    private global::HOLMS.Types.CRM.Guests.GuestIndicator guestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.CRM.Guests.GuestIndicator GuestId {
      get { return guestId_; }
      set {
        guestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuestCancelledReservation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuestCancelledReservation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PenaltyApplied != other.PenaltyApplied) return false;
      if (DaysBeforeReservationStart != other.DaysBeforeReservationStart) return false;
      if (!object.Equals(ReservationId, other.ReservationId)) return false;
      if (!object.Equals(GuestId, other.GuestId)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PenaltyApplied != false) hash ^= PenaltyApplied.GetHashCode();
      if (DaysBeforeReservationStart != 0) hash ^= DaysBeforeReservationStart.GetHashCode();
      if (reservationId_ != null) hash ^= ReservationId.GetHashCode();
      if (guestId_ != null) hash ^= GuestId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PenaltyApplied != false) {
        output.WriteRawTag(8);
        output.WriteBool(PenaltyApplied);
      }
      if (DaysBeforeReservationStart != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DaysBeforeReservationStart);
      }
      if (reservationId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReservationId);
      }
      if (guestId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GuestId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PenaltyApplied != false) {
        size += 1 + 1;
      }
      if (DaysBeforeReservationStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DaysBeforeReservationStart);
      }
      if (reservationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservationId);
      }
      if (guestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuestId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuestCancelledReservation other) {
      if (other == null) {
        return;
      }
      if (other.PenaltyApplied != false) {
        PenaltyApplied = other.PenaltyApplied;
      }
      if (other.DaysBeforeReservationStart != 0) {
        DaysBeforeReservationStart = other.DaysBeforeReservationStart;
      }
      if (other.reservationId_ != null) {
        if (reservationId_ == null) {
          reservationId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        ReservationId.MergeFrom(other.ReservationId);
      }
      if (other.guestId_ != null) {
        if (guestId_ == null) {
          guestId_ = new global::HOLMS.Types.CRM.Guests.GuestIndicator();
        }
        GuestId.MergeFrom(other.GuestId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PenaltyApplied = input.ReadBool();
            break;
          }
          case 16: {
            DaysBeforeReservationStart = input.ReadInt32();
            break;
          }
          case 26: {
            if (reservationId_ == null) {
              reservationId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservationId_);
            break;
          }
          case 34: {
            if (guestId_ == null) {
              guestId_ = new global::HOLMS.Types.CRM.Guests.GuestIndicator();
            }
            input.ReadMessage(guestId_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
