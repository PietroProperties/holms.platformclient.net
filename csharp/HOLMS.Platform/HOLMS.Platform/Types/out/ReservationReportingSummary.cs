// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/reservations/reservation_reporting_summary.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Reservations {

  /// <summary>Holder for reflection information generated from booking/reservations/reservation_reporting_summary.proto</summary>
  public static partial class ReservationReportingSummaryReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/reservations/reservation_reporting_summary.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationReportingSummaryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjhib29raW5nL3Jlc2VydmF0aW9ucy9yZXNlcnZhdGlvbl9yZXBvcnRpbmdf",
            "c3VtbWFyeS5wcm90bxIgaG9sbXMudHlwZXMuYm9va2luZy5yZXNlcnZhdGlv",
            "bnMaLmJvb2tpbmcvaW5kaWNhdG9ycy9yZXNlcnZhdGlvbl9pbmRpY2F0b3Iu",
            "cHJvdG8aKnByaW1pdGl2ZS9wYl9pbmNsdXNpdmVfb3BzZGF0ZV9yYW5nZS5w",
            "cm90bxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5wcm90byL0AwobUmVz",
            "ZXJ2YXRpb25SZXBvcnRpbmdTdW1tYXJ5EkcKCWVudGl0eV9pZBgBIAEoCzI0",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbklu",
            "ZGljYXRvchISCgpib29raW5nX2lkGAIgASgJEhUKDXByaW1hcnlfZ3Vlc3QY",
            "AyABKAkSDgoGZ3Vlc3RzGAQgAygJEj0KDmd1ZXN0X2JhbGFuY2VzGAUgAygL",
            "MiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EkIKCmRh",
            "dGVfcmFuZ2UYBiABKAsyLi5ob2xtcy50eXBlcy5wcmltaXRpdmUuUGJJbmNs",
            "dXNpdmVPcHNkYXRlUmFuZ2USEQoJcm9vbV90eXBlGAcgASgJEgwKBHJvb20Y",
            "CCABKAkSPAoNZm9saW9fYmFsYW5jZRgJIAEoCzIlLmhvbG1zLnR5cGVzLnBy",
            "aW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI/ChBmaXJzdF9uaWdodF9yYXRlGAog",
            "ASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EhgK",
            "EGdyb3VwX2Jvb2tpbmdfaWQYCyABKAkSFAoMdG90YWxfZ3Vlc3RzGAwgASgF",
            "QjlaFGJvb2tpbmcvcmVzZXJ2YXRpb25zqgIgSE9MTVMuVHlwZXMuQm9va2lu",
            "Zy5SZXNlcnZhdGlvbnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Reservations.ReservationReportingSummary), global::HOLMS.Types.Booking.Reservations.ReservationReportingSummary.Parser, new[]{ "EntityId", "BookingId", "PrimaryGuest", "Guests", "GuestBalances", "DateRange", "RoomType", "Room", "FolioBalance", "FirstNightRate", "GroupBookingId", "TotalGuests" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReservationReportingSummary : pb::IMessage<ReservationReportingSummary> {
    private static readonly pb::MessageParser<ReservationReportingSummary> _parser = new pb::MessageParser<ReservationReportingSummary>(() => new ReservationReportingSummary());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationReportingSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Reservations.ReservationReportingSummaryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationReportingSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationReportingSummary(ReservationReportingSummary other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      bookingId_ = other.bookingId_;
      primaryGuest_ = other.primaryGuest_;
      guests_ = other.guests_.Clone();
      guestBalances_ = other.guestBalances_.Clone();
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      roomType_ = other.roomType_;
      room_ = other.room_;
      FolioBalance = other.folioBalance_ != null ? other.FolioBalance.Clone() : null;
      FirstNightRate = other.firstNightRate_ != null ? other.FirstNightRate.Clone() : null;
      groupBookingId_ = other.groupBookingId_;
      totalGuests_ = other.totalGuests_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationReportingSummary Clone() {
      return new ReservationReportingSummary(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "booking_id" field.</summary>
    public const int BookingIdFieldNumber = 2;
    private string bookingId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingId {
      get { return bookingId_; }
      set {
        bookingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_guest" field.</summary>
    public const int PrimaryGuestFieldNumber = 3;
    private string primaryGuest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryGuest {
      get { return primaryGuest_; }
      set {
        primaryGuest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guests" field.</summary>
    public const int GuestsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_guests_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> guests_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Guests {
      get { return guests_; }
    }

    /// <summary>Field number for the "guest_balances" field.</summary>
    public const int GuestBalancesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Primitive.MonetaryAmount> _repeated_guestBalances_codec
        = pb::FieldCodec.ForMessage(42, global::HOLMS.Types.Primitive.MonetaryAmount.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Primitive.MonetaryAmount> guestBalances_ = new pbc::RepeatedField<global::HOLMS.Types.Primitive.MonetaryAmount>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Primitive.MonetaryAmount> GuestBalances {
      get { return guestBalances_; }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 6;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 7;
    private string roomType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomType {
      get { return roomType_; }
      set {
        roomType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 8;
    private string room_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Room {
      get { return room_; }
      set {
        room_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folio_balance" field.</summary>
    public const int FolioBalanceFieldNumber = 9;
    private global::HOLMS.Types.Primitive.MonetaryAmount folioBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount FolioBalance {
      get { return folioBalance_; }
      set {
        folioBalance_ = value;
      }
    }

    /// <summary>Field number for the "first_night_rate" field.</summary>
    public const int FirstNightRateFieldNumber = 10;
    private global::HOLMS.Types.Primitive.MonetaryAmount firstNightRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount FirstNightRate {
      get { return firstNightRate_; }
      set {
        firstNightRate_ = value;
      }
    }

    /// <summary>Field number for the "group_booking_id" field.</summary>
    public const int GroupBookingIdFieldNumber = 11;
    private string groupBookingId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupBookingId {
      get { return groupBookingId_; }
      set {
        groupBookingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_guests" field.</summary>
    public const int TotalGuestsFieldNumber = 12;
    private int totalGuests_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalGuests {
      get { return totalGuests_; }
      set {
        totalGuests_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationReportingSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationReportingSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (BookingId != other.BookingId) return false;
      if (PrimaryGuest != other.PrimaryGuest) return false;
      if(!guests_.Equals(other.guests_)) return false;
      if(!guestBalances_.Equals(other.guestBalances_)) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (RoomType != other.RoomType) return false;
      if (Room != other.Room) return false;
      if (!object.Equals(FolioBalance, other.FolioBalance)) return false;
      if (!object.Equals(FirstNightRate, other.FirstNightRate)) return false;
      if (GroupBookingId != other.GroupBookingId) return false;
      if (TotalGuests != other.TotalGuests) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (BookingId.Length != 0) hash ^= BookingId.GetHashCode();
      if (PrimaryGuest.Length != 0) hash ^= PrimaryGuest.GetHashCode();
      hash ^= guests_.GetHashCode();
      hash ^= guestBalances_.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (RoomType.Length != 0) hash ^= RoomType.GetHashCode();
      if (Room.Length != 0) hash ^= Room.GetHashCode();
      if (folioBalance_ != null) hash ^= FolioBalance.GetHashCode();
      if (firstNightRate_ != null) hash ^= FirstNightRate.GetHashCode();
      if (GroupBookingId.Length != 0) hash ^= GroupBookingId.GetHashCode();
      if (TotalGuests != 0) hash ^= TotalGuests.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (BookingId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BookingId);
      }
      if (PrimaryGuest.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrimaryGuest);
      }
      guests_.WriteTo(output, _repeated_guests_codec);
      guestBalances_.WriteTo(output, _repeated_guestBalances_codec);
      if (dateRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateRange);
      }
      if (RoomType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RoomType);
      }
      if (Room.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Room);
      }
      if (folioBalance_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(FolioBalance);
      }
      if (firstNightRate_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(FirstNightRate);
      }
      if (GroupBookingId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(GroupBookingId);
      }
      if (TotalGuests != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(TotalGuests);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (BookingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookingId);
      }
      if (PrimaryGuest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimaryGuest);
      }
      size += guests_.CalculateSize(_repeated_guests_codec);
      size += guestBalances_.CalculateSize(_repeated_guestBalances_codec);
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (RoomType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomType);
      }
      if (Room.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Room);
      }
      if (folioBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolioBalance);
      }
      if (firstNightRate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FirstNightRate);
      }
      if (GroupBookingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupBookingId);
      }
      if (TotalGuests != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalGuests);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationReportingSummary other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.BookingId.Length != 0) {
        BookingId = other.BookingId;
      }
      if (other.PrimaryGuest.Length != 0) {
        PrimaryGuest = other.PrimaryGuest;
      }
      guests_.Add(other.guests_);
      guestBalances_.Add(other.guestBalances_);
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.RoomType.Length != 0) {
        RoomType = other.RoomType;
      }
      if (other.Room.Length != 0) {
        Room = other.Room;
      }
      if (other.folioBalance_ != null) {
        if (folioBalance_ == null) {
          folioBalance_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        FolioBalance.MergeFrom(other.FolioBalance);
      }
      if (other.firstNightRate_ != null) {
        if (firstNightRate_ == null) {
          firstNightRate_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        FirstNightRate.MergeFrom(other.FirstNightRate);
      }
      if (other.GroupBookingId.Length != 0) {
        GroupBookingId = other.GroupBookingId;
      }
      if (other.TotalGuests != 0) {
        TotalGuests = other.TotalGuests;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            BookingId = input.ReadString();
            break;
          }
          case 26: {
            PrimaryGuest = input.ReadString();
            break;
          }
          case 34: {
            guests_.AddEntriesFrom(input, _repeated_guests_codec);
            break;
          }
          case 42: {
            guestBalances_.AddEntriesFrom(input, _repeated_guestBalances_codec);
            break;
          }
          case 50: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 58: {
            RoomType = input.ReadString();
            break;
          }
          case 66: {
            Room = input.ReadString();
            break;
          }
          case 74: {
            if (folioBalance_ == null) {
              folioBalance_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(folioBalance_);
            break;
          }
          case 82: {
            if (firstNightRate_ == null) {
              firstNightRate_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(firstNightRate_);
            break;
          }
          case 90: {
            GroupBookingId = input.ReadString();
            break;
          }
          case 96: {
            TotalGuests = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
