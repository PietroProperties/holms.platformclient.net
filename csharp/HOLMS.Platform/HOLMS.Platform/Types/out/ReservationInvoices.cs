// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/groups/reservation_invoices.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Groups {

  /// <summary>Holder for reflection information generated from booking/groups/reservation_invoices.proto</summary>
  public static partial class ReservationInvoicesReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/groups/reservation_invoices.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationInvoicesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilib29raW5nL2dyb3Vwcy9yZXNlcnZhdGlvbl9pbnZvaWNlcy5wcm90bxIa",
            "aG9sbXMudHlwZXMuYm9va2luZy5ncm91cHMaLmJvb2tpbmcvaW5kaWNhdG9y",
            "cy9yZXNlcnZhdGlvbl9pbmRpY2F0b3IucHJvdG8aH3ByaW1pdGl2ZS9tb25l",
            "dGFyeV9hbW91bnQucHJvdG8aFHByaW1pdGl2ZS91dWlkLnByb3RvIqwDChlS",
            "ZXNlcnZhdGlvbkludm9pY2VNYXBwaW5nEi8KCmludm9pY2VfaWQYASABKAsy",
            "Gy5ob2xtcy50eXBlcy5wcmltaXRpdmUuVXVpZBJMCg5yZXNlcnZhdGlvbl9p",
            "ZBgCIAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNl",
            "cnZhdGlvbkluZGljYXRvchI1CgZhbW91bnQYAyABKAsyJS5ob2xtcy50eXBl",
            "cy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSNgoHcGF5bWVudBgEIAEoCzIl",
            "LmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI0CgV0YXhl",
            "cxgFIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3Vu",
            "dBIzCgRmZWVzGAYgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0",
            "YXJ5QW1vdW50EjYKB2NoYXJnZXMYByABKAsyJS5ob2xtcy50eXBlcy5wcmlt",
            "aXRpdmUuTW9uZXRhcnlBbW91bnRCLVoOYm9va2luZy9ncm91cHOqAhpIT0xN",
            "Uy5UeXBlcy5Cb29raW5nLkdyb3Vwc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Primitive.UuidReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping), global::HOLMS.Types.Booking.Groups.ReservationInvoiceMapping.Parser, new[]{ "InvoiceId", "ReservationId", "Amount", "Payment", "Taxes", "Fees", "Charges" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReservationInvoiceMapping : pb::IMessage<ReservationInvoiceMapping> {
    private static readonly pb::MessageParser<ReservationInvoiceMapping> _parser = new pb::MessageParser<ReservationInvoiceMapping>(() => new ReservationInvoiceMapping());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationInvoiceMapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Groups.ReservationInvoicesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMapping(ReservationInvoiceMapping other) : this() {
      InvoiceId = other.invoiceId_ != null ? other.InvoiceId.Clone() : null;
      ReservationId = other.reservationId_ != null ? other.ReservationId.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Payment = other.payment_ != null ? other.Payment.Clone() : null;
      Taxes = other.taxes_ != null ? other.Taxes.Clone() : null;
      Fees = other.fees_ != null ? other.Fees.Clone() : null;
      Charges = other.charges_ != null ? other.Charges.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationInvoiceMapping Clone() {
      return new ReservationInvoiceMapping(this);
    }

    /// <summary>Field number for the "invoice_id" field.</summary>
    public const int InvoiceIdFieldNumber = 1;
    private global::HOLMS.Types.Primitive.Uuid invoiceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid InvoiceId {
      get { return invoiceId_; }
      set {
        invoiceId_ = value;
      }
    }

    /// <summary>Field number for the "reservation_id" field.</summary>
    public const int ReservationIdFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator ReservationId {
      get { return reservationId_; }
      set {
        reservationId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "payment" field.</summary>
    public const int PaymentFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount payment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Payment {
      get { return payment_; }
      set {
        payment_ = value;
      }
    }

    /// <summary>Field number for the "taxes" field.</summary>
    public const int TaxesFieldNumber = 5;
    private global::HOLMS.Types.Primitive.MonetaryAmount taxes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Taxes {
      get { return taxes_; }
      set {
        taxes_ = value;
      }
    }

    /// <summary>Field number for the "fees" field.</summary>
    public const int FeesFieldNumber = 6;
    private global::HOLMS.Types.Primitive.MonetaryAmount fees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Fees {
      get { return fees_; }
      set {
        fees_ = value;
      }
    }

    /// <summary>Field number for the "charges" field.</summary>
    public const int ChargesFieldNumber = 7;
    private global::HOLMS.Types.Primitive.MonetaryAmount charges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Charges {
      get { return charges_; }
      set {
        charges_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationInvoiceMapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationInvoiceMapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(InvoiceId, other.InvoiceId)) return false;
      if (!object.Equals(ReservationId, other.ReservationId)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Payment, other.Payment)) return false;
      if (!object.Equals(Taxes, other.Taxes)) return false;
      if (!object.Equals(Fees, other.Fees)) return false;
      if (!object.Equals(Charges, other.Charges)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (invoiceId_ != null) hash ^= InvoiceId.GetHashCode();
      if (reservationId_ != null) hash ^= ReservationId.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (payment_ != null) hash ^= Payment.GetHashCode();
      if (taxes_ != null) hash ^= Taxes.GetHashCode();
      if (fees_ != null) hash ^= Fees.GetHashCode();
      if (charges_ != null) hash ^= Charges.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (invoiceId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(InvoiceId);
      }
      if (reservationId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservationId);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (payment_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Payment);
      }
      if (taxes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Taxes);
      }
      if (fees_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Fees);
      }
      if (charges_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Charges);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (invoiceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvoiceId);
      }
      if (reservationId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservationId);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (payment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payment);
      }
      if (taxes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Taxes);
      }
      if (fees_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fees);
      }
      if (charges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Charges);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationInvoiceMapping other) {
      if (other == null) {
        return;
      }
      if (other.invoiceId_ != null) {
        if (invoiceId_ == null) {
          invoiceId_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        InvoiceId.MergeFrom(other.InvoiceId);
      }
      if (other.reservationId_ != null) {
        if (reservationId_ == null) {
          reservationId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        ReservationId.MergeFrom(other.ReservationId);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.payment_ != null) {
        if (payment_ == null) {
          payment_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Payment.MergeFrom(other.Payment);
      }
      if (other.taxes_ != null) {
        if (taxes_ == null) {
          taxes_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Taxes.MergeFrom(other.Taxes);
      }
      if (other.fees_ != null) {
        if (fees_ == null) {
          fees_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Fees.MergeFrom(other.Fees);
      }
      if (other.charges_ != null) {
        if (charges_ == null) {
          charges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Charges.MergeFrom(other.Charges);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (invoiceId_ == null) {
              invoiceId_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(invoiceId_);
            break;
          }
          case 18: {
            if (reservationId_ == null) {
              reservationId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservationId_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (payment_ == null) {
              payment_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(payment_);
            break;
          }
          case 42: {
            if (taxes_ == null) {
              taxes_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(taxes_);
            break;
          }
          case 50: {
            if (fees_ == null) {
              fees_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(fees_);
            break;
          }
          case 58: {
            if (charges_ == null) {
              charges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(charges_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
