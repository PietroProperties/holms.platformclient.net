// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenancy_config/property_confirmation_letter_text.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.TenancyConfig {

  /// <summary>Holder for reflection information generated from tenancy_config/property_confirmation_letter_text.proto</summary>
  public static partial class PropertyConfirmationLetterTextReflection {

    #region Descriptor
    /// <summary>File descriptor for tenancy_config/property_confirmation_letter_text.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PropertyConfirmationLetterTextReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZ0ZW5hbmN5X2NvbmZpZy9wcm9wZXJ0eV9jb25maXJtYXRpb25fbGV0dGVy",
            "X3RleHQucHJvdG8SGmhvbG1zLnR5cGVzLnRlbmFuY3lfY29uZmlnGjJ0ZW5h",
            "bmN5X2NvbmZpZy9pbmRpY2F0b3JzL3Byb3BlcnR5X2luZGljYXRvci5wcm90",
            "byL0AQoeUHJvcGVydHlDb25maXJtYXRpb25MZXR0ZXJUZXh0EkoKCHByb3Bl",
            "cnR5GAEgASgLMjguaG9sbXMudHlwZXMudGVuYW5jeV9jb25maWcuaW5kaWNh",
            "dG9ycy5Qcm9wZXJ0eUluZGljYXRvchIbChNsZXR0ZXJfb3BlbmluZ190ZXh0",
            "GAIgASgJEiYKHnByb3BlcnR5X3BvbGljeV9hZ3JlZW1lbnRfdGV4dBgDIAEo",
            "CRIbChNsZXR0ZXJfY2xvc2luZ190ZXh0GAQgASgJEiQKHGhlYWRpbmdfY29u",
            "dGVudF9jb25maXJtYXRpb24YBSABKAlCHKoCGUhPTE1TLlR5cGVzLlRlbmFu",
            "Y3lDb25maWdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.TenancyConfig.PropertyConfirmationLetterText), global::HOLMS.Types.TenancyConfig.PropertyConfirmationLetterText.Parser, new[]{ "Property", "LetterOpeningText", "PropertyPolicyAgreementText", "LetterClosingText", "HeadingContentConfirmation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PropertyConfirmationLetterText : pb::IMessage<PropertyConfirmationLetterText> {
    private static readonly pb::MessageParser<PropertyConfirmationLetterText> _parser = new pb::MessageParser<PropertyConfirmationLetterText>(() => new PropertyConfirmationLetterText());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertyConfirmationLetterText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.TenancyConfig.PropertyConfirmationLetterTextReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyConfirmationLetterText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyConfirmationLetterText(PropertyConfirmationLetterText other) : this() {
      Property = other.property_ != null ? other.Property.Clone() : null;
      letterOpeningText_ = other.letterOpeningText_;
      propertyPolicyAgreementText_ = other.propertyPolicyAgreementText_;
      letterClosingText_ = other.letterClosingText_;
      headingContentConfirmation_ = other.headingContentConfirmation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertyConfirmationLetterText Clone() {
      return new PropertyConfirmationLetterText(this);
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 1;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    /// <summary>Field number for the "letter_opening_text" field.</summary>
    public const int LetterOpeningTextFieldNumber = 2;
    private string letterOpeningText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LetterOpeningText {
      get { return letterOpeningText_; }
      set {
        letterOpeningText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property_policy_agreement_text" field.</summary>
    public const int PropertyPolicyAgreementTextFieldNumber = 3;
    private string propertyPolicyAgreementText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PropertyPolicyAgreementText {
      get { return propertyPolicyAgreementText_; }
      set {
        propertyPolicyAgreementText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "letter_closing_text" field.</summary>
    public const int LetterClosingTextFieldNumber = 4;
    private string letterClosingText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LetterClosingText {
      get { return letterClosingText_; }
      set {
        letterClosingText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "heading_content_confirmation" field.</summary>
    public const int HeadingContentConfirmationFieldNumber = 5;
    private string headingContentConfirmation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadingContentConfirmation {
      get { return headingContentConfirmation_; }
      set {
        headingContentConfirmation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertyConfirmationLetterText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertyConfirmationLetterText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Property, other.Property)) return false;
      if (LetterOpeningText != other.LetterOpeningText) return false;
      if (PropertyPolicyAgreementText != other.PropertyPolicyAgreementText) return false;
      if (LetterClosingText != other.LetterClosingText) return false;
      if (HeadingContentConfirmation != other.HeadingContentConfirmation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (property_ != null) hash ^= Property.GetHashCode();
      if (LetterOpeningText.Length != 0) hash ^= LetterOpeningText.GetHashCode();
      if (PropertyPolicyAgreementText.Length != 0) hash ^= PropertyPolicyAgreementText.GetHashCode();
      if (LetterClosingText.Length != 0) hash ^= LetterClosingText.GetHashCode();
      if (HeadingContentConfirmation.Length != 0) hash ^= HeadingContentConfirmation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (property_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Property);
      }
      if (LetterOpeningText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LetterOpeningText);
      }
      if (PropertyPolicyAgreementText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PropertyPolicyAgreementText);
      }
      if (LetterClosingText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LetterClosingText);
      }
      if (HeadingContentConfirmation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(HeadingContentConfirmation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (LetterOpeningText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LetterOpeningText);
      }
      if (PropertyPolicyAgreementText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertyPolicyAgreementText);
      }
      if (LetterClosingText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LetterClosingText);
      }
      if (HeadingContentConfirmation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HeadingContentConfirmation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertyConfirmationLetterText other) {
      if (other == null) {
        return;
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        Property.MergeFrom(other.Property);
      }
      if (other.LetterOpeningText.Length != 0) {
        LetterOpeningText = other.LetterOpeningText;
      }
      if (other.PropertyPolicyAgreementText.Length != 0) {
        PropertyPolicyAgreementText = other.PropertyPolicyAgreementText;
      }
      if (other.LetterClosingText.Length != 0) {
        LetterClosingText = other.LetterClosingText;
      }
      if (other.HeadingContentConfirmation.Length != 0) {
        HeadingContentConfirmation = other.HeadingContentConfirmation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (property_ == null) {
              property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(property_);
            break;
          }
          case 18: {
            LetterOpeningText = input.ReadString();
            break;
          }
          case 26: {
            PropertyPolicyAgreementText = input.ReadString();
            break;
          }
          case 34: {
            LetterClosingText = input.ReadString();
            break;
          }
          case 42: {
            HeadingContentConfirmation = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
