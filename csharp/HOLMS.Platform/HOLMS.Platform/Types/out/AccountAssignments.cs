// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/accounting/account_assignments.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money {

  /// <summary>Holder for reflection information generated from money/accounting/account_assignments.proto</summary>
  public static partial class AccountAssignmentsReflection {

    #region Descriptor
    /// <summary>File descriptor for money/accounting/account_assignments.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountAssignmentsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ciptb25leS9hY2NvdW50aW5nL2FjY291bnRfYXNzaWdubWVudHMucHJvdG8S",
            "EWhvbG1zLnR5cGVzLm1vbmV5Gihtb25leS9hY2NvdW50aW5nL2FjY291bnRf",
            "aW5kaWNhdG9yLnByb3RvIs0IChJBY2NvdW50QXNzaWdubWVudHMSSgoSY2Fz",
            "aF9hc3NldF9hY2NvdW50GAEgASgLMi4uaG9sbXMudHlwZXMubW9uZXkuYWNj",
            "b3VudGluZy5BY2NvdW50SW5kaWNhdG9yEksKE2NoZWNrX2Fzc2V0X2FjY291",
            "bnQYAiABKAsyLi5ob2xtcy50eXBlcy5tb25leS5hY2NvdW50aW5nLkFjY291",
            "bnRJbmRpY2F0b3ISVQoddHJhdmVsZXJzX2NoZWNrX2Fzc2V0X2FjY291bnQY",
            "AyABKAsyLi5ob2xtcy50eXBlcy5tb25leS5hY2NvdW50aW5nLkFjY291bnRJ",
            "bmRpY2F0b3ISTwoXYW1leF9yZWNlaXZhYmxlX2FjY291bnQYBCABKAsyLi5o",
            "b2xtcy50eXBlcy5tb25leS5hY2NvdW50aW5nLkFjY291bnRJbmRpY2F0b3IS",
            "UwobZGlzY292ZXJfcmVjZWl2YWJsZV9hY2NvdW50GAUgASgLMi4uaG9sbXMu",
            "dHlwZXMubW9uZXkuYWNjb3VudGluZy5BY2NvdW50SW5kaWNhdG9yEk8KF3Zp",
            "c2FfcmVjZWl2YWJsZV9hY2NvdW50GAYgASgLMi4uaG9sbXMudHlwZXMubW9u",
            "ZXkuYWNjb3VudGluZy5BY2NvdW50SW5kaWNhdG9yElUKHW1hc3RlcmNhcmRf",
            "cmVjZWl2YWJsZV9hY2NvdW50GAcgASgLMi4uaG9sbXMudHlwZXMubW9uZXku",
            "YWNjb3VudGluZy5BY2NvdW50SW5kaWNhdG9yElYKHmRpbmVyc19jbHViX3Jl",
            "Y2VpdmFibGVfYWNjb3VudBgIIAEoCzIuLmhvbG1zLnR5cGVzLm1vbmV5LmFj",
            "Y291bnRpbmcuQWNjb3VudEluZGljYXRvchJPChdwcmVwYWlkX3JldmVudWVf",
            "YWNjb3VudBgNIAEoCzIuLmhvbG1zLnR5cGVzLm1vbmV5LmFjY291bnRpbmcu",
            "QWNjb3VudEluZGljYXRvchJVCh1ncm91cF9sb2RnaW5nX3JldmVudWVfYWNj",
            "b3VudBgJIAEoCzIuLmhvbG1zLnR5cGVzLm1vbmV5LmFjY291bnRpbmcuQWNj",
            "b3VudEluZGljYXRvchJPChdsb2RnaW5nX3JldmVudWVfYWNjb3VudBgKIAEo",
            "CzIuLmhvbG1zLnR5cGVzLm1vbmV5LmFjY291bnRpbmcuQWNjb3VudEluZGlj",
            "YXRvchJRChlyb29tX2NhbGxfcmV2ZW51ZV9hY2NvdW50GAsgASgLMi4uaG9s",
            "bXMudHlwZXMubW9uZXkuYWNjb3VudGluZy5BY2NvdW50SW5kaWNhdG9yElUK",
            "HW1pc2NlbGxhbmVvdXNfcmV2ZW51ZV9hY2NvdW50GAwgASgLMi4uaG9sbXMu",
            "dHlwZXMubW9uZXkuYWNjb3VudGluZy5BY2NvdW50SW5kaWNhdG9yQhSqAhFI",
            "T0xNUy5UeXBlcy5Nb25leWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Accounting.AccountIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.AccountAssignments), global::HOLMS.Types.Money.AccountAssignments.Parser, new[]{ "CashAssetAccount", "CheckAssetAccount", "TravelersCheckAssetAccount", "AmexReceivableAccount", "DiscoverReceivableAccount", "VisaReceivableAccount", "MastercardReceivableAccount", "DinersClubReceivableAccount", "PrepaidRevenueAccount", "GroupLodgingRevenueAccount", "LodgingRevenueAccount", "RoomCallRevenueAccount", "MiscellaneousRevenueAccount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccountAssignments : pb::IMessage<AccountAssignments> {
    private static readonly pb::MessageParser<AccountAssignments> _parser = new pb::MessageParser<AccountAssignments>(() => new AccountAssignments());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountAssignments> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.AccountAssignmentsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAssignments() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAssignments(AccountAssignments other) : this() {
      CashAssetAccount = other.cashAssetAccount_ != null ? other.CashAssetAccount.Clone() : null;
      CheckAssetAccount = other.checkAssetAccount_ != null ? other.CheckAssetAccount.Clone() : null;
      TravelersCheckAssetAccount = other.travelersCheckAssetAccount_ != null ? other.TravelersCheckAssetAccount.Clone() : null;
      AmexReceivableAccount = other.amexReceivableAccount_ != null ? other.AmexReceivableAccount.Clone() : null;
      DiscoverReceivableAccount = other.discoverReceivableAccount_ != null ? other.DiscoverReceivableAccount.Clone() : null;
      VisaReceivableAccount = other.visaReceivableAccount_ != null ? other.VisaReceivableAccount.Clone() : null;
      MastercardReceivableAccount = other.mastercardReceivableAccount_ != null ? other.MastercardReceivableAccount.Clone() : null;
      DinersClubReceivableAccount = other.dinersClubReceivableAccount_ != null ? other.DinersClubReceivableAccount.Clone() : null;
      PrepaidRevenueAccount = other.prepaidRevenueAccount_ != null ? other.PrepaidRevenueAccount.Clone() : null;
      GroupLodgingRevenueAccount = other.groupLodgingRevenueAccount_ != null ? other.GroupLodgingRevenueAccount.Clone() : null;
      LodgingRevenueAccount = other.lodgingRevenueAccount_ != null ? other.LodgingRevenueAccount.Clone() : null;
      RoomCallRevenueAccount = other.roomCallRevenueAccount_ != null ? other.RoomCallRevenueAccount.Clone() : null;
      MiscellaneousRevenueAccount = other.miscellaneousRevenueAccount_ != null ? other.MiscellaneousRevenueAccount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountAssignments Clone() {
      return new AccountAssignments(this);
    }

    /// <summary>Field number for the "cash_asset_account" field.</summary>
    public const int CashAssetAccountFieldNumber = 1;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator cashAssetAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator CashAssetAccount {
      get { return cashAssetAccount_; }
      set {
        cashAssetAccount_ = value;
      }
    }

    /// <summary>Field number for the "check_asset_account" field.</summary>
    public const int CheckAssetAccountFieldNumber = 2;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator checkAssetAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator CheckAssetAccount {
      get { return checkAssetAccount_; }
      set {
        checkAssetAccount_ = value;
      }
    }

    /// <summary>Field number for the "travelers_check_asset_account" field.</summary>
    public const int TravelersCheckAssetAccountFieldNumber = 3;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator travelersCheckAssetAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator TravelersCheckAssetAccount {
      get { return travelersCheckAssetAccount_; }
      set {
        travelersCheckAssetAccount_ = value;
      }
    }

    /// <summary>Field number for the "amex_receivable_account" field.</summary>
    public const int AmexReceivableAccountFieldNumber = 4;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator amexReceivableAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator AmexReceivableAccount {
      get { return amexReceivableAccount_; }
      set {
        amexReceivableAccount_ = value;
      }
    }

    /// <summary>Field number for the "discover_receivable_account" field.</summary>
    public const int DiscoverReceivableAccountFieldNumber = 5;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator discoverReceivableAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator DiscoverReceivableAccount {
      get { return discoverReceivableAccount_; }
      set {
        discoverReceivableAccount_ = value;
      }
    }

    /// <summary>Field number for the "visa_receivable_account" field.</summary>
    public const int VisaReceivableAccountFieldNumber = 6;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator visaReceivableAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator VisaReceivableAccount {
      get { return visaReceivableAccount_; }
      set {
        visaReceivableAccount_ = value;
      }
    }

    /// <summary>Field number for the "mastercard_receivable_account" field.</summary>
    public const int MastercardReceivableAccountFieldNumber = 7;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator mastercardReceivableAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator MastercardReceivableAccount {
      get { return mastercardReceivableAccount_; }
      set {
        mastercardReceivableAccount_ = value;
      }
    }

    /// <summary>Field number for the "diners_club_receivable_account" field.</summary>
    public const int DinersClubReceivableAccountFieldNumber = 8;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator dinersClubReceivableAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator DinersClubReceivableAccount {
      get { return dinersClubReceivableAccount_; }
      set {
        dinersClubReceivableAccount_ = value;
      }
    }

    /// <summary>Field number for the "prepaid_revenue_account" field.</summary>
    public const int PrepaidRevenueAccountFieldNumber = 13;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator prepaidRevenueAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator PrepaidRevenueAccount {
      get { return prepaidRevenueAccount_; }
      set {
        prepaidRevenueAccount_ = value;
      }
    }

    /// <summary>Field number for the "group_lodging_revenue_account" field.</summary>
    public const int GroupLodgingRevenueAccountFieldNumber = 9;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator groupLodgingRevenueAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator GroupLodgingRevenueAccount {
      get { return groupLodgingRevenueAccount_; }
      set {
        groupLodgingRevenueAccount_ = value;
      }
    }

    /// <summary>Field number for the "lodging_revenue_account" field.</summary>
    public const int LodgingRevenueAccountFieldNumber = 10;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator lodgingRevenueAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator LodgingRevenueAccount {
      get { return lodgingRevenueAccount_; }
      set {
        lodgingRevenueAccount_ = value;
      }
    }

    /// <summary>Field number for the "room_call_revenue_account" field.</summary>
    public const int RoomCallRevenueAccountFieldNumber = 11;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator roomCallRevenueAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator RoomCallRevenueAccount {
      get { return roomCallRevenueAccount_; }
      set {
        roomCallRevenueAccount_ = value;
      }
    }

    /// <summary>Field number for the "miscellaneous_revenue_account" field.</summary>
    public const int MiscellaneousRevenueAccountFieldNumber = 12;
    private global::HOLMS.Types.Money.Accounting.AccountIndicator miscellaneousRevenueAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Accounting.AccountIndicator MiscellaneousRevenueAccount {
      get { return miscellaneousRevenueAccount_; }
      set {
        miscellaneousRevenueAccount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountAssignments);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountAssignments other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CashAssetAccount, other.CashAssetAccount)) return false;
      if (!object.Equals(CheckAssetAccount, other.CheckAssetAccount)) return false;
      if (!object.Equals(TravelersCheckAssetAccount, other.TravelersCheckAssetAccount)) return false;
      if (!object.Equals(AmexReceivableAccount, other.AmexReceivableAccount)) return false;
      if (!object.Equals(DiscoverReceivableAccount, other.DiscoverReceivableAccount)) return false;
      if (!object.Equals(VisaReceivableAccount, other.VisaReceivableAccount)) return false;
      if (!object.Equals(MastercardReceivableAccount, other.MastercardReceivableAccount)) return false;
      if (!object.Equals(DinersClubReceivableAccount, other.DinersClubReceivableAccount)) return false;
      if (!object.Equals(PrepaidRevenueAccount, other.PrepaidRevenueAccount)) return false;
      if (!object.Equals(GroupLodgingRevenueAccount, other.GroupLodgingRevenueAccount)) return false;
      if (!object.Equals(LodgingRevenueAccount, other.LodgingRevenueAccount)) return false;
      if (!object.Equals(RoomCallRevenueAccount, other.RoomCallRevenueAccount)) return false;
      if (!object.Equals(MiscellaneousRevenueAccount, other.MiscellaneousRevenueAccount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cashAssetAccount_ != null) hash ^= CashAssetAccount.GetHashCode();
      if (checkAssetAccount_ != null) hash ^= CheckAssetAccount.GetHashCode();
      if (travelersCheckAssetAccount_ != null) hash ^= TravelersCheckAssetAccount.GetHashCode();
      if (amexReceivableAccount_ != null) hash ^= AmexReceivableAccount.GetHashCode();
      if (discoverReceivableAccount_ != null) hash ^= DiscoverReceivableAccount.GetHashCode();
      if (visaReceivableAccount_ != null) hash ^= VisaReceivableAccount.GetHashCode();
      if (mastercardReceivableAccount_ != null) hash ^= MastercardReceivableAccount.GetHashCode();
      if (dinersClubReceivableAccount_ != null) hash ^= DinersClubReceivableAccount.GetHashCode();
      if (prepaidRevenueAccount_ != null) hash ^= PrepaidRevenueAccount.GetHashCode();
      if (groupLodgingRevenueAccount_ != null) hash ^= GroupLodgingRevenueAccount.GetHashCode();
      if (lodgingRevenueAccount_ != null) hash ^= LodgingRevenueAccount.GetHashCode();
      if (roomCallRevenueAccount_ != null) hash ^= RoomCallRevenueAccount.GetHashCode();
      if (miscellaneousRevenueAccount_ != null) hash ^= MiscellaneousRevenueAccount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cashAssetAccount_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CashAssetAccount);
      }
      if (checkAssetAccount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CheckAssetAccount);
      }
      if (travelersCheckAssetAccount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TravelersCheckAssetAccount);
      }
      if (amexReceivableAccount_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AmexReceivableAccount);
      }
      if (discoverReceivableAccount_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DiscoverReceivableAccount);
      }
      if (visaReceivableAccount_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VisaReceivableAccount);
      }
      if (mastercardReceivableAccount_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(MastercardReceivableAccount);
      }
      if (dinersClubReceivableAccount_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DinersClubReceivableAccount);
      }
      if (groupLodgingRevenueAccount_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(GroupLodgingRevenueAccount);
      }
      if (lodgingRevenueAccount_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(LodgingRevenueAccount);
      }
      if (roomCallRevenueAccount_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RoomCallRevenueAccount);
      }
      if (miscellaneousRevenueAccount_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(MiscellaneousRevenueAccount);
      }
      if (prepaidRevenueAccount_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PrepaidRevenueAccount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cashAssetAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CashAssetAccount);
      }
      if (checkAssetAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CheckAssetAccount);
      }
      if (travelersCheckAssetAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TravelersCheckAssetAccount);
      }
      if (amexReceivableAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmexReceivableAccount);
      }
      if (discoverReceivableAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiscoverReceivableAccount);
      }
      if (visaReceivableAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisaReceivableAccount);
      }
      if (mastercardReceivableAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MastercardReceivableAccount);
      }
      if (dinersClubReceivableAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DinersClubReceivableAccount);
      }
      if (prepaidRevenueAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrepaidRevenueAccount);
      }
      if (groupLodgingRevenueAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupLodgingRevenueAccount);
      }
      if (lodgingRevenueAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LodgingRevenueAccount);
      }
      if (roomCallRevenueAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomCallRevenueAccount);
      }
      if (miscellaneousRevenueAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MiscellaneousRevenueAccount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountAssignments other) {
      if (other == null) {
        return;
      }
      if (other.cashAssetAccount_ != null) {
        if (cashAssetAccount_ == null) {
          cashAssetAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        CashAssetAccount.MergeFrom(other.CashAssetAccount);
      }
      if (other.checkAssetAccount_ != null) {
        if (checkAssetAccount_ == null) {
          checkAssetAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        CheckAssetAccount.MergeFrom(other.CheckAssetAccount);
      }
      if (other.travelersCheckAssetAccount_ != null) {
        if (travelersCheckAssetAccount_ == null) {
          travelersCheckAssetAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        TravelersCheckAssetAccount.MergeFrom(other.TravelersCheckAssetAccount);
      }
      if (other.amexReceivableAccount_ != null) {
        if (amexReceivableAccount_ == null) {
          amexReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        AmexReceivableAccount.MergeFrom(other.AmexReceivableAccount);
      }
      if (other.discoverReceivableAccount_ != null) {
        if (discoverReceivableAccount_ == null) {
          discoverReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        DiscoverReceivableAccount.MergeFrom(other.DiscoverReceivableAccount);
      }
      if (other.visaReceivableAccount_ != null) {
        if (visaReceivableAccount_ == null) {
          visaReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        VisaReceivableAccount.MergeFrom(other.VisaReceivableAccount);
      }
      if (other.mastercardReceivableAccount_ != null) {
        if (mastercardReceivableAccount_ == null) {
          mastercardReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        MastercardReceivableAccount.MergeFrom(other.MastercardReceivableAccount);
      }
      if (other.dinersClubReceivableAccount_ != null) {
        if (dinersClubReceivableAccount_ == null) {
          dinersClubReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        DinersClubReceivableAccount.MergeFrom(other.DinersClubReceivableAccount);
      }
      if (other.prepaidRevenueAccount_ != null) {
        if (prepaidRevenueAccount_ == null) {
          prepaidRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        PrepaidRevenueAccount.MergeFrom(other.PrepaidRevenueAccount);
      }
      if (other.groupLodgingRevenueAccount_ != null) {
        if (groupLodgingRevenueAccount_ == null) {
          groupLodgingRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        GroupLodgingRevenueAccount.MergeFrom(other.GroupLodgingRevenueAccount);
      }
      if (other.lodgingRevenueAccount_ != null) {
        if (lodgingRevenueAccount_ == null) {
          lodgingRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        LodgingRevenueAccount.MergeFrom(other.LodgingRevenueAccount);
      }
      if (other.roomCallRevenueAccount_ != null) {
        if (roomCallRevenueAccount_ == null) {
          roomCallRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        RoomCallRevenueAccount.MergeFrom(other.RoomCallRevenueAccount);
      }
      if (other.miscellaneousRevenueAccount_ != null) {
        if (miscellaneousRevenueAccount_ == null) {
          miscellaneousRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
        }
        MiscellaneousRevenueAccount.MergeFrom(other.MiscellaneousRevenueAccount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (cashAssetAccount_ == null) {
              cashAssetAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(cashAssetAccount_);
            break;
          }
          case 18: {
            if (checkAssetAccount_ == null) {
              checkAssetAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(checkAssetAccount_);
            break;
          }
          case 26: {
            if (travelersCheckAssetAccount_ == null) {
              travelersCheckAssetAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(travelersCheckAssetAccount_);
            break;
          }
          case 34: {
            if (amexReceivableAccount_ == null) {
              amexReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(amexReceivableAccount_);
            break;
          }
          case 42: {
            if (discoverReceivableAccount_ == null) {
              discoverReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(discoverReceivableAccount_);
            break;
          }
          case 50: {
            if (visaReceivableAccount_ == null) {
              visaReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(visaReceivableAccount_);
            break;
          }
          case 58: {
            if (mastercardReceivableAccount_ == null) {
              mastercardReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(mastercardReceivableAccount_);
            break;
          }
          case 66: {
            if (dinersClubReceivableAccount_ == null) {
              dinersClubReceivableAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(dinersClubReceivableAccount_);
            break;
          }
          case 74: {
            if (groupLodgingRevenueAccount_ == null) {
              groupLodgingRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(groupLodgingRevenueAccount_);
            break;
          }
          case 82: {
            if (lodgingRevenueAccount_ == null) {
              lodgingRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(lodgingRevenueAccount_);
            break;
          }
          case 90: {
            if (roomCallRevenueAccount_ == null) {
              roomCallRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(roomCallRevenueAccount_);
            break;
          }
          case 98: {
            if (miscellaneousRevenueAccount_ == null) {
              miscellaneousRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(miscellaneousRevenueAccount_);
            break;
          }
          case 106: {
            if (prepaidRevenueAccount_ == null) {
              prepaidRevenueAccount_ = new global::HOLMS.Types.Money.Accounting.AccountIndicator();
            }
            input.ReadMessage(prepaidRevenueAccount_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
