// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/rpc/front_desk_reporting_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Reporting.RPC {

  /// <summary>Holder for reflection information generated from reporting/rpc/front_desk_reporting_svc.proto</summary>
  public static partial class FrontDeskReportingSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for reporting/rpc/front_desk_reporting_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrontDeskReportingSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixyZXBvcnRpbmcvcnBjL2Zyb250X2Rlc2tfcmVwb3J0aW5nX3N2Yy5wcm90",
            "bxIZaG9sbXMudHlwZXMucmVwb3J0aW5nLnJwYxofZ29vZ2xlL3Byb3RvYnVm",
            "L3RpbWVzdGFtcC5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3Rv",
            "GiBpYW0vc3RhZmZfbWVtYmVyX2luZGljYXRvci5wcm90bxoqcHJpbWl0aXZl",
            "L3BiX2luY2x1c2l2ZV9vcHNkYXRlX3JhbmdlLnByb3RvGh1wcmltaXRpdmUv",
            "cGJfbG9jYWxfZGF0ZS5wcm90bxoydGVuYW5jeV9jb25maWcvaW5kaWNhdG9y",
            "cy9wcm9wZXJ0eV9pbmRpY2F0b3IucHJvdG8aLHJlcG9ydGluZy9vdXRwdXRz",
            "L2h0bWxfcmVwb3J0X3Jlc3BvbnNlLnByb3RvGjhyZXBvcnRpbmcvaW5wdXRf",
            "cGFyYW1zL2Zyb250X2Rlc2tfcmVwb3J0X21hbmlmZXN0cy5wcm90byJIChxG",
            "cm9udERlc2tSZXBvcnRpbmdTdmNSZXF1ZXN0EigKBGRhdGUYASABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wIp4BCilGcm9udERlc2tSZXBvcnRp",
            "bmdTdmNJbkhvdXNlR3Vlc3RzUmVxdWVzdBIoCgRkYXRlGAEgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBJHCglzb3J0X3R5cGUYAiABKA4yNC5o",
            "b2xtcy50eXBlcy5yZXBvcnRpbmcucnBjLkluSG91c2VHdWVzdFJlcG9ydFNv",
            "cnRpbmcidwoxRnJvbnREZXNrUmVwb3J0aW5nU3ZjQ2FuY2VsbGVkUmVzZXJ2",
            "YXRpb25zUmVxdWVzdBJCCgpkYXRlX3JhbmdlGAEgASgLMi4uaG9sbXMudHlw",
            "ZXMucHJpbWl0aXZlLlBiSW5jbHVzaXZlT3BzZGF0ZVJhbmdlInsKKEZyb250",
            "RGVza1JlcG9ydGluZ1N2Y0hvdXNla2VlcGluZ1JlcXVlc3QSPAoNc3RhZmZf",
            "bWVtYmVycxgBIAMoCzIlLmhvbG1zLnR5cGVzLmlhbS5TdGFmZk1lbWJlcklu",
            "ZGljYXRvchIRCglhZGRfbm90ZXMYAiABKAkivwEKLUZyb250RGVza1JlcG9y",
            "dGluZ1N2Y1Byb3BlcnR5RGF0ZVJhbmdlUmVxdWVzdBJCCgpkYXRlX3Jhbmdl",
            "GAEgASgLMi4uaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiSW5jbHVzaXZlT3Bz",
            "ZGF0ZVJhbmdlEkoKCHByb3BlcnR5GAIgASgLMjguaG9sbXMudHlwZXMudGVu",
            "YW5jeV9jb25maWcuaW5kaWNhdG9ycy5Qcm9wZXJ0eUluZGljYXRvciKrAQor",
            "RnJvbnREZXNrUmVwb3J0aW5nU3ZjUHJvcGVydHlPcHNkYXRlUmVxdWVzdBIw",
            "CgRkYXRlGAEgASgLMiIuaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiTG9jYWxE",
            "YXRlEkoKCHByb3BlcnR5GAIgASgLMjguaG9sbXMudHlwZXMudGVuYW5jeV9j",
            "b25maWcuaW5kaWNhdG9ycy5Qcm9wZXJ0eUluZGljYXRvciLSAgohRnJvbnRE",
            "ZXNrQmF0Y2hSZXBvcnRpbmdTdmNSZXF1ZXN0EkwKCnByb3BlcnRpZXMYASAD",
            "KAsyOC5ob2xtcy50eXBlcy50ZW5hbmN5X2NvbmZpZy5pbmRpY2F0b3JzLlBy",
            "b3BlcnR5SW5kaWNhdG9yEm4KHmNhbGVuZGFyX2RhdGVfcmVwb3J0c19tYW5p",
            "ZmVzdBgCIAEoCzJGLmhvbG1zLnR5cGVzLnJlcG9ydGluZy5pbnB1dF9wYXJh",
            "bXMuRnJvbnREZXNrQ3VycmVudERhdGVSZXBvcnRNYW5pZmVzdBJvCh5vcHNk",
            "YXRlX3JhbmdlX3JlcG9ydHNfbWFuaWZlc3QYAyABKAsyRy5ob2xtcy50eXBl",
            "cy5yZXBvcnRpbmcuaW5wdXRfcGFyYW1zLkZyb250RGVza09wc2RhdGVSYW5n",
            "ZVJlcG9ydE1hbmlmZXN0KkIKGUluSG91c2VHdWVzdFJlcG9ydFNvcnRpbmcS",
            "EQoNQllfR1VFU1RfTkFNRRAAEhIKDkJZX1JPT01fTlVNQkVSEAEykAsKFUZy",
            "b250RGVza1JlcG9ydGluZ1N2YxJ/ChFHZXRBcnJpdmFsc1JlcG9ydBI3Lmhv",
            "bG1zLnR5cGVzLnJlcG9ydGluZy5ycGMuRnJvbnREZXNrUmVwb3J0aW5nU3Zj",
            "UmVxdWVzdBoxLmhvbG1zLnR5cGVzLnJlcG9ydGluZy5vdXRwdXRzLkh0bWxS",
            "ZXBvcnRSZXNwb25zZRKhAQoeR2V0Q2FuY2VsbGVkUmVzZXJ2YXRpb25zUmVw",
            "b3J0EkwuaG9sbXMudHlwZXMucmVwb3J0aW5nLnJwYy5Gcm9udERlc2tSZXBv",
            "cnRpbmdTdmNDYW5jZWxsZWRSZXNlcnZhdGlvbnNSZXF1ZXN0GjEuaG9sbXMu",
            "dHlwZXMucmVwb3J0aW5nLm91dHB1dHMuSHRtbFJlcG9ydFJlc3BvbnNlEoEB",
            "ChNHZXREZXBhcnR1cmVzUmVwb3J0EjcuaG9sbXMudHlwZXMucmVwb3J0aW5n",
            "LnJwYy5Gcm9udERlc2tSZXBvcnRpbmdTdmNSZXF1ZXN0GjEuaG9sbXMudHlw",
            "ZXMucmVwb3J0aW5nLm91dHB1dHMuSHRtbFJlcG9ydFJlc3BvbnNlEpEBChZH",
            "ZXRJbkhvdXNlR3Vlc3RzUmVwb3J0EkQuaG9sbXMudHlwZXMucmVwb3J0aW5n",
            "LnJwYy5Gcm9udERlc2tSZXBvcnRpbmdTdmNJbkhvdXNlR3Vlc3RzUmVxdWVz",
            "dBoxLmhvbG1zLnR5cGVzLnJlcG9ydGluZy5vdXRwdXRzLkh0bWxSZXBvcnRS",
            "ZXNwb25zZRJ+ChBHZXROb1Nob3dzUmVwb3J0EjcuaG9sbXMudHlwZXMucmVw",
            "b3J0aW5nLnJwYy5Gcm9udERlc2tSZXBvcnRpbmdTdmNSZXF1ZXN0GjEuaG9s",
            "bXMudHlwZXMucmVwb3J0aW5nLm91dHB1dHMuSHRtbFJlcG9ydFJlc3BvbnNl",
            "El4KEUdldFZlaGljbGVzUmVwb3J0EhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "GjEuaG9sbXMudHlwZXMucmVwb3J0aW5nLm91dHB1dHMuSHRtbFJlcG9ydFJl",
            "c3BvbnNlEpsBChxHZXRHZW5lcmFsQXZhaWxhYmlsaXR5UmVwb3J0EkguaG9s",
            "bXMudHlwZXMucmVwb3J0aW5nLnJwYy5Gcm9udERlc2tSZXBvcnRpbmdTdmNQ",
            "cm9wZXJ0eURhdGVSYW5nZVJlcXVlc3QaMS5ob2xtcy50eXBlcy5yZXBvcnRp",
            "bmcub3V0cHV0cy5IdG1sUmVwb3J0UmVzcG9uc2USmgEKIEdldEhvdXNla2Vl",
            "cGluZ0Fzc2lnbm1lbnRzUmVwb3J0EkMuaG9sbXMudHlwZXMucmVwb3J0aW5n",
            "LnJwYy5Gcm9udERlc2tSZXBvcnRpbmdTdmNIb3VzZWtlZXBpbmdSZXF1ZXN0",
            "GjEuaG9sbXMudHlwZXMucmVwb3J0aW5nLm91dHB1dHMuSHRtbFJlcG9ydFJl",
            "c3BvbnNlEpUBChhHZXRVbm9jY3VwaWVkUm9vbXNSZXBvcnQSRi5ob2xtcy50",
            "eXBlcy5yZXBvcnRpbmcucnBjLkZyb250RGVza1JlcG9ydGluZ1N2Y1Byb3Bl",
            "cnR5T3BzZGF0ZVJlcXVlc3QaMS5ob2xtcy50eXBlcy5yZXBvcnRpbmcub3V0",
            "cHV0cy5IdG1sUmVwb3J0UmVzcG9uc2UShgEKE0dldEZyb250RGVza1JlcG9y",
            "dHMSPC5ob2xtcy50eXBlcy5yZXBvcnRpbmcucnBjLkZyb250RGVza0JhdGNo",
            "UmVwb3J0aW5nU3ZjUmVxdWVzdBoxLmhvbG1zLnR5cGVzLnJlcG9ydGluZy5v",
            "dXRwdXRzLkh0bWxSZXBvcnRSZXNwb25zZUIrWg1yZXBvcnRpbmcvcnBjqgIZ",
            "SE9MTVMuVHlwZXMuUmVwb3J0aW5nLlJQQ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.IAM.StaffMemberIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Primitive.PbLocalDateReflection.Descriptor, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, global::HOLMS.Types.Reporting.Outputs.HtmlReportResponseReflection.Descriptor, global::HOLMS.Types.Reporting.ReportParams.FrontDeskReportManifestsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Reporting.RPC.InHouseGuestReportSorting), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcRequest.Parser, new[]{ "Date" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcInHouseGuestsRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcInHouseGuestsRequest.Parser, new[]{ "Date", "SortType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcCancelledReservationsRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcCancelledReservationsRequest.Parser, new[]{ "DateRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest.Parser, new[]{ "StaffMembers", "AddNotes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcPropertyDateRangeRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcPropertyDateRangeRequest.Parser, new[]{ "DateRange", "Property" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcPropertyOpsdateRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcPropertyOpsdateRequest.Parser, new[]{ "Date", "Property" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest.Parser, new[]{ "Properties", "CalendarDateReportsManifest", "OpsdateRangeReportsManifest" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum InHouseGuestReportSorting {
    [pbr::OriginalName("BY_GUEST_NAME")] ByGuestName = 0,
    [pbr::OriginalName("BY_ROOM_NUMBER")] ByRoomNumber = 1,
  }

  #endregion

  #region Messages
  public sealed partial class FrontDeskReportingSvcRequest : pb::IMessage<FrontDeskReportingSvcRequest> {
    private static readonly pb::MessageParser<FrontDeskReportingSvcRequest> _parser = new pb::MessageParser<FrontDeskReportingSvcRequest>(() => new FrontDeskReportingSvcRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskReportingSvcRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcRequest(FrontDeskReportingSvcRequest other) : this() {
      Date = other.date_ != null ? other.Date.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcRequest Clone() {
      return new FrontDeskReportingSvcRequest(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskReportingSvcRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskReportingSvcRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskReportingSvcRequest other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Date.MergeFrom(other.Date);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (date_ == null) {
              date_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(date_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskReportingSvcInHouseGuestsRequest : pb::IMessage<FrontDeskReportingSvcInHouseGuestsRequest> {
    private static readonly pb::MessageParser<FrontDeskReportingSvcInHouseGuestsRequest> _parser = new pb::MessageParser<FrontDeskReportingSvcInHouseGuestsRequest>(() => new FrontDeskReportingSvcInHouseGuestsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskReportingSvcInHouseGuestsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcInHouseGuestsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcInHouseGuestsRequest(FrontDeskReportingSvcInHouseGuestsRequest other) : this() {
      Date = other.date_ != null ? other.Date.Clone() : null;
      sortType_ = other.sortType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcInHouseGuestsRequest Clone() {
      return new FrontDeskReportingSvcInHouseGuestsRequest(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "sort_type" field.</summary>
    public const int SortTypeFieldNumber = 2;
    private global::HOLMS.Types.Reporting.RPC.InHouseGuestReportSorting sortType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Reporting.RPC.InHouseGuestReportSorting SortType {
      get { return sortType_; }
      set {
        sortType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskReportingSvcInHouseGuestsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskReportingSvcInHouseGuestsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      if (SortType != other.SortType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      if (SortType != 0) hash ^= SortType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (SortType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SortType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (SortType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SortType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskReportingSvcInHouseGuestsRequest other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.SortType != 0) {
        SortType = other.SortType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (date_ == null) {
              date_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(date_);
            break;
          }
          case 16: {
            sortType_ = (global::HOLMS.Types.Reporting.RPC.InHouseGuestReportSorting) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskReportingSvcCancelledReservationsRequest : pb::IMessage<FrontDeskReportingSvcCancelledReservationsRequest> {
    private static readonly pb::MessageParser<FrontDeskReportingSvcCancelledReservationsRequest> _parser = new pb::MessageParser<FrontDeskReportingSvcCancelledReservationsRequest>(() => new FrontDeskReportingSvcCancelledReservationsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskReportingSvcCancelledReservationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcCancelledReservationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcCancelledReservationsRequest(FrontDeskReportingSvcCancelledReservationsRequest other) : this() {
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcCancelledReservationsRequest Clone() {
      return new FrontDeskReportingSvcCancelledReservationsRequest(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskReportingSvcCancelledReservationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskReportingSvcCancelledReservationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskReportingSvcCancelledReservationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskReportingSvcHousekeepingRequest : pb::IMessage<FrontDeskReportingSvcHousekeepingRequest> {
    private static readonly pb::MessageParser<FrontDeskReportingSvcHousekeepingRequest> _parser = new pb::MessageParser<FrontDeskReportingSvcHousekeepingRequest>(() => new FrontDeskReportingSvcHousekeepingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskReportingSvcHousekeepingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcHousekeepingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcHousekeepingRequest(FrontDeskReportingSvcHousekeepingRequest other) : this() {
      staffMembers_ = other.staffMembers_.Clone();
      addNotes_ = other.addNotes_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcHousekeepingRequest Clone() {
      return new FrontDeskReportingSvcHousekeepingRequest(this);
    }

    /// <summary>Field number for the "staff_members" field.</summary>
    public const int StaffMembersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.IAM.StaffMemberIndicator> _repeated_staffMembers_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.IAM.StaffMemberIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.IAM.StaffMemberIndicator> staffMembers_ = new pbc::RepeatedField<global::HOLMS.Types.IAM.StaffMemberIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.IAM.StaffMemberIndicator> StaffMembers {
      get { return staffMembers_; }
    }

    /// <summary>Field number for the "add_notes" field.</summary>
    public const int AddNotesFieldNumber = 2;
    private string addNotes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddNotes {
      get { return addNotes_; }
      set {
        addNotes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskReportingSvcHousekeepingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskReportingSvcHousekeepingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!staffMembers_.Equals(other.staffMembers_)) return false;
      if (AddNotes != other.AddNotes) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= staffMembers_.GetHashCode();
      if (AddNotes.Length != 0) hash ^= AddNotes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      staffMembers_.WriteTo(output, _repeated_staffMembers_codec);
      if (AddNotes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AddNotes);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += staffMembers_.CalculateSize(_repeated_staffMembers_codec);
      if (AddNotes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddNotes);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskReportingSvcHousekeepingRequest other) {
      if (other == null) {
        return;
      }
      staffMembers_.Add(other.staffMembers_);
      if (other.AddNotes.Length != 0) {
        AddNotes = other.AddNotes;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            staffMembers_.AddEntriesFrom(input, _repeated_staffMembers_codec);
            break;
          }
          case 18: {
            AddNotes = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskReportingSvcPropertyDateRangeRequest : pb::IMessage<FrontDeskReportingSvcPropertyDateRangeRequest> {
    private static readonly pb::MessageParser<FrontDeskReportingSvcPropertyDateRangeRequest> _parser = new pb::MessageParser<FrontDeskReportingSvcPropertyDateRangeRequest>(() => new FrontDeskReportingSvcPropertyDateRangeRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskReportingSvcPropertyDateRangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcPropertyDateRangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcPropertyDateRangeRequest(FrontDeskReportingSvcPropertyDateRangeRequest other) : this() {
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      Property = other.property_ != null ? other.Property.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcPropertyDateRangeRequest Clone() {
      return new FrontDeskReportingSvcPropertyDateRangeRequest(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 2;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskReportingSvcPropertyDateRangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskReportingSvcPropertyDateRangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(Property, other.Property)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (property_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskReportingSvcPropertyDateRangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        Property.MergeFrom(other.Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 18: {
            if (property_ == null) {
              property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(property_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskReportingSvcPropertyOpsdateRequest : pb::IMessage<FrontDeskReportingSvcPropertyOpsdateRequest> {
    private static readonly pb::MessageParser<FrontDeskReportingSvcPropertyOpsdateRequest> _parser = new pb::MessageParser<FrontDeskReportingSvcPropertyOpsdateRequest>(() => new FrontDeskReportingSvcPropertyOpsdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskReportingSvcPropertyOpsdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcPropertyOpsdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcPropertyOpsdateRequest(FrontDeskReportingSvcPropertyOpsdateRequest other) : this() {
      Date = other.date_ != null ? other.Date.Clone() : null;
      Property = other.property_ != null ? other.Property.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskReportingSvcPropertyOpsdateRequest Clone() {
      return new FrontDeskReportingSvcPropertyOpsdateRequest(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbLocalDate date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 2;
    private global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator property_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskReportingSvcPropertyOpsdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskReportingSvcPropertyOpsdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      if (!object.Equals(Property, other.Property)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (property_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskReportingSvcPropertyOpsdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.property_ != null) {
        if (property_ == null) {
          property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
        }
        Property.MergeFrom(other.Property);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (date_ == null) {
              date_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(date_);
            break;
          }
          case 18: {
            if (property_ == null) {
              property_ = new global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator();
            }
            input.ReadMessage(property_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskBatchReportingSvcRequest : pb::IMessage<FrontDeskBatchReportingSvcRequest> {
    private static readonly pb::MessageParser<FrontDeskBatchReportingSvcRequest> _parser = new pb::MessageParser<FrontDeskBatchReportingSvcRequest>(() => new FrontDeskBatchReportingSvcRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskBatchReportingSvcRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskBatchReportingSvcRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskBatchReportingSvcRequest(FrontDeskBatchReportingSvcRequest other) : this() {
      properties_ = other.properties_.Clone();
      CalendarDateReportsManifest = other.calendarDateReportsManifest_ != null ? other.CalendarDateReportsManifest.Clone() : null;
      OpsdateRangeReportsManifest = other.opsdateRangeReportsManifest_ != null ? other.OpsdateRangeReportsManifest.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskBatchReportingSvcRequest Clone() {
      return new FrontDeskBatchReportingSvcRequest(this);
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator> properties_ = new pbc::RepeatedField<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "calendar_date_reports_manifest" field.</summary>
    public const int CalendarDateReportsManifestFieldNumber = 2;
    private global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest calendarDateReportsManifest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest CalendarDateReportsManifest {
      get { return calendarDateReportsManifest_; }
      set {
        calendarDateReportsManifest_ = value;
      }
    }

    /// <summary>Field number for the "opsdate_range_reports_manifest" field.</summary>
    public const int OpsdateRangeReportsManifestFieldNumber = 3;
    private global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest opsdateRangeReportsManifest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest OpsdateRangeReportsManifest {
      get { return opsdateRangeReportsManifest_; }
      set {
        opsdateRangeReportsManifest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskBatchReportingSvcRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskBatchReportingSvcRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!properties_.Equals(other.properties_)) return false;
      if (!object.Equals(CalendarDateReportsManifest, other.CalendarDateReportsManifest)) return false;
      if (!object.Equals(OpsdateRangeReportsManifest, other.OpsdateRangeReportsManifest)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= properties_.GetHashCode();
      if (calendarDateReportsManifest_ != null) hash ^= CalendarDateReportsManifest.GetHashCode();
      if (opsdateRangeReportsManifest_ != null) hash ^= OpsdateRangeReportsManifest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      properties_.WriteTo(output, _repeated_properties_codec);
      if (calendarDateReportsManifest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CalendarDateReportsManifest);
      }
      if (opsdateRangeReportsManifest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OpsdateRangeReportsManifest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (calendarDateReportsManifest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalendarDateReportsManifest);
      }
      if (opsdateRangeReportsManifest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpsdateRangeReportsManifest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskBatchReportingSvcRequest other) {
      if (other == null) {
        return;
      }
      properties_.Add(other.properties_);
      if (other.calendarDateReportsManifest_ != null) {
        if (calendarDateReportsManifest_ == null) {
          calendarDateReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest();
        }
        CalendarDateReportsManifest.MergeFrom(other.CalendarDateReportsManifest);
      }
      if (other.opsdateRangeReportsManifest_ != null) {
        if (opsdateRangeReportsManifest_ == null) {
          opsdateRangeReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest();
        }
        OpsdateRangeReportsManifest.MergeFrom(other.OpsdateRangeReportsManifest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 18: {
            if (calendarDateReportsManifest_ == null) {
              calendarDateReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest();
            }
            input.ReadMessage(calendarDateReportsManifest_);
            break;
          }
          case 26: {
            if (opsdateRangeReportsManifest_ == null) {
              opsdateRangeReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest();
            }
            input.ReadMessage(opsdateRangeReportsManifest_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
