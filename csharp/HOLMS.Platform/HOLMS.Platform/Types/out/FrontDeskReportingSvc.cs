// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/rpc/front_desk_reporting_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Reporting.RPC {

  /// <summary>Holder for reflection information generated from reporting/rpc/front_desk_reporting_svc.proto</summary>
  public static partial class FrontDeskReportingSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for reporting/rpc/front_desk_reporting_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrontDeskReportingSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixyZXBvcnRpbmcvcnBjL2Zyb250X2Rlc2tfcmVwb3J0aW5nX3N2Yy5wcm90",
            "bxIZaG9sbXMudHlwZXMucmVwb3J0aW5nLnJwYxoydGVuYW5jeV9jb25maWcv",
            "aW5kaWNhdG9ycy9wcm9wZXJ0eV9pbmRpY2F0b3IucHJvdG8aOHJlcG9ydGlu",
            "Zy9pbnB1dF9wYXJhbXMvZnJvbnRfZGVza19yZXBvcnRfbWFuaWZlc3RzLnBy",
            "b3RvGixyZXBvcnRpbmcvb3V0cHV0cy9odG1sX3JlcG9ydF9yZXNwb25zZS5w",
            "cm90byLSAgohRnJvbnREZXNrQmF0Y2hSZXBvcnRpbmdTdmNSZXF1ZXN0EkwK",
            "CnByb3BlcnRpZXMYASADKAsyOC5ob2xtcy50eXBlcy50ZW5hbmN5X2NvbmZp",
            "Zy5pbmRpY2F0b3JzLlByb3BlcnR5SW5kaWNhdG9yEm4KHmNhbGVuZGFyX2Rh",
            "dGVfcmVwb3J0c19tYW5pZmVzdBgCIAEoCzJGLmhvbG1zLnR5cGVzLnJlcG9y",
            "dGluZy5pbnB1dF9wYXJhbXMuRnJvbnREZXNrQ3VycmVudERhdGVSZXBvcnRN",
            "YW5pZmVzdBJvCh5vcHNkYXRlX3JhbmdlX3JlcG9ydHNfbWFuaWZlc3QYAyAB",
            "KAsyRy5ob2xtcy50eXBlcy5yZXBvcnRpbmcuaW5wdXRfcGFyYW1zLkZyb250",
            "RGVza09wc2RhdGVSYW5nZVJlcG9ydE1hbmlmZXN0MqABChVGcm9udERlc2tS",
            "ZXBvcnRpbmdTdmMShgEKE0dldEZyb250RGVza1JlcG9ydHMSPC5ob2xtcy50",
            "eXBlcy5yZXBvcnRpbmcucnBjLkZyb250RGVza0JhdGNoUmVwb3J0aW5nU3Zj",
            "UmVxdWVzdBoxLmhvbG1zLnR5cGVzLnJlcG9ydGluZy5vdXRwdXRzLkh0bWxS",
            "ZXBvcnRSZXNwb25zZUIcqgIZSE9MTVMuVHlwZXMuUmVwb3J0aW5nLlJQQ2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicatorReflection.Descriptor, global::HOLMS.Types.Reporting.ReportParams.FrontDeskReportManifestsReflection.Descriptor, global::HOLMS.Types.Reporting.Outputs.HtmlReportResponseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest), global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest.Parser, new[]{ "Properties", "CalendarDateReportsManifest", "OpsdateRangeReportsManifest" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FrontDeskBatchReportingSvcRequest : pb::IMessage<FrontDeskBatchReportingSvcRequest> {
    private static readonly pb::MessageParser<FrontDeskBatchReportingSvcRequest> _parser = new pb::MessageParser<FrontDeskBatchReportingSvcRequest>(() => new FrontDeskBatchReportingSvcRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskBatchReportingSvcRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskBatchReportingSvcRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskBatchReportingSvcRequest(FrontDeskBatchReportingSvcRequest other) : this() {
      properties_ = other.properties_.Clone();
      CalendarDateReportsManifest = other.calendarDateReportsManifest_ != null ? other.CalendarDateReportsManifest.Clone() : null;
      OpsdateRangeReportsManifest = other.opsdateRangeReportsManifest_ != null ? other.OpsdateRangeReportsManifest.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskBatchReportingSvcRequest Clone() {
      return new FrontDeskBatchReportingSvcRequest(this);
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator> properties_ = new pbc::RepeatedField<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.TenancyConfig.Indicators.PropertyIndicator> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "calendar_date_reports_manifest" field.</summary>
    public const int CalendarDateReportsManifestFieldNumber = 2;
    private global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest calendarDateReportsManifest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest CalendarDateReportsManifest {
      get { return calendarDateReportsManifest_; }
      set {
        calendarDateReportsManifest_ = value;
      }
    }

    /// <summary>Field number for the "opsdate_range_reports_manifest" field.</summary>
    public const int OpsdateRangeReportsManifestFieldNumber = 3;
    private global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest opsdateRangeReportsManifest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest OpsdateRangeReportsManifest {
      get { return opsdateRangeReportsManifest_; }
      set {
        opsdateRangeReportsManifest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskBatchReportingSvcRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskBatchReportingSvcRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!properties_.Equals(other.properties_)) return false;
      if (!object.Equals(CalendarDateReportsManifest, other.CalendarDateReportsManifest)) return false;
      if (!object.Equals(OpsdateRangeReportsManifest, other.OpsdateRangeReportsManifest)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= properties_.GetHashCode();
      if (calendarDateReportsManifest_ != null) hash ^= CalendarDateReportsManifest.GetHashCode();
      if (opsdateRangeReportsManifest_ != null) hash ^= OpsdateRangeReportsManifest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      properties_.WriteTo(output, _repeated_properties_codec);
      if (calendarDateReportsManifest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CalendarDateReportsManifest);
      }
      if (opsdateRangeReportsManifest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OpsdateRangeReportsManifest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (calendarDateReportsManifest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalendarDateReportsManifest);
      }
      if (opsdateRangeReportsManifest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpsdateRangeReportsManifest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskBatchReportingSvcRequest other) {
      if (other == null) {
        return;
      }
      properties_.Add(other.properties_);
      if (other.calendarDateReportsManifest_ != null) {
        if (calendarDateReportsManifest_ == null) {
          calendarDateReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest();
        }
        CalendarDateReportsManifest.MergeFrom(other.CalendarDateReportsManifest);
      }
      if (other.opsdateRangeReportsManifest_ != null) {
        if (opsdateRangeReportsManifest_ == null) {
          opsdateRangeReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest();
        }
        OpsdateRangeReportsManifest.MergeFrom(other.OpsdateRangeReportsManifest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
          case 18: {
            if (calendarDateReportsManifest_ == null) {
              calendarDateReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest();
            }
            input.ReadMessage(calendarDateReportsManifest_);
            break;
          }
          case 26: {
            if (opsdateRangeReportsManifest_ == null) {
              opsdateRangeReportsManifest_ = new global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest();
            }
            input.ReadMessage(opsdateRangeReportsManifest_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
