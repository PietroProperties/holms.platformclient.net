// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/input_params/front_desk_report_manifests.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Reporting.ReportParams {

  /// <summary>Holder for reflection information generated from reporting/input_params/front_desk_report_manifests.proto</summary>
  public static partial class FrontDeskReportManifestsReflection {

    #region Descriptor
    /// <summary>File descriptor for reporting/input_params/front_desk_report_manifests.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrontDeskReportManifestsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjhyZXBvcnRpbmcvaW5wdXRfcGFyYW1zL2Zyb250X2Rlc2tfcmVwb3J0X21h",
            "bmlmZXN0cy5wcm90bxIiaG9sbXMudHlwZXMucmVwb3J0aW5nLmlucHV0X3Bh",
            "cmFtcxoqcHJpbWl0aXZlL3BiX2luY2x1c2l2ZV9vcHNkYXRlX3JhbmdlLnBy",
            "b3RvIqgCCiJGcm9udERlc2tDdXJyZW50RGF0ZVJlcG9ydE1hbmlmZXN0EhcK",
            "D2Fycml2YWxzX3JlcG9ydBgCIAEoCBIZChFkZXBhcnR1cmVzX3JlcG9ydBgD",
            "IAEoCBIeChZpbl9ob3VzZV9ndWVzdHNfcmVwb3J0GAQgASgIElsKFGd1ZXN0",
            "X3JlcG9ydF9zb3J0aW5nGAUgASgOMj0uaG9sbXMudHlwZXMucmVwb3J0aW5n",
            "LmlucHV0X3BhcmFtcy5JbkhvdXNlR3Vlc3RSZXBvcnRTb3J0aW5nEhcKD3Zl",
            "aGljbGVzX3JlcG9ydBgGIAEoCBIXCg9ub19zaG93c19yZXBvcnQYByABKAgS",
            "HwoXdW5vY2N1cGllZF9yb29tc19yZXBvcnQYCCABKAgitQEKI0Zyb250RGVz",
            "a09wc2RhdGVSYW5nZVJlcG9ydE1hbmlmZXN0EkIKCmRhdGVfcmFuZ2UYASAB",
            "KAsyLi5ob2xtcy50eXBlcy5wcmltaXRpdmUuUGJJbmNsdXNpdmVPcHNkYXRl",
            "UmFuZ2USIwobZ2VuZXJhbF9hdmFpbGFiaWxpdHlfcmVwb3J0GAIgASgIEiUK",
            "HWNhbmNlbGxlZF9yZXNlcnZhdGlvbnNfcmVwb3J0GAMgASgIKkIKGUluSG91",
            "c2VHdWVzdFJlcG9ydFNvcnRpbmcSEQoNQllfR1VFU1RfTkFNRRAAEhIKDkJZ",
            "X1JPT01fTlVNQkVSEAFCPVoWcmVwb3J0aW5nL2lucHV0X3BhcmFtc6oCIkhP",
            "TE1TLlR5cGVzLlJlcG9ydGluZy5SZXBvcnRQYXJhbXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Reporting.ReportParams.InHouseGuestReportSorting), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest), global::HOLMS.Types.Reporting.ReportParams.FrontDeskCurrentDateReportManifest.Parser, new[]{ "ArrivalsReport", "DeparturesReport", "InHouseGuestsReport", "GuestReportSorting", "VehiclesReport", "NoShowsReport", "UnoccupiedRoomsReport" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest), global::HOLMS.Types.Reporting.ReportParams.FrontDeskOpsdateRangeReportManifest.Parser, new[]{ "DateRange", "GeneralAvailabilityReport", "CancelledReservationsReport" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum InHouseGuestReportSorting {
    [pbr::OriginalName("BY_GUEST_NAME")] ByGuestName = 0,
    [pbr::OriginalName("BY_ROOM_NUMBER")] ByRoomNumber = 1,
  }

  #endregion

  #region Messages
  public sealed partial class FrontDeskCurrentDateReportManifest : pb::IMessage<FrontDeskCurrentDateReportManifest> {
    private static readonly pb::MessageParser<FrontDeskCurrentDateReportManifest> _parser = new pb::MessageParser<FrontDeskCurrentDateReportManifest>(() => new FrontDeskCurrentDateReportManifest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskCurrentDateReportManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.ReportParams.FrontDeskReportManifestsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskCurrentDateReportManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskCurrentDateReportManifest(FrontDeskCurrentDateReportManifest other) : this() {
      arrivalsReport_ = other.arrivalsReport_;
      departuresReport_ = other.departuresReport_;
      inHouseGuestsReport_ = other.inHouseGuestsReport_;
      guestReportSorting_ = other.guestReportSorting_;
      vehiclesReport_ = other.vehiclesReport_;
      noShowsReport_ = other.noShowsReport_;
      unoccupiedRoomsReport_ = other.unoccupiedRoomsReport_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskCurrentDateReportManifest Clone() {
      return new FrontDeskCurrentDateReportManifest(this);
    }

    /// <summary>Field number for the "arrivals_report" field.</summary>
    public const int ArrivalsReportFieldNumber = 2;
    private bool arrivalsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ArrivalsReport {
      get { return arrivalsReport_; }
      set {
        arrivalsReport_ = value;
      }
    }

    /// <summary>Field number for the "departures_report" field.</summary>
    public const int DeparturesReportFieldNumber = 3;
    private bool departuresReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeparturesReport {
      get { return departuresReport_; }
      set {
        departuresReport_ = value;
      }
    }

    /// <summary>Field number for the "in_house_guests_report" field.</summary>
    public const int InHouseGuestsReportFieldNumber = 4;
    private bool inHouseGuestsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InHouseGuestsReport {
      get { return inHouseGuestsReport_; }
      set {
        inHouseGuestsReport_ = value;
      }
    }

    /// <summary>Field number for the "guest_report_sorting" field.</summary>
    public const int GuestReportSortingFieldNumber = 5;
    private global::HOLMS.Types.Reporting.ReportParams.InHouseGuestReportSorting guestReportSorting_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Reporting.ReportParams.InHouseGuestReportSorting GuestReportSorting {
      get { return guestReportSorting_; }
      set {
        guestReportSorting_ = value;
      }
    }

    /// <summary>Field number for the "vehicles_report" field.</summary>
    public const int VehiclesReportFieldNumber = 6;
    private bool vehiclesReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool VehiclesReport {
      get { return vehiclesReport_; }
      set {
        vehiclesReport_ = value;
      }
    }

    /// <summary>Field number for the "no_shows_report" field.</summary>
    public const int NoShowsReportFieldNumber = 7;
    private bool noShowsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoShowsReport {
      get { return noShowsReport_; }
      set {
        noShowsReport_ = value;
      }
    }

    /// <summary>Field number for the "unoccupied_rooms_report" field.</summary>
    public const int UnoccupiedRoomsReportFieldNumber = 8;
    private bool unoccupiedRoomsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UnoccupiedRoomsReport {
      get { return unoccupiedRoomsReport_; }
      set {
        unoccupiedRoomsReport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskCurrentDateReportManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskCurrentDateReportManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArrivalsReport != other.ArrivalsReport) return false;
      if (DeparturesReport != other.DeparturesReport) return false;
      if (InHouseGuestsReport != other.InHouseGuestsReport) return false;
      if (GuestReportSorting != other.GuestReportSorting) return false;
      if (VehiclesReport != other.VehiclesReport) return false;
      if (NoShowsReport != other.NoShowsReport) return false;
      if (UnoccupiedRoomsReport != other.UnoccupiedRoomsReport) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArrivalsReport != false) hash ^= ArrivalsReport.GetHashCode();
      if (DeparturesReport != false) hash ^= DeparturesReport.GetHashCode();
      if (InHouseGuestsReport != false) hash ^= InHouseGuestsReport.GetHashCode();
      if (GuestReportSorting != 0) hash ^= GuestReportSorting.GetHashCode();
      if (VehiclesReport != false) hash ^= VehiclesReport.GetHashCode();
      if (NoShowsReport != false) hash ^= NoShowsReport.GetHashCode();
      if (UnoccupiedRoomsReport != false) hash ^= UnoccupiedRoomsReport.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ArrivalsReport != false) {
        output.WriteRawTag(16);
        output.WriteBool(ArrivalsReport);
      }
      if (DeparturesReport != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeparturesReport);
      }
      if (InHouseGuestsReport != false) {
        output.WriteRawTag(32);
        output.WriteBool(InHouseGuestsReport);
      }
      if (GuestReportSorting != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GuestReportSorting);
      }
      if (VehiclesReport != false) {
        output.WriteRawTag(48);
        output.WriteBool(VehiclesReport);
      }
      if (NoShowsReport != false) {
        output.WriteRawTag(56);
        output.WriteBool(NoShowsReport);
      }
      if (UnoccupiedRoomsReport != false) {
        output.WriteRawTag(64);
        output.WriteBool(UnoccupiedRoomsReport);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArrivalsReport != false) {
        size += 1 + 1;
      }
      if (DeparturesReport != false) {
        size += 1 + 1;
      }
      if (InHouseGuestsReport != false) {
        size += 1 + 1;
      }
      if (GuestReportSorting != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GuestReportSorting);
      }
      if (VehiclesReport != false) {
        size += 1 + 1;
      }
      if (NoShowsReport != false) {
        size += 1 + 1;
      }
      if (UnoccupiedRoomsReport != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskCurrentDateReportManifest other) {
      if (other == null) {
        return;
      }
      if (other.ArrivalsReport != false) {
        ArrivalsReport = other.ArrivalsReport;
      }
      if (other.DeparturesReport != false) {
        DeparturesReport = other.DeparturesReport;
      }
      if (other.InHouseGuestsReport != false) {
        InHouseGuestsReport = other.InHouseGuestsReport;
      }
      if (other.GuestReportSorting != 0) {
        GuestReportSorting = other.GuestReportSorting;
      }
      if (other.VehiclesReport != false) {
        VehiclesReport = other.VehiclesReport;
      }
      if (other.NoShowsReport != false) {
        NoShowsReport = other.NoShowsReport;
      }
      if (other.UnoccupiedRoomsReport != false) {
        UnoccupiedRoomsReport = other.UnoccupiedRoomsReport;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 16: {
            ArrivalsReport = input.ReadBool();
            break;
          }
          case 24: {
            DeparturesReport = input.ReadBool();
            break;
          }
          case 32: {
            InHouseGuestsReport = input.ReadBool();
            break;
          }
          case 40: {
            guestReportSorting_ = (global::HOLMS.Types.Reporting.ReportParams.InHouseGuestReportSorting) input.ReadEnum();
            break;
          }
          case 48: {
            VehiclesReport = input.ReadBool();
            break;
          }
          case 56: {
            NoShowsReport = input.ReadBool();
            break;
          }
          case 64: {
            UnoccupiedRoomsReport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrontDeskOpsdateRangeReportManifest : pb::IMessage<FrontDeskOpsdateRangeReportManifest> {
    private static readonly pb::MessageParser<FrontDeskOpsdateRangeReportManifest> _parser = new pb::MessageParser<FrontDeskOpsdateRangeReportManifest>(() => new FrontDeskOpsdateRangeReportManifest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrontDeskOpsdateRangeReportManifest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Reporting.ReportParams.FrontDeskReportManifestsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskOpsdateRangeReportManifest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskOpsdateRangeReportManifest(FrontDeskOpsdateRangeReportManifest other) : this() {
      DateRange = other.dateRange_ != null ? other.DateRange.Clone() : null;
      generalAvailabilityReport_ = other.generalAvailabilityReport_;
      cancelledReservationsReport_ = other.cancelledReservationsReport_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrontDeskOpsdateRangeReportManifest Clone() {
      return new FrontDeskOpsdateRangeReportManifest(this);
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 1;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange dateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "general_availability_report" field.</summary>
    public const int GeneralAvailabilityReportFieldNumber = 2;
    private bool generalAvailabilityReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GeneralAvailabilityReport {
      get { return generalAvailabilityReport_; }
      set {
        generalAvailabilityReport_ = value;
      }
    }

    /// <summary>Field number for the "cancelled_reservations_report" field.</summary>
    public const int CancelledReservationsReportFieldNumber = 3;
    private bool cancelledReservationsReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CancelledReservationsReport {
      get { return cancelledReservationsReport_; }
      set {
        cancelledReservationsReport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrontDeskOpsdateRangeReportManifest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrontDeskOpsdateRangeReportManifest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (GeneralAvailabilityReport != other.GeneralAvailabilityReport) return false;
      if (CancelledReservationsReport != other.CancelledReservationsReport) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (GeneralAvailabilityReport != false) hash ^= GeneralAvailabilityReport.GetHashCode();
      if (CancelledReservationsReport != false) hash ^= CancelledReservationsReport.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateRange);
      }
      if (GeneralAvailabilityReport != false) {
        output.WriteRawTag(16);
        output.WriteBool(GeneralAvailabilityReport);
      }
      if (CancelledReservationsReport != false) {
        output.WriteRawTag(24);
        output.WriteBool(CancelledReservationsReport);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (GeneralAvailabilityReport != false) {
        size += 1 + 1;
      }
      if (CancelledReservationsReport != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrontDeskOpsdateRangeReportManifest other) {
      if (other == null) {
        return;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.GeneralAvailabilityReport != false) {
        GeneralAvailabilityReport = other.GeneralAvailabilityReport;
      }
      if (other.CancelledReservationsReport != false) {
        CancelledReservationsReport = other.CancelledReservationsReport;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (dateRange_ == null) {
              dateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(dateRange_);
            break;
          }
          case 16: {
            GeneralAvailabilityReport = input.ReadBool();
            break;
          }
          case 24: {
            CancelledReservationsReport = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
