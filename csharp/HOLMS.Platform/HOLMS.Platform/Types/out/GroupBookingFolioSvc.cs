// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/rpc/group_booking_folio_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio.RPC {

  /// <summary>Holder for reflection information generated from folio/rpc/group_booking_folio_svc.proto</summary>
  public static partial class GroupBookingFolioSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/rpc/group_booking_folio_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupBookingFolioSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidmb2xpby9ycGMvZ3JvdXBfYm9va2luZ19mb2xpb19zdmMucHJvdG8SFWhv",
            "bG1zLnR5cGVzLmZvbGlvLnJwYxowYm9va2luZy9pbmRpY2F0b3JzL2dyb3Vw",
            "X2Jvb2tpbmdfaW5kaWNhdG9yLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1w",
            "dHkucHJvdG8aI21vbmV5L2NhcmRzL2NhcmRfc2FsZV9wdXJwb3NlLnByb3Rv",
            "Gjptb25leS9jYXJkcy90cmFuc2FjdGlvbnMvY2FyZF9hdXRob3JpemF0aW9u",
            "X3Jlc3BvbnNlLnByb3RvGjptb25leS9jYXJkcy90cmFuc2FjdGlvbnMvcGF5",
            "bWVudF9jYXJkX3NhbGVfaW5kaWNhdG9yLnByb3RvGiptb25leS9jYXJkcy9u",
            "b3RfcHJlc2VudF9wYXltZW50X2NhcmQucHJvdG8aLm1vbmV5L2NhcmRzL2d1",
            "ZXN0X3BheW1lbnRfY2FyZF9pbmRpY2F0b3IucHJvdG8aH3ByaW1pdGl2ZS9t",
            "b25ldGFyeV9hbW91bnQucHJvdG8aN3N1cHBseS9pbmNpZGVudGFsX2l0ZW1z",
            "L2luY2lkZW50YWxfaXRlbV9pbmRpY2F0b3IucHJvdG8aG2ZvbGlvL2ZvbGlv",
            "X2luZGljYXRvci5wcm90bxolZm9saW8vZ3JvdXBfYm9va2luZ19mb2xpb19z",
            "dGF0ZS5wcm90byJ3CidHcm91cEJvb2tpbmdGb2xpb1N2Y1Bvc3RDaGFyZ2Vz",
            "UmVzcG9uc2USTAoGcmVzdWx0GAEgASgOMjwuaG9sbXMudHlwZXMuZm9saW8u",
            "cnBjLkdyb3VwQm9va2luZ0ZvbGlvU3ZjUG9zdENoYXJnZXNSZXN1bHQifwor",
            "R3JvdXBCb29raW5nRm9saW9TdmNQb3N0Q2FzaFBheW1lbnRSZXNwb25zZRJQ",
            "CgZyZXN1bHQYASABKA4yQC5ob2xtcy50eXBlcy5mb2xpby5ycGMuR3JvdXBC",
            "b29raW5nRm9saW9TdmNQb3N0Q2FzaFBheW1lbnRSZXN1bHQigQEKLEdyb3Vw",
            "Qm9va2luZ0ZvbGlvU3ZjUG9zdENoZWNrUGF5bWVudFJlc3BvbnNlElEKBnJl",
            "c3VsdBgBIAEoDjJBLmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5Hcm91cEJvb2tp",
            "bmdGb2xpb1N2Y1Bvc3RDaGVja1BheW1lbnRSZXN1bHQirAEKK0dyb3VwQm9v",
            "a2luZ0ZvbGlvU3ZjUG9zdENoZWNrUGF5bWVudFJlcXVlc3QSRgoHYm9va2lu",
            "ZxgBIAEoCzI1LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5Hcm91",
            "cEJvb2tpbmdJbmRpY2F0b3ISNQoGYW1vdW50GAIgASgLMiUuaG9sbXMudHlw",
            "ZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50IrMCCjVHcm91cEJvb2tpbmdG",
            "b2xpb1N2Y0NhcmRBdXRob3JpemF0aW9uRnJvbVRva2VuUmVxdWVzdBJGCgdi",
            "b29raW5nGAEgASgLMjUuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3Jz",
            "Lkdyb3VwQm9va2luZ0luZGljYXRvchJACgRjYXJkGAIgASgLMjIuaG9sbXMu",
            "dHlwZXMubW9uZXkuY2FyZHMuR3Vlc3RQYXltZW50Q2FyZEluZGljYXRvchI1",
            "CgZhbW91bnQYAyABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRh",
            "cnlBbW91bnQSOQoHcHVycG9zZRgEIAEoCzIoLmhvbG1zLnR5cGVzLm1vbmV5",
            "LmNhcmRzLkNhcmRTYWxlUHVycG9zZSL3AQo7R3JvdXBCb29raW5nRm9saW9T",
            "dmNDYXJkQXV0aG9yaXphdGlvbkZyb21QcmVzZW50Q2FyZFJlcXVlc3QSRgoH",
            "Ym9va2luZxgBIAEoCzI1LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNhdG9y",
            "cy5Hcm91cEJvb2tpbmdJbmRpY2F0b3ISNQoGYW1vdW50GAIgASgLMiUuaG9s",
            "bXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EjkKB3B1cnBvc2UY",
            "AyABKAsyKC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkU2FsZVB1cnBv",
            "c2UiuAIKPkdyb3VwQm9va2luZ0ZvbGlvU3ZjQ2FyZEF1dGhvcml6YXRpb25G",
            "cm9tTm90UHJlc2VudENhcmRSZXF1ZXN0EkYKB2Jvb2tpbmcYASABKAsyNS5o",
            "b2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3JvdXBCb29raW5nSW5k",
            "aWNhdG9yEjwKBGNhcmQYAiABKAsyLi5ob2xtcy50eXBlcy5tb25leS5jYXJk",
            "cy5Ob3RQcmVzZW50UGF5bWVudENhcmQSNQoGYW1vdW50GAMgASgLMiUuaG9s",
            "bXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EjkKB3B1cnBvc2UY",
            "BCABKAsyKC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkU2FsZVB1cnBv",
            "c2UifworR3JvdXBCb29raW5nRm9saW9TdmNQb3N0Q2FyZFBheW1lbnRSZXNw",
            "b25zZRJQCgZyZXN1bHQYASABKA4yQC5ob2xtcy50eXBlcy5mb2xpby5ycGMu",
            "R3JvdXBCb29raW5nRm9saW9TdmNQb3N0Q2FyZFBheW1lbnRSZXN1bHQi+QEK",
            "Kkdyb3VwQm9va2luZ0ZvbGlvU3ZjUG9zdENhcmRQYXltZW50UmVxdWVzdBJG",
            "Cgdib29raW5nGAEgASgLMjUuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0",
            "b3JzLkdyb3VwQm9va2luZ0luZGljYXRvchJMCgRzYWxlGAIgASgLMj4uaG9s",
            "bXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLlBheW1lbnRDYXJk",
            "U2FsZUluZGljYXRvchI1CgZhbW91bnQYAyABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQisAEKKkdyb3VwQm9va2luZ0ZvbGlv",
            "U3ZjUG9zdENhc2hQYXltZW50UmVxdWVzdBI6CgthbW91bnRfcGFpZBgBIAEo",
            "CzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBJGCgdi",
            "b29raW5nGAIgASgLMjUuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3Jz",
            "Lkdyb3VwQm9va2luZ0luZGljYXRvciKDAgo2R3JvdXBCb29raW5nRm9saW9T",
            "dmNQb3N0TG9kZ2luZ0NoYXJnZUNvcnJlY3Rpb25SZXF1ZXN0EkYKB2Jvb2tp",
            "bmcYASABKAsyNS5ob2xtcy50eXBlcy5ib29raW5nLmluZGljYXRvcnMuR3Jv",
            "dXBCb29raW5nSW5kaWNhdG9yEhMKC2Rlc2NyaXB0aW9uGAIgASgJEkIKE2Fk",
            "anVzdG1lbnRfc3VidG90YWwYAyABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRp",
            "dmUuTW9uZXRhcnlBbW91bnQSKAogYWRqdXN0bWVudF9jaGFyZ2VkX2FnYWlu",
            "c3RfZ3JvdXAYBCABKAgi3QIKOUdyb3VwQm9va2luZ0ZvbGlvU3ZjUG9zdElu",
            "Y2lkZW50YWxDaGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBJGCgdib29raW5nGAEg",
            "ASgLMjUuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLkdyb3VwQm9v",
            "a2luZ0luZGljYXRvchJVCg9pbmNpZGVudGFsX2l0ZW0YAiABKAsyPC5ob2xt",
            "cy50eXBlcy5zdXBwbHkuaW5jaWRlbnRhbF9pdGVtcy5JbmNpZGVudGFsSXRl",
            "bUluZGljYXRvchITCgtkZXNjcmlwdGlvbhgDIAEoCRJCChNhZGp1c3RtZW50",
            "X3N1YnRvdGFsGAQgASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0",
            "YXJ5QW1vdW50EigKIGFkanVzdG1lbnRfY2hhcmdlZF9hZ2FpbnN0X2dyb3Vw",
            "GAUgASgIIoACCjNHcm91cEJvb2tpbmdGb2xpb1N2Y1Bvc3RNaXNjQ2hhcmdl",
            "Q29ycmVjdGlvblJlcXVlc3QSRgoHYm9va2luZxgBIAEoCzI1LmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5Hcm91cEJvb2tpbmdJbmRpY2F0b3IS",
            "EwoLZGVzY3JpcHRpb24YAiABKAkSQgoTYWRqdXN0bWVudF9zdWJ0b3RhbBgD",
            "IAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBIo",
            "CiBhZGp1c3RtZW50X2NoYXJnZWRfYWdhaW5zdF9ncm91cBgEIAEoCCrnAQol",
            "R3JvdXBCb29raW5nRm9saW9TdmNQb3N0Q2hhcmdlc1Jlc3VsdBIyCi5HUk9V",
            "UF9CT09LSU5HX0ZPTElPX1NWQ19QT1NUX0NIQVJHRVNfUkVTVUxUX09LEAAS",
            "RQpBR1JPVVBfQk9PS0lOR19GT0xJT19TVkNfUE9TVF9DSEFSR0VTX1JFU1VM",
            "VF9NSVNTSU5HX0hPVVNFX0FDQ09VTlQQARJDCj9HUk9VUF9CT09LSU5HX0ZP",
            "TElPX1NWQ19QT1NUX0NIQVJHRVNfUkVTVUxUX01JU1NJTkdfUkVTRVJWQVRJ",
            "T04QAirgAQopR3JvdXBCb29raW5nRm9saW9TdmNQb3N0Q2FzaFBheW1lbnRS",
            "ZXN1bHQSMAosR1JPVVBfQk9PS0lOR19GT0xJT19TVkNfUE9TVF9DQVNIX1BB",
            "WU1FTlRfT0sQABJDCj9HUk9VUF9CT09LSU5HX0ZPTElPX1NWQ19QT1NUX0NB",
            "U0hfUEFZTUVOVF9NSVNTSU5HX0hPVVNFX0FDQ09VTlQQARI8CjhHUk9VUF9C",
            "T09LSU5HX0ZPTElPX1NWQ19QT1NUX0NBU0hfUEFZTUVOVF9JTlZBTElEX0FN",
            "T1VOVBACKuQBCipHcm91cEJvb2tpbmdGb2xpb1N2Y1Bvc3RDaGVja1BheW1l",
            "bnRSZXN1bHQSMQotR1JPVVBfQk9PS0lOR19GT0xJT19TVkNfUE9TVF9DSEVD",
            "S19QQVlNRU5UX09LEAASRApAR1JPVVBfQk9PS0lOR19GT0xJT19TVkNfUE9T",
            "VF9DSEVDS19QQVlNRU5UX01JU1NJTkdfSE9VU0VfQUNDT1VOVBABEj0KOUdS",
            "T1VQX0JPT0tJTkdfRk9MSU9fU1ZDX1BPU1RfQ0hFQ0tfUEFZTUVOVF9JTlZB",
            "TElEX0FNT1VOVBACKu4CCilHcm91cEJvb2tpbmdGb2xpb1N2Y1Bvc3RDYXJk",
            "UGF5bWVudFJlc3VsdBIwCixHUk9VUF9CT09LSU5HX0ZPTElPX1NWQ19QT1NU",
            "X0NBUkRfUEFZTUVOVF9PSxAAEkMKP0dST1VQX0JPT0tJTkdfRk9MSU9fU1ZD",
            "X1BPU1RfQ0FSRF9QQVlNRU5UX01JU1NJTkdfSE9VU0VfQUNDT1VOVBABEkMK",
            "P0dST1VQX0JPT0tJTkdfRk9MSU9fU1ZDX1BPU1RfQ0FSRF9QQVlNRU5UX01J",
            "U1NJTkdfQVNTRVRfQUNDT1VOVBACEjwKOEdST1VQX0JPT0tJTkdfRk9MSU9f",
            "U1ZDX1BPU1RfQ0FSRF9QQVlNRU5UX0lOVkFMSURfQU1PVU5UEAMSRwpDR1JP",
            "VVBfQk9PS0lOR19GT0xJT19TVkNfUE9TVF9DQVJEX1BBWU1FTlRfQVVUSE9S",
            "SVpBVElPTl9VTkFWQUlMQUJMRRAEMpIMChRHcm91cEJvb2tpbmdGb2xpb1N2",
            "YxJfCg9HZXRGb2xpb1N0YXRldjISIS5ob2xtcy50eXBlcy5mb2xpby5Gb2xp",
            "b0luZGljYXRvchopLmhvbG1zLnR5cGVzLmZvbGlvLkdyb3VwQm9va2luZ0Zv",
            "bGlvU3RhdGUSrgEKHUFkZENhcmRBdXRob3JpemF0aW9uRnJvbVRva2VuEkwu",
            "aG9sbXMudHlwZXMuZm9saW8ucnBjLkdyb3VwQm9va2luZ0ZvbGlvU3ZjQ2Fy",
            "ZEF1dGhvcml6YXRpb25Gcm9tVG9rZW5SZXF1ZXN0Gj8uaG9sbXMudHlwZXMu",
            "bW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLkNhcmRBdXRob3JpemF0aW9uUmVz",
            "cG9uc2USvAEKJUFkZENhcmRBdXRob3JpemF0aW9uRnJvbVByZXNlbnRlZENh",
            "cmQSUi5ob2xtcy50eXBlcy5mb2xpby5ycGMuR3JvdXBCb29raW5nRm9saW9T",
            "dmNDYXJkQXV0aG9yaXphdGlvbkZyb21QcmVzZW50Q2FyZFJlcXVlc3QaPy5o",
            "b2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuQ2FyZEF1dGhv",
            "cml6YXRpb25SZXNwb25zZRLAAQomQWRkQ2FyZEF1dGhvcml6YXRpb25Gcm9t",
            "Tm90UHJlc2VudENhcmQSVS5ob2xtcy50eXBlcy5mb2xpby5ycGMuR3JvdXBC",
            "b29raW5nRm9saW9TdmNDYXJkQXV0aG9yaXphdGlvbkZyb21Ob3RQcmVzZW50",
            "Q2FyZFJlcXVlc3QaPy5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2Fj",
            "dGlvbnMuQ2FyZEF1dGhvcml6YXRpb25SZXNwb25zZRKYAQoPUG9zdENhcmRQ",
            "YXltZW50EkEuaG9sbXMudHlwZXMuZm9saW8ucnBjLkdyb3VwQm9va2luZ0Zv",
            "bGlvU3ZjUG9zdENhcmRQYXltZW50UmVxdWVzdBpCLmhvbG1zLnR5cGVzLmZv",
            "bGlvLnJwYy5Hcm91cEJvb2tpbmdGb2xpb1N2Y1Bvc3RDYXJkUGF5bWVudFJl",
            "c3BvbnNlEpsBChBQb3N0Q2hlY2tQYXltZW50EkIuaG9sbXMudHlwZXMuZm9s",
            "aW8ucnBjLkdyb3VwQm9va2luZ0ZvbGlvU3ZjUG9zdENoZWNrUGF5bWVudFJl",
            "cXVlc3QaQy5ob2xtcy50eXBlcy5mb2xpby5ycGMuR3JvdXBCb29raW5nRm9s",
            "aW9TdmNQb3N0Q2hlY2tQYXltZW50UmVzcG9uc2USmAEKD1Bvc3RDYXNoUGF5",
            "bWVudBJBLmhvbG1zLnR5cGVzLmZvbGlvLnJwYy5Hcm91cEJvb2tpbmdGb2xp",
            "b1N2Y1Bvc3RDYXNoUGF5bWVudFJlcXVlc3QaQi5ob2xtcy50eXBlcy5mb2xp",
            "by5ycGMuR3JvdXBCb29raW5nRm9saW9TdmNQb3N0Q2FzaFBheW1lbnRSZXNw",
            "b25zZRKEAQobUG9zdExvZGdpbmdDaGFyZ2VDb3JyZWN0aW9uEk0uaG9sbXMu",
            "dHlwZXMuZm9saW8ucnBjLkdyb3VwQm9va2luZ0ZvbGlvU3ZjUG9zdExvZGdp",
            "bmdDaGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRKKAQoeUG9zdEluY2lkZW50YWxDaGFyZ2VDb3JyZWN0aW9uElAuaG9s",
            "bXMudHlwZXMuZm9saW8ucnBjLkdyb3VwQm9va2luZ0ZvbGlvU3ZjUG9zdElu",
            "Y2lkZW50YWxDaGFyZ2VDb3JyZWN0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRJ+ChhQb3N0TWlzY0NoYXJnZUNvcnJlY3Rpb24SSi5ob2xt",
            "cy50eXBlcy5mb2xpby5ycGMuR3JvdXBCb29raW5nRm9saW9TdmNQb3N0TWlz",
            "Y0NoYXJnZUNvcnJlY3Rpb25SZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5QiNaCWZvbGlvL3JwY6oCFUhPTE1TLlR5cGVzLkZvbGlvLlJQQ2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.GroupBookingIndicatorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardSalePurposeReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.CardAuthorizationResponseReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.NotPresentPaymentCardReflection.Descriptor, global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, global::HOLMS.Types.Folio.FolioIndicatorReflection.Descriptor, global::HOLMS.Types.Folio.GroupBookingFolioStateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostChargesResult), typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentResult), typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentResult), typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostChargesResponse), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostChargesResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentResponse), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentResponse), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentRequest.Parser, new[]{ "Booking", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcCardAuthorizationFromTokenRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcCardAuthorizationFromTokenRequest.Parser, new[]{ "Booking", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest.Parser, new[]{ "Booking", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest.Parser, new[]{ "Booking", "Card", "Amount", "Purpose" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentResponse), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentRequest.Parser, new[]{ "Booking", "Sale", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentRequest.Parser, new[]{ "AmountPaid", "Booking" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostLodgingChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostLodgingChargeCorrectionRequest.Parser, new[]{ "Booking", "Description", "AdjustmentSubtotal", "AdjustmentChargedAgainstGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest.Parser, new[]{ "Booking", "IncidentalItem", "Description", "AdjustmentSubtotal", "AdjustmentChargedAgainstGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostMiscChargeCorrectionRequest), global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostMiscChargeCorrectionRequest.Parser, new[]{ "Booking", "Description", "AdjustmentSubtotal", "AdjustmentChargedAgainstGroup" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GroupBookingFolioSvcPostChargesResult {
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CHARGES_RESULT_OK")] Ok = 0,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CHARGES_RESULT_MISSING_HOUSE_ACCOUNT")] MissingHouseAccount = 1,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CHARGES_RESULT_MISSING_RESERVATION")] MissingReservation = 2,
  }

  public enum GroupBookingFolioSvcPostCashPaymentResult {
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CASH_PAYMENT_OK")] GroupBookingFolioSvcPostCashPaymentOk = 0,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CASH_PAYMENT_MISSING_HOUSE_ACCOUNT")] GroupBookingFolioSvcPostCashPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CASH_PAYMENT_INVALID_AMOUNT")] GroupBookingFolioSvcPostCashPaymentInvalidAmount = 2,
  }

  public enum GroupBookingFolioSvcPostCheckPaymentResult {
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CHECK_PAYMENT_OK")] GroupBookingFolioSvcPostCheckPaymentOk = 0,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CHECK_PAYMENT_MISSING_HOUSE_ACCOUNT")] GroupBookingFolioSvcPostCheckPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CHECK_PAYMENT_INVALID_AMOUNT")] GroupBookingFolioSvcPostCheckPaymentInvalidAmount = 2,
  }

  public enum GroupBookingFolioSvcPostCardPaymentResult {
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CARD_PAYMENT_OK")] GroupBookingFolioSvcPostCardPaymentOk = 0,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CARD_PAYMENT_MISSING_HOUSE_ACCOUNT")] GroupBookingFolioSvcPostCardPaymentMissingHouseAccount = 1,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CARD_PAYMENT_MISSING_ASSET_ACCOUNT")] GroupBookingFolioSvcPostCardPaymentMissingAssetAccount = 2,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CARD_PAYMENT_INVALID_AMOUNT")] GroupBookingFolioSvcPostCardPaymentInvalidAmount = 3,
    [pbr::OriginalName("GROUP_BOOKING_FOLIO_SVC_POST_CARD_PAYMENT_AUTHORIZATION_UNAVAILABLE")] GroupBookingFolioSvcPostCardPaymentAuthorizationUnavailable = 4,
  }

  #endregion

  #region Messages
  public sealed partial class GroupBookingFolioSvcPostChargesResponse : pb::IMessage<GroupBookingFolioSvcPostChargesResponse> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostChargesResponse> _parser = new pb::MessageParser<GroupBookingFolioSvcPostChargesResponse>(() => new GroupBookingFolioSvcPostChargesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostChargesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostChargesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostChargesResponse(GroupBookingFolioSvcPostChargesResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostChargesResponse Clone() {
      return new GroupBookingFolioSvcPostChargesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostChargesResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostChargesResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostChargesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostChargesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostChargesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostChargesResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostCashPaymentResponse : pb::IMessage<GroupBookingFolioSvcPostCashPaymentResponse> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostCashPaymentResponse> _parser = new pb::MessageParser<GroupBookingFolioSvcPostCashPaymentResponse>(() => new GroupBookingFolioSvcPostCashPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostCashPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCashPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCashPaymentResponse(GroupBookingFolioSvcPostCashPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCashPaymentResponse Clone() {
      return new GroupBookingFolioSvcPostCashPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostCashPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostCashPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostCashPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCashPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostCheckPaymentResponse : pb::IMessage<GroupBookingFolioSvcPostCheckPaymentResponse> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostCheckPaymentResponse> _parser = new pb::MessageParser<GroupBookingFolioSvcPostCheckPaymentResponse>(() => new GroupBookingFolioSvcPostCheckPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostCheckPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCheckPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCheckPaymentResponse(GroupBookingFolioSvcPostCheckPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCheckPaymentResponse Clone() {
      return new GroupBookingFolioSvcPostCheckPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostCheckPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostCheckPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostCheckPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCheckPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostCheckPaymentRequest : pb::IMessage<GroupBookingFolioSvcPostCheckPaymentRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostCheckPaymentRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcPostCheckPaymentRequest>(() => new GroupBookingFolioSvcPostCheckPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostCheckPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCheckPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCheckPaymentRequest(GroupBookingFolioSvcPostCheckPaymentRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCheckPaymentRequest Clone() {
      return new GroupBookingFolioSvcPostCheckPaymentRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostCheckPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostCheckPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostCheckPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcCardAuthorizationFromTokenRequest : pb::IMessage<GroupBookingFolioSvcCardAuthorizationFromTokenRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromTokenRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromTokenRequest>(() => new GroupBookingFolioSvcCardAuthorizationFromTokenRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromTokenRequest(GroupBookingFolioSvcCardAuthorizationFromTokenRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromTokenRequest Clone() {
      return new GroupBookingFolioSvcCardAuthorizationFromTokenRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcCardAuthorizationFromTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcCardAuthorizationFromTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcCardAuthorizationFromTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.GuestPaymentCardIndicator();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest : pb::IMessage<GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest>(() => new GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest(GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest Clone() {
      return new GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcCardAuthorizationFromPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 26: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest : pb::IMessage<GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest>(() => new GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest(GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      Purpose = other.purpose_ != null ? other.Purpose.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest Clone() {
      return new GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.NotPresentPaymentCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.NotPresentPaymentCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CardSalePurpose purpose_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Purpose, other.Purpose)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (purpose_ != null) hash ^= Purpose.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (purpose_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (purpose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Purpose);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcCardAuthorizationFromNotPresentCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.purpose_ != null) {
        if (purpose_ == null) {
          purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
        }
        Purpose.MergeFrom(other.Purpose);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Money.Cards.NotPresentPaymentCard();
            }
            input.ReadMessage(card_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (purpose_ == null) {
              purpose_ = new global::HOLMS.Types.Money.Cards.CardSalePurpose();
            }
            input.ReadMessage(purpose_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostCardPaymentResponse : pb::IMessage<GroupBookingFolioSvcPostCardPaymentResponse> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostCardPaymentResponse> _parser = new pb::MessageParser<GroupBookingFolioSvcPostCardPaymentResponse>(() => new GroupBookingFolioSvcPostCardPaymentResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostCardPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCardPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCardPaymentResponse(GroupBookingFolioSvcPostCardPaymentResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCardPaymentResponse Clone() {
      return new GroupBookingFolioSvcPostCardPaymentResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostCardPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostCardPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostCardPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcPostCardPaymentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostCardPaymentRequest : pb::IMessage<GroupBookingFolioSvcPostCardPaymentRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostCardPaymentRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcPostCardPaymentRequest>(() => new GroupBookingFolioSvcPostCardPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostCardPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCardPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCardPaymentRequest(GroupBookingFolioSvcPostCardPaymentRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      Sale = other.sale_ != null ? other.Sale.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCardPaymentRequest Clone() {
      return new GroupBookingFolioSvcPostCardPaymentRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostCardPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostCardPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(Sale, other.Sale)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (sale_ != null) hash ^= Sale.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (sale_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sale);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (sale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostCardPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.sale_ != null) {
        if (sale_ == null) {
          sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
        }
        Sale.MergeFrom(other.Sale);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (sale_ == null) {
              sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
            }
            input.ReadMessage(sale_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostCashPaymentRequest : pb::IMessage<GroupBookingFolioSvcPostCashPaymentRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostCashPaymentRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcPostCashPaymentRequest>(() => new GroupBookingFolioSvcPostCashPaymentRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostCashPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCashPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCashPaymentRequest(GroupBookingFolioSvcPostCashPaymentRequest other) : this() {
      AmountPaid = other.amountPaid_ != null ? other.AmountPaid.Clone() : null;
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostCashPaymentRequest Clone() {
      return new GroupBookingFolioSvcPostCashPaymentRequest(this);
    }

    /// <summary>Field number for the "amount_paid" field.</summary>
    public const int AmountPaidFieldNumber = 1;
    private global::HOLMS.Types.Primitive.MonetaryAmount amountPaid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AmountPaid {
      get { return amountPaid_; }
      set {
        amountPaid_ = value;
      }
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostCashPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostCashPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AmountPaid, other.AmountPaid)) return false;
      if (!object.Equals(Booking, other.Booking)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (amountPaid_ != null) hash ^= AmountPaid.GetHashCode();
      if (booking_ != null) hash ^= Booking.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (amountPaid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AmountPaid);
      }
      if (booking_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Booking);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (amountPaid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountPaid);
      }
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostCashPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.amountPaid_ != null) {
        if (amountPaid_ == null) {
          amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AmountPaid.MergeFrom(other.AmountPaid);
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (amountPaid_ == null) {
              amountPaid_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amountPaid_);
            break;
          }
          case 18: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostLodgingChargeCorrectionRequest : pb::IMessage<GroupBookingFolioSvcPostLodgingChargeCorrectionRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostLodgingChargeCorrectionRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcPostLodgingChargeCorrectionRequest>(() => new GroupBookingFolioSvcPostLodgingChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostLodgingChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostLodgingChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostLodgingChargeCorrectionRequest(GroupBookingFolioSvcPostLodgingChargeCorrectionRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentChargedAgainstGroup_ = other.adjustmentChargedAgainstGroup_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostLodgingChargeCorrectionRequest Clone() {
      return new GroupBookingFolioSvcPostLodgingChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_charged_against_group" field.</summary>
    public const int AdjustmentChargedAgainstGroupFieldNumber = 4;
    private bool adjustmentChargedAgainstGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentChargedAgainstGroup {
      get { return adjustmentChargedAgainstGroup_; }
      set {
        adjustmentChargedAgainstGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostLodgingChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentChargedAgainstGroup != other.AdjustmentChargedAgainstGroup) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentChargedAgainstGroup != false) hash ^= AdjustmentChargedAgainstGroup.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentChargedAgainstGroup != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentChargedAgainstGroup);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentChargedAgainstGroup != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostLodgingChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentChargedAgainstGroup != false) {
        AdjustmentChargedAgainstGroup = other.AdjustmentChargedAgainstGroup;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentChargedAgainstGroup = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest : pb::IMessage<GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest>(() => new GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest(GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      IncidentalItem = other.incidentalItem_ != null ? other.IncidentalItem.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentChargedAgainstGroup_ = other.adjustmentChargedAgainstGroup_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest Clone() {
      return new GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "incidental_item" field.</summary>
    public const int IncidentalItemFieldNumber = 2;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator incidentalItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator IncidentalItem {
      get { return incidentalItem_; }
      set {
        incidentalItem_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_charged_against_group" field.</summary>
    public const int AdjustmentChargedAgainstGroupFieldNumber = 5;
    private bool adjustmentChargedAgainstGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentChargedAgainstGroup {
      get { return adjustmentChargedAgainstGroup_; }
      set {
        adjustmentChargedAgainstGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (!object.Equals(IncidentalItem, other.IncidentalItem)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentChargedAgainstGroup != other.AdjustmentChargedAgainstGroup) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (incidentalItem_ != null) hash ^= IncidentalItem.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentChargedAgainstGroup != false) hash ^= AdjustmentChargedAgainstGroup.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (incidentalItem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IncidentalItem);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentChargedAgainstGroup != false) {
        output.WriteRawTag(40);
        output.WriteBool(AdjustmentChargedAgainstGroup);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (incidentalItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalItem);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentChargedAgainstGroup != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostIncidentalChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.incidentalItem_ != null) {
        if (incidentalItem_ == null) {
          incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        IncidentalItem.MergeFrom(other.IncidentalItem);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentChargedAgainstGroup != false) {
        AdjustmentChargedAgainstGroup = other.AdjustmentChargedAgainstGroup;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            if (incidentalItem_ == null) {
              incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(incidentalItem_);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 40: {
            AdjustmentChargedAgainstGroup = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupBookingFolioSvcPostMiscChargeCorrectionRequest : pb::IMessage<GroupBookingFolioSvcPostMiscChargeCorrectionRequest> {
    private static readonly pb::MessageParser<GroupBookingFolioSvcPostMiscChargeCorrectionRequest> _parser = new pb::MessageParser<GroupBookingFolioSvcPostMiscChargeCorrectionRequest>(() => new GroupBookingFolioSvcPostMiscChargeCorrectionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupBookingFolioSvcPostMiscChargeCorrectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.GroupBookingFolioSvcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostMiscChargeCorrectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostMiscChargeCorrectionRequest(GroupBookingFolioSvcPostMiscChargeCorrectionRequest other) : this() {
      Booking = other.booking_ != null ? other.Booking.Clone() : null;
      description_ = other.description_;
      AdjustmentSubtotal = other.adjustmentSubtotal_ != null ? other.AdjustmentSubtotal.Clone() : null;
      adjustmentChargedAgainstGroup_ = other.adjustmentChargedAgainstGroup_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupBookingFolioSvcPostMiscChargeCorrectionRequest Clone() {
      return new GroupBookingFolioSvcPostMiscChargeCorrectionRequest(this);
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adjustment_subtotal" field.</summary>
    public const int AdjustmentSubtotalFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount adjustmentSubtotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AdjustmentSubtotal {
      get { return adjustmentSubtotal_; }
      set {
        adjustmentSubtotal_ = value;
      }
    }

    /// <summary>Field number for the "adjustment_charged_against_group" field.</summary>
    public const int AdjustmentChargedAgainstGroupFieldNumber = 4;
    private bool adjustmentChargedAgainstGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AdjustmentChargedAgainstGroup {
      get { return adjustmentChargedAgainstGroup_; }
      set {
        adjustmentChargedAgainstGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupBookingFolioSvcPostMiscChargeCorrectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupBookingFolioSvcPostMiscChargeCorrectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Booking, other.Booking)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(AdjustmentSubtotal, other.AdjustmentSubtotal)) return false;
      if (AdjustmentChargedAgainstGroup != other.AdjustmentChargedAgainstGroup) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (adjustmentSubtotal_ != null) hash ^= AdjustmentSubtotal.GetHashCode();
      if (AdjustmentChargedAgainstGroup != false) hash ^= AdjustmentChargedAgainstGroup.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (booking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Booking);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (adjustmentSubtotal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AdjustmentSubtotal);
      }
      if (AdjustmentChargedAgainstGroup != false) {
        output.WriteRawTag(32);
        output.WriteBool(AdjustmentChargedAgainstGroup);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (adjustmentSubtotal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AdjustmentSubtotal);
      }
      if (AdjustmentChargedAgainstGroup != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupBookingFolioSvcPostMiscChargeCorrectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.booking_ != null) {
        if (booking_ == null) {
          booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.adjustmentSubtotal_ != null) {
        if (adjustmentSubtotal_ == null) {
          adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AdjustmentSubtotal.MergeFrom(other.AdjustmentSubtotal);
      }
      if (other.AdjustmentChargedAgainstGroup != false) {
        AdjustmentChargedAgainstGroup = other.AdjustmentChargedAgainstGroup;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (booking_ == null) {
              booking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(booking_);
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (adjustmentSubtotal_ == null) {
              adjustmentSubtotal_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(adjustmentSubtotal_);
            break;
          }
          case 32: {
            AdjustmentChargedAgainstGroup = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
