// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/folio_atomic_charge.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio {

  /// <summary>Holder for reflection information generated from folio/folio_atomic_charge.proto</summary>
  public static partial class FolioAtomicChargeReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/folio_atomic_charge.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FolioAtomicChargeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9mb2xpby9mb2xpb19hdG9taWNfY2hhcmdlLnByb3RvEhFob2xtcy50eXBl",
            "cy5mb2xpbxoeZm9saW8vY2hhcmdlX2NyZWRpdF90eXBlLnByb3RvGhtmb2xp",
            "by9mb2xpb19pbmRpY2F0b3IucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1l",
            "c3RhbXAucHJvdG8aIGlhbS9zdGFmZl9tZW1iZXJfaW5kaWNhdG9yLnByb3Rv",
            "Gh9wcmltaXRpdmUvbW9uZXRhcnlfYW1vdW50LnByb3RvGh1wcmltaXRpdmUv",
            "cGJfbG9jYWxfZGF0ZS5wcm90bxo3c3VwcGx5L2luY2lkZW50YWxfaXRlbXMv",
            "aW5jaWRlbnRhbF9pdGVtX2luZGljYXRvci5wcm90bxoUcHJpbWl0aXZlL3V1",
            "aWQucHJvdG8aGmZvbGlvL3RheF9hc3Nlc3NtZW50LnByb3RvIosGChFGb2xp",
            "b0F0b21pY0NoYXJnZRI1CgZhbW91bnQYASABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQSEQoJbmFycmF0aW9uGAIgASgJEj8K",
            "EmNoYXJnZV9jcmVkaXRfdHlwZRgDIAEoDjIjLmhvbG1zLnR5cGVzLmZvbGlv",
            "LkNoYXJnZUNyZWRpdFR5cGUSQQoVZWZmZWN0aXZlX2Zvcl9vcHNkYXRlGAQg",
            "ASgLMiIuaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiTG9jYWxEYXRlEjYKEmVm",
            "ZmVjdGl2ZV9hdF9jbG9jaxgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASVQoPaW5jaWRlbnRhbF9pdGVtGAYgASgLMjwuaG9sbXMudHlwZXMu",
            "c3VwcGx5LmluY2lkZW50YWxfaXRlbXMuSW5jaWRlbnRhbEl0ZW1JbmRpY2F0",
            "b3ISNgoLaW5jdXJyZWRfYnkYByABKAsyIS5ob2xtcy50eXBlcy5mb2xpby5G",
            "b2xpb0luZGljYXRvchJPChFpc3N1YW5jZV9zY2hlZHVsZRgIIAEoDjI0Lmhv",
            "bG1zLnR5cGVzLmZvbGlvLkZvbGlvQXRvbWljQ2hhcmdlSXNzdWFuY2VTY2hl",
            "ZHVsZRI5CgplbnRlcmVkX2J5GAkgASgLMiUuaG9sbXMudHlwZXMuaWFtLlN0",
            "YWZmTWVtYmVySW5kaWNhdG9yEicKAmlkGAogASgLMhsuaG9sbXMudHlwZXMu",
            "cHJpbWl0aXZlLlV1aWQSNAoFdGF4ZXMYCyABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnQSMwoEZmVlcxgMIAEoCzIlLmhvbG1z",
            "LnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBJBChdjdXJyZW50X3Rh",
            "eF9hc3Nlc3NtZW50cxgNIAMoCzIgLmhvbG1zLnR5cGVzLmZvbGlvLlRheEFz",
            "c2Vzc21lbnQqbwohRm9saW9BdG9taWNDaGFyZ2VJc3N1YW5jZVNjaGVkdWxl",
            "EiUKIUlNUExFTUVOVEFUSU9OX1NDSEVEVUxFX0lNTUVESUFURRAAEiMKH0lN",
            "UExFTUVOVEFUSU9OX1NDSEVEVUxFX1BMQU5ORUQQAUIUqgIRSE9MTVMuVHlw",
            "ZXMuRm9saW9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Folio.ChargeCreditTypeReflection.Descriptor, global::HOLMS.Types.Folio.FolioIndicatorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.IAM.StaffMemberIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Primitive.PbLocalDateReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.UuidReflection.Descriptor, global::HOLMS.Types.Folio.TaxAssessmentReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Folio.FolioAtomicChargeIssuanceSchedule), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.FolioAtomicCharge), global::HOLMS.Types.Folio.FolioAtomicCharge.Parser, new[]{ "Amount", "Narration", "ChargeCreditType", "EffectiveForOpsdate", "EffectiveAtClock", "IncidentalItem", "IncurredBy", "IssuanceSchedule", "EnteredBy", "Id", "Taxes", "Fees", "CurrentTaxAssessments" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum FolioAtomicChargeIssuanceSchedule {
    [pbr::OriginalName("IMPLEMENTATION_SCHEDULE_IMMEDIATE")] ImplementationScheduleImmediate = 0,
    [pbr::OriginalName("IMPLEMENTATION_SCHEDULE_PLANNED")] ImplementationSchedulePlanned = 1,
  }

  #endregion

  #region Messages
  public sealed partial class FolioAtomicCharge : pb::IMessage<FolioAtomicCharge> {
    private static readonly pb::MessageParser<FolioAtomicCharge> _parser = new pb::MessageParser<FolioAtomicCharge>(() => new FolioAtomicCharge());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolioAtomicCharge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.FolioAtomicChargeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioAtomicCharge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioAtomicCharge(FolioAtomicCharge other) : this() {
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      narration_ = other.narration_;
      chargeCreditType_ = other.chargeCreditType_;
      EffectiveForOpsdate = other.effectiveForOpsdate_ != null ? other.EffectiveForOpsdate.Clone() : null;
      EffectiveAtClock = other.effectiveAtClock_ != null ? other.EffectiveAtClock.Clone() : null;
      IncidentalItem = other.incidentalItem_ != null ? other.IncidentalItem.Clone() : null;
      IncurredBy = other.incurredBy_ != null ? other.IncurredBy.Clone() : null;
      issuanceSchedule_ = other.issuanceSchedule_;
      EnteredBy = other.enteredBy_ != null ? other.EnteredBy.Clone() : null;
      Id = other.id_ != null ? other.Id.Clone() : null;
      Taxes = other.taxes_ != null ? other.Taxes.Clone() : null;
      Fees = other.fees_ != null ? other.Fees.Clone() : null;
      currentTaxAssessments_ = other.currentTaxAssessments_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioAtomicCharge Clone() {
      return new FolioAtomicCharge(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "narration" field.</summary>
    public const int NarrationFieldNumber = 2;
    private string narration_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Narration {
      get { return narration_; }
      set {
        narration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "charge_credit_type" field.</summary>
    public const int ChargeCreditTypeFieldNumber = 3;
    private global::HOLMS.Types.Folio.ChargeCreditType chargeCreditType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.ChargeCreditType ChargeCreditType {
      get { return chargeCreditType_; }
      set {
        chargeCreditType_ = value;
      }
    }

    /// <summary>Field number for the "effective_for_opsdate" field.</summary>
    public const int EffectiveForOpsdateFieldNumber = 4;
    private global::HOLMS.Types.Primitive.PbLocalDate effectiveForOpsdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate EffectiveForOpsdate {
      get { return effectiveForOpsdate_; }
      set {
        effectiveForOpsdate_ = value;
      }
    }

    /// <summary>Field number for the "effective_at_clock" field.</summary>
    public const int EffectiveAtClockFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp effectiveAtClock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EffectiveAtClock {
      get { return effectiveAtClock_; }
      set {
        effectiveAtClock_ = value;
      }
    }

    /// <summary>Field number for the "incidental_item" field.</summary>
    public const int IncidentalItemFieldNumber = 6;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator incidentalItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator IncidentalItem {
      get { return incidentalItem_; }
      set {
        incidentalItem_ = value;
      }
    }

    /// <summary>Field number for the "incurred_by" field.</summary>
    public const int IncurredByFieldNumber = 7;
    private global::HOLMS.Types.Folio.FolioIndicator incurredBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FolioIndicator IncurredBy {
      get { return incurredBy_; }
      set {
        incurredBy_ = value;
      }
    }

    /// <summary>Field number for the "issuance_schedule" field.</summary>
    public const int IssuanceScheduleFieldNumber = 8;
    private global::HOLMS.Types.Folio.FolioAtomicChargeIssuanceSchedule issuanceSchedule_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FolioAtomicChargeIssuanceSchedule IssuanceSchedule {
      get { return issuanceSchedule_; }
      set {
        issuanceSchedule_ = value;
      }
    }

    /// <summary>Field number for the "entered_by" field.</summary>
    public const int EnteredByFieldNumber = 9;
    private global::HOLMS.Types.IAM.StaffMemberIndicator enteredBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.StaffMemberIndicator EnteredBy {
      get { return enteredBy_; }
      set {
        enteredBy_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 10;
    private global::HOLMS.Types.Primitive.Uuid id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.Uuid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "taxes" field.</summary>
    public const int TaxesFieldNumber = 11;
    private global::HOLMS.Types.Primitive.MonetaryAmount taxes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Taxes {
      get { return taxes_; }
      set {
        taxes_ = value;
      }
    }

    /// <summary>Field number for the "fees" field.</summary>
    public const int FeesFieldNumber = 12;
    private global::HOLMS.Types.Primitive.MonetaryAmount fees_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Fees {
      get { return fees_; }
      set {
        fees_ = value;
      }
    }

    /// <summary>Field number for the "current_tax_assessments" field.</summary>
    public const int CurrentTaxAssessmentsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.TaxAssessment> _repeated_currentTaxAssessments_codec
        = pb::FieldCodec.ForMessage(106, global::HOLMS.Types.Folio.TaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> currentTaxAssessments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.TaxAssessment> CurrentTaxAssessments {
      get { return currentTaxAssessments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolioAtomicCharge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolioAtomicCharge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Narration != other.Narration) return false;
      if (ChargeCreditType != other.ChargeCreditType) return false;
      if (!object.Equals(EffectiveForOpsdate, other.EffectiveForOpsdate)) return false;
      if (!object.Equals(EffectiveAtClock, other.EffectiveAtClock)) return false;
      if (!object.Equals(IncidentalItem, other.IncidentalItem)) return false;
      if (!object.Equals(IncurredBy, other.IncurredBy)) return false;
      if (IssuanceSchedule != other.IssuanceSchedule) return false;
      if (!object.Equals(EnteredBy, other.EnteredBy)) return false;
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Taxes, other.Taxes)) return false;
      if (!object.Equals(Fees, other.Fees)) return false;
      if(!currentTaxAssessments_.Equals(other.currentTaxAssessments_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Narration.Length != 0) hash ^= Narration.GetHashCode();
      if (ChargeCreditType != 0) hash ^= ChargeCreditType.GetHashCode();
      if (effectiveForOpsdate_ != null) hash ^= EffectiveForOpsdate.GetHashCode();
      if (effectiveAtClock_ != null) hash ^= EffectiveAtClock.GetHashCode();
      if (incidentalItem_ != null) hash ^= IncidentalItem.GetHashCode();
      if (incurredBy_ != null) hash ^= IncurredBy.GetHashCode();
      if (IssuanceSchedule != 0) hash ^= IssuanceSchedule.GetHashCode();
      if (enteredBy_ != null) hash ^= EnteredBy.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (taxes_ != null) hash ^= Taxes.GetHashCode();
      if (fees_ != null) hash ^= Fees.GetHashCode();
      hash ^= currentTaxAssessments_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (amount_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Amount);
      }
      if (Narration.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Narration);
      }
      if (ChargeCreditType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ChargeCreditType);
      }
      if (effectiveForOpsdate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EffectiveForOpsdate);
      }
      if (effectiveAtClock_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EffectiveAtClock);
      }
      if (incidentalItem_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(IncidentalItem);
      }
      if (incurredBy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(IncurredBy);
      }
      if (IssuanceSchedule != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) IssuanceSchedule);
      }
      if (enteredBy_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EnteredBy);
      }
      if (id_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Id);
      }
      if (taxes_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Taxes);
      }
      if (fees_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Fees);
      }
      currentTaxAssessments_.WriteTo(output, _repeated_currentTaxAssessments_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Narration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Narration);
      }
      if (ChargeCreditType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChargeCreditType);
      }
      if (effectiveForOpsdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectiveForOpsdate);
      }
      if (effectiveAtClock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectiveAtClock);
      }
      if (incidentalItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncidentalItem);
      }
      if (incurredBy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IncurredBy);
      }
      if (IssuanceSchedule != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IssuanceSchedule);
      }
      if (enteredBy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnteredBy);
      }
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (taxes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Taxes);
      }
      if (fees_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fees);
      }
      size += currentTaxAssessments_.CalculateSize(_repeated_currentTaxAssessments_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolioAtomicCharge other) {
      if (other == null) {
        return;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Narration.Length != 0) {
        Narration = other.Narration;
      }
      if (other.ChargeCreditType != 0) {
        ChargeCreditType = other.ChargeCreditType;
      }
      if (other.effectiveForOpsdate_ != null) {
        if (effectiveForOpsdate_ == null) {
          effectiveForOpsdate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        EffectiveForOpsdate.MergeFrom(other.EffectiveForOpsdate);
      }
      if (other.effectiveAtClock_ != null) {
        if (effectiveAtClock_ == null) {
          effectiveAtClock_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EffectiveAtClock.MergeFrom(other.EffectiveAtClock);
      }
      if (other.incidentalItem_ != null) {
        if (incidentalItem_ == null) {
          incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        IncidentalItem.MergeFrom(other.IncidentalItem);
      }
      if (other.incurredBy_ != null) {
        if (incurredBy_ == null) {
          incurredBy_ = new global::HOLMS.Types.Folio.FolioIndicator();
        }
        IncurredBy.MergeFrom(other.IncurredBy);
      }
      if (other.IssuanceSchedule != 0) {
        IssuanceSchedule = other.IssuanceSchedule;
      }
      if (other.enteredBy_ != null) {
        if (enteredBy_ == null) {
          enteredBy_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
        }
        EnteredBy.MergeFrom(other.EnteredBy);
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::HOLMS.Types.Primitive.Uuid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.taxes_ != null) {
        if (taxes_ == null) {
          taxes_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Taxes.MergeFrom(other.Taxes);
      }
      if (other.fees_ != null) {
        if (fees_ == null) {
          fees_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Fees.MergeFrom(other.Fees);
      }
      currentTaxAssessments_.Add(other.currentTaxAssessments_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 18: {
            Narration = input.ReadString();
            break;
          }
          case 24: {
            chargeCreditType_ = (global::HOLMS.Types.Folio.ChargeCreditType) input.ReadEnum();
            break;
          }
          case 34: {
            if (effectiveForOpsdate_ == null) {
              effectiveForOpsdate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(effectiveForOpsdate_);
            break;
          }
          case 42: {
            if (effectiveAtClock_ == null) {
              effectiveAtClock_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(effectiveAtClock_);
            break;
          }
          case 50: {
            if (incidentalItem_ == null) {
              incidentalItem_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(incidentalItem_);
            break;
          }
          case 58: {
            if (incurredBy_ == null) {
              incurredBy_ = new global::HOLMS.Types.Folio.FolioIndicator();
            }
            input.ReadMessage(incurredBy_);
            break;
          }
          case 64: {
            issuanceSchedule_ = (global::HOLMS.Types.Folio.FolioAtomicChargeIssuanceSchedule) input.ReadEnum();
            break;
          }
          case 74: {
            if (enteredBy_ == null) {
              enteredBy_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
            }
            input.ReadMessage(enteredBy_);
            break;
          }
          case 82: {
            if (id_ == null) {
              id_ = new global::HOLMS.Types.Primitive.Uuid();
            }
            input.ReadMessage(id_);
            break;
          }
          case 90: {
            if (taxes_ == null) {
              taxes_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(taxes_);
            break;
          }
          case 98: {
            if (fees_ == null) {
              fees_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(fees_);
            break;
          }
          case 106: {
            currentTaxAssessments_.AddEntriesFrom(input, _repeated_currentTaxAssessments_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
