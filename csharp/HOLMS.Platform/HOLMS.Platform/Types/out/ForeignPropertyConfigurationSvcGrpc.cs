// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenancy_config/rpc/foreign_property_configuration_svc.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace HOLMS.Types.TenancyConfig.RPC {
  public static class ForeignPropertyConfigurationSvc
  {
    static readonly string __ServiceName = "holms.types.tenancy_config.rpc.ForeignPropertyConfigurationSvc";

    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties> __Marshaller_AllForeignProperties = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.TenancyConfig.ForeignProperty> __Marshaller_ForeignProperty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.ForeignProperty.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator> __Marshaller_ForeignPropertyIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator.Parser.ParseFrom);

    static readonly Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties> __Method_Get = new Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties>(
        MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_Empty,
        __Marshaller_AllForeignProperties);

    static readonly Method<global::HOLMS.Types.TenancyConfig.ForeignProperty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Create = new Method<global::HOLMS.Types.TenancyConfig.ForeignProperty, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_ForeignProperty,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.TenancyConfig.ForeignProperty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Update = new Method<global::HOLMS.Types.TenancyConfig.ForeignProperty, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_ForeignProperty,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Remove = new Method<global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Remove",
        __Marshaller_ForeignPropertyIndicator,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.TenancyConfig.RPC.ForeignPropertyConfigurationSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ForeignPropertyConfigurationSvc</summary>
    public abstract class ForeignPropertyConfigurationSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties> Get(global::Google.Protobuf.WellKnownTypes.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Create(global::HOLMS.Types.TenancyConfig.ForeignProperty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Update(global::HOLMS.Types.TenancyConfig.ForeignProperty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Remove(global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ForeignPropertyConfigurationSvc</summary>
    public class ForeignPropertyConfigurationSvcClient : ClientBase<ForeignPropertyConfigurationSvcClient>
    {
      /// <summary>Creates a new client for ForeignPropertyConfigurationSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ForeignPropertyConfigurationSvcClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ForeignPropertyConfigurationSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ForeignPropertyConfigurationSvcClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ForeignPropertyConfigurationSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ForeignPropertyConfigurationSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties Get(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Get(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties Get(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties> GetAsync(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.AllForeignProperties> GetAsync(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Create(global::HOLMS.Types.TenancyConfig.ForeignProperty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Create(global::HOLMS.Types.TenancyConfig.ForeignProperty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CreateAsync(global::HOLMS.Types.TenancyConfig.ForeignProperty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CreateAsync(global::HOLMS.Types.TenancyConfig.ForeignProperty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Update(global::HOLMS.Types.TenancyConfig.ForeignProperty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Update(global::HOLMS.Types.TenancyConfig.ForeignProperty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateAsync(global::HOLMS.Types.TenancyConfig.ForeignProperty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateAsync(global::HOLMS.Types.TenancyConfig.ForeignProperty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Remove(global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Remove(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty Remove(global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Remove, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveAsync(global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveAsync(global::HOLMS.Types.TenancyConfig.Indicators.ForeignPropertyIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Remove, null, options, request);
      }
      protected override ForeignPropertyConfigurationSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ForeignPropertyConfigurationSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(ForeignPropertyConfigurationSvcBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Remove, serviceImpl.Remove).Build();
    }

  }
}
#endregion
