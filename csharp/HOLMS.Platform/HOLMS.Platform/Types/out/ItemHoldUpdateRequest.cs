// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/incidental_items/item_hold_update_request.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.IncidentalItems {

  /// <summary>Holder for reflection information generated from supply/incidental_items/item_hold_update_request.proto</summary>
  public static partial class ItemHoldUpdateRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/incidental_items/item_hold_update_request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemHoldUpdateRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjZzdXBwbHkvaW5jaWRlbnRhbF9pdGVtcy9pdGVtX2hvbGRfdXBkYXRlX3Jl",
            "cXVlc3QucHJvdG8SI2hvbG1zLnR5cGVzLnN1cHBseS5pbmNpZGVudGFsX2l0",
            "ZW1zGipwcmltaXRpdmUvcGJfaW5jbHVzaXZlX29wc2RhdGVfcmFuZ2UucHJv",
            "dG8aLmJvb2tpbmcvaW5kaWNhdG9ycy9yZXNlcnZhdGlvbl9pbmRpY2F0b3Iu",
            "cHJvdG8aN3N1cHBseS9pbmNpZGVudGFsX2l0ZW1zL2luY2lkZW50YWxfaXRl",
            "bV9pbmRpY2F0b3IucHJvdG8ikwMKFUl0ZW1Ib2xkVXBkYXRlUmVxdWVzdBJK",
            "CgRpdGVtGAEgASgLMjwuaG9sbXMudHlwZXMuc3VwcGx5LmluY2lkZW50YWxf",
            "aXRlbXMuSW5jaWRlbnRhbEl0ZW1JbmRpY2F0b3ISRwoPcHJldl9kYXRlX3Jh",
            "bmdlGAIgASgLMi4uaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiSW5jbHVzaXZl",
            "T3BzZGF0ZVJhbmdlEh8KF3ByZXZfcmVxdWVzdGVkX3F1YW50aXR5GAMgASgN",
            "EkYKDm5ld19kYXRlX3JhbmdlGAQgASgLMi4uaG9sbXMudHlwZXMucHJpbWl0",
            "aXZlLlBiSW5jbHVzaXZlT3BzZGF0ZVJhbmdlEh4KFm5ld19yZXF1ZXN0ZWRf",
            "cXVhbnRpdHkYBSABKA0SXAoeYXNzb2NpYXRlZF9sb2RnaW5nX3Jlc2VydmF0",
            "aW9uGAYgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJl",
            "c2VydmF0aW9uSW5kaWNhdG9yQj1aFnN1cHBseS9pbmNpZGVudGFsaXRlbXOq",
            "AiJIT0xNUy5UeXBlcy5TdXBwbHkuSW5jaWRlbnRhbEl0ZW1zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.PbInclusiveOpsdateRangeReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.IncidentalItems.ItemHoldUpdateRequest), global::HOLMS.Types.Supply.IncidentalItems.ItemHoldUpdateRequest.Parser, new[]{ "Item", "PrevDateRange", "PrevRequestedQuantity", "NewDateRange", "NewRequestedQuantity", "AssociatedLodgingReservation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ItemHoldUpdateRequest : pb::IMessage<ItemHoldUpdateRequest> {
    private static readonly pb::MessageParser<ItemHoldUpdateRequest> _parser = new pb::MessageParser<ItemHoldUpdateRequest>(() => new ItemHoldUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemHoldUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.IncidentalItems.ItemHoldUpdateRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemHoldUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemHoldUpdateRequest(ItemHoldUpdateRequest other) : this() {
      Item = other.item_ != null ? other.Item.Clone() : null;
      PrevDateRange = other.prevDateRange_ != null ? other.PrevDateRange.Clone() : null;
      prevRequestedQuantity_ = other.prevRequestedQuantity_;
      NewDateRange = other.newDateRange_ != null ? other.NewDateRange.Clone() : null;
      newRequestedQuantity_ = other.newRequestedQuantity_;
      AssociatedLodgingReservation = other.associatedLodgingReservation_ != null ? other.AssociatedLodgingReservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemHoldUpdateRequest Clone() {
      return new ItemHoldUpdateRequest(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "prev_date_range" field.</summary>
    public const int PrevDateRangeFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange prevDateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange PrevDateRange {
      get { return prevDateRange_; }
      set {
        prevDateRange_ = value;
      }
    }

    /// <summary>Field number for the "prev_requested_quantity" field.</summary>
    public const int PrevRequestedQuantityFieldNumber = 3;
    private uint prevRequestedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PrevRequestedQuantity {
      get { return prevRequestedQuantity_; }
      set {
        prevRequestedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "new_date_range" field.</summary>
    public const int NewDateRangeFieldNumber = 4;
    private global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange newDateRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange NewDateRange {
      get { return newDateRange_; }
      set {
        newDateRange_ = value;
      }
    }

    /// <summary>Field number for the "new_requested_quantity" field.</summary>
    public const int NewRequestedQuantityFieldNumber = 5;
    private uint newRequestedQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewRequestedQuantity {
      get { return newRequestedQuantity_; }
      set {
        newRequestedQuantity_ = value;
      }
    }

    /// <summary>Field number for the "associated_lodging_reservation" field.</summary>
    public const int AssociatedLodgingReservationFieldNumber = 6;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator associatedLodgingReservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator AssociatedLodgingReservation {
      get { return associatedLodgingReservation_; }
      set {
        associatedLodgingReservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemHoldUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemHoldUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(PrevDateRange, other.PrevDateRange)) return false;
      if (PrevRequestedQuantity != other.PrevRequestedQuantity) return false;
      if (!object.Equals(NewDateRange, other.NewDateRange)) return false;
      if (NewRequestedQuantity != other.NewRequestedQuantity) return false;
      if (!object.Equals(AssociatedLodgingReservation, other.AssociatedLodgingReservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (prevDateRange_ != null) hash ^= PrevDateRange.GetHashCode();
      if (PrevRequestedQuantity != 0) hash ^= PrevRequestedQuantity.GetHashCode();
      if (newDateRange_ != null) hash ^= NewDateRange.GetHashCode();
      if (NewRequestedQuantity != 0) hash ^= NewRequestedQuantity.GetHashCode();
      if (associatedLodgingReservation_ != null) hash ^= AssociatedLodgingReservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (prevDateRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PrevDateRange);
      }
      if (PrevRequestedQuantity != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PrevRequestedQuantity);
      }
      if (newDateRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NewDateRange);
      }
      if (NewRequestedQuantity != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(NewRequestedQuantity);
      }
      if (associatedLodgingReservation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AssociatedLodgingReservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (prevDateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrevDateRange);
      }
      if (PrevRequestedQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrevRequestedQuantity);
      }
      if (newDateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewDateRange);
      }
      if (NewRequestedQuantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewRequestedQuantity);
      }
      if (associatedLodgingReservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssociatedLodgingReservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemHoldUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.prevDateRange_ != null) {
        if (prevDateRange_ == null) {
          prevDateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        PrevDateRange.MergeFrom(other.PrevDateRange);
      }
      if (other.PrevRequestedQuantity != 0) {
        PrevRequestedQuantity = other.PrevRequestedQuantity;
      }
      if (other.newDateRange_ != null) {
        if (newDateRange_ == null) {
          newDateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
        }
        NewDateRange.MergeFrom(other.NewDateRange);
      }
      if (other.NewRequestedQuantity != 0) {
        NewRequestedQuantity = other.NewRequestedQuantity;
      }
      if (other.associatedLodgingReservation_ != null) {
        if (associatedLodgingReservation_ == null) {
          associatedLodgingReservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        AssociatedLodgingReservation.MergeFrom(other.AssociatedLodgingReservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (item_ == null) {
              item_ = new global::HOLMS.Types.Supply.IncidentalItems.IncidentalItemIndicator();
            }
            input.ReadMessage(item_);
            break;
          }
          case 18: {
            if (prevDateRange_ == null) {
              prevDateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(prevDateRange_);
            break;
          }
          case 24: {
            PrevRequestedQuantity = input.ReadUInt32();
            break;
          }
          case 34: {
            if (newDateRange_ == null) {
              newDateRange_ = new global::HOLMS.Types.Primitive.PbInclusiveOpsdateRange();
            }
            input.ReadMessage(newDateRange_);
            break;
          }
          case 40: {
            NewRequestedQuantity = input.ReadUInt32();
            break;
          }
          case 50: {
            if (associatedLodgingReservation_ == null) {
              associatedLodgingReservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(associatedLodgingReservation_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
