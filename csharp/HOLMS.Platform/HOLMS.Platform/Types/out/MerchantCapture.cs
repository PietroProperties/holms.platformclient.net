// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/cards/merchant_capture.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Cards {

  /// <summary>Holder for reflection information generated from money/cards/merchant_capture.proto</summary>
  public static partial class MerchantCaptureReflection {

    #region Descriptor
    /// <summary>File descriptor for money/cards/merchant_capture.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MerchantCaptureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJtb25leS9jYXJkcy9tZXJjaGFudF9jYXB0dXJlLnByb3RvEhdob2xtcy50",
            "eXBlcy5tb25leS5jYXJkcxopbW9uZXkvY2FyZHMvY2FyZF9tZXJjaGFudF9p",
            "bmRpY2F0b3IucHJvdG8aKG1vbmV5L2NhcmRzL21lcmNoYW50X2F1dGhvcml6",
            "YXRpb24ucHJvdG8aLG1vbmV5L2NhcmRzL21lcmNoYW50X2NhcHR1cmVfaW5k",
            "aWNhdG9yLnByb3RvGh9wcmltaXRpdmUvbW9uZXRhcnlfYW1vdW50LnByb3Rv",
            "IoADCg9NZXJjaGFudENhcHR1cmUSRAoJZW50aXR5X2lkGAEgASgLMjEuaG9s",
            "bXMudHlwZXMubW9uZXkuY2FyZHMuTWVyY2hhbnRDYXB0dXJlSW5kaWNhdG9y",
            "EkMKC21lcmNoYW50X2lkGAIgASgLMi4uaG9sbXMudHlwZXMubW9uZXkuY2Fy",
            "ZHMuQ2FyZE1lcmNoYW50SW5kaWNhdG9yEjUKBmFtb3VudBgDIAEoCzIlLmhv",
            "bG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI2CgZzdGF0dXMY",
            "BCABKA4yJi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXB0dXJlU3RhdHVz",
            "EkUKDWF1dGhvcml6YXRpb24YBSABKAsyLi5ob2xtcy50eXBlcy5tb25leS5j",
            "YXJkcy5NZXJjaGFudEF1dGhvcml6YXRpb24SDgoGdHhuX2lkGAYgASgJEhwK",
            "FGZvbGlvX2Jvb2tpbmdfbnVtYmVyGAcgASgJKkQKDUNhcHR1cmVTdGF0dXMS",
            "CwoHUEVORElORxAAEgoKBlZPSURFRBABEg0KCUNPTVBMRVRFRBACEgsKB0ZB",
            "SUxVUkUQA0InWgttb25leS9jYXJkc6oCF0hPTE1TLlR5cGVzLk1vbmV5LkNh",
            "cmRzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.MerchantAuthorizationReflection.Descriptor, global::HOLMS.Types.Money.Cards.MerchantCaptureIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Money.Cards.CaptureStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Cards.MerchantCapture), global::HOLMS.Types.Money.Cards.MerchantCapture.Parser, new[]{ "EntityId", "MerchantId", "Amount", "Status", "Authorization", "TxnId", "FolioBookingNumber" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CaptureStatus {
    [pbr::OriginalName("PENDING")] Pending = 0,
    [pbr::OriginalName("VOIDED")] Voided = 1,
    [pbr::OriginalName("COMPLETED")] Completed = 2,
    [pbr::OriginalName("FAILURE")] Failure = 3,
  }

  #endregion

  #region Messages
  public sealed partial class MerchantCapture : pb::IMessage<MerchantCapture> {
    private static readonly pb::MessageParser<MerchantCapture> _parser = new pb::MessageParser<MerchantCapture>(() => new MerchantCapture());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerchantCapture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Cards.MerchantCaptureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantCapture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantCapture(MerchantCapture other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      MerchantId = other.merchantId_ != null ? other.MerchantId.Clone() : null;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      status_ = other.status_;
      Authorization = other.authorization_ != null ? other.Authorization.Clone() : null;
      txnId_ = other.txnId_;
      folioBookingNumber_ = other.folioBookingNumber_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantCapture Clone() {
      return new MerchantCapture(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.MerchantCaptureIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.MerchantCaptureIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "merchant_id" field.</summary>
    public const int MerchantIdFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator merchantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator MerchantId {
      get { return merchantId_; }
      set {
        merchantId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.CaptureStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CaptureStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "authorization" field.</summary>
    public const int AuthorizationFieldNumber = 5;
    private global::HOLMS.Types.Money.Cards.MerchantAuthorization authorization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.MerchantAuthorization Authorization {
      get { return authorization_; }
      set {
        authorization_ = value;
      }
    }

    /// <summary>Field number for the "txn_id" field.</summary>
    public const int TxnIdFieldNumber = 6;
    private string txnId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TxnId {
      get { return txnId_; }
      set {
        txnId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folio_booking_number" field.</summary>
    public const int FolioBookingNumberFieldNumber = 7;
    private string folioBookingNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolioBookingNumber {
      get { return folioBookingNumber_; }
      set {
        folioBookingNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerchantCapture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerchantCapture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (!object.Equals(MerchantId, other.MerchantId)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Authorization, other.Authorization)) return false;
      if (TxnId != other.TxnId) return false;
      if (FolioBookingNumber != other.FolioBookingNumber) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (merchantId_ != null) hash ^= MerchantId.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (authorization_ != null) hash ^= Authorization.GetHashCode();
      if (TxnId.Length != 0) hash ^= TxnId.GetHashCode();
      if (FolioBookingNumber.Length != 0) hash ^= FolioBookingNumber.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (merchantId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MerchantId);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (authorization_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Authorization);
      }
      if (TxnId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TxnId);
      }
      if (FolioBookingNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FolioBookingNumber);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (merchantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerchantId);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (authorization_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authorization);
      }
      if (TxnId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TxnId);
      }
      if (FolioBookingNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolioBookingNumber);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerchantCapture other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Money.Cards.MerchantCaptureIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.merchantId_ != null) {
        if (merchantId_ == null) {
          merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        MerchantId.MergeFrom(other.MerchantId);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.authorization_ != null) {
        if (authorization_ == null) {
          authorization_ = new global::HOLMS.Types.Money.Cards.MerchantAuthorization();
        }
        Authorization.MergeFrom(other.Authorization);
      }
      if (other.TxnId.Length != 0) {
        TxnId = other.TxnId;
      }
      if (other.FolioBookingNumber.Length != 0) {
        FolioBookingNumber = other.FolioBookingNumber;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Money.Cards.MerchantCaptureIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            if (merchantId_ == null) {
              merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(merchantId_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 32: {
            status_ = (global::HOLMS.Types.Money.Cards.CaptureStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (authorization_ == null) {
              authorization_ = new global::HOLMS.Types.Money.Cards.MerchantAuthorization();
            }
            input.ReadMessage(authorization_);
            break;
          }
          case 50: {
            TxnId = input.ReadString();
            break;
          }
          case 58: {
            FolioBookingNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
