// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supply/packages/booking_held_lodging_package.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Supply.Packages {

  /// <summary>Holder for reflection information generated from supply/packages/booking_held_lodging_package.proto</summary>
  public static partial class BookingHeldLodgingPackageReflection {

    #region Descriptor
    /// <summary>File descriptor for supply/packages/booking_held_lodging_package.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BookingHeldLodgingPackageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJzdXBwbHkvcGFja2FnZXMvYm9va2luZ19oZWxkX2xvZGdpbmdfcGFja2Fn",
            "ZS5wcm90bxIbaG9sbXMudHlwZXMuc3VwcGx5LnBhY2thZ2VzGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvGiVzdXBwbHkvcGFja2FnZXMvbG9k",
            "Z2luZ19wYWNrYWdlLnByb3RvGi9zdXBwbHkvcmVzZXJ2YXRpb25fYm9va2lu",
            "Z19ob2xkX2luZGljYXRvci5wcm90byLWAQoZQm9va2luZ0hlbGRMb2RnaW5n",
            "UGFja2FnZRJLCg5ob2xkX2luZGljYXRvchgBIAEoCzIzLmhvbG1zLnR5cGVz",
            "LnN1cHBseS5SZXNlcnZhdGlvbkJvb2tpbmdIb2xkSW5kaWNhdG9yEi4KCmV4",
            "cGlyZXNfYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjwK",
            "B3BhY2thZ2UYAyABKAsyKy5ob2xtcy50eXBlcy5zdXBwbHkucGFja2FnZXMu",
            "TG9kZ2luZ1BhY2thZ2VCL1oPc3VwcGx5L3BhY2thZ2VzqgIbSE9MTVMuVHlw",
            "ZXMuU3VwcGx5LlBhY2thZ2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Supply.Packages.LodgingPackageReflection.Descriptor, global::HOLMS.Types.Supply.ReservationBookingHoldIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Supply.Packages.BookingHeldLodgingPackage), global::HOLMS.Types.Supply.Packages.BookingHeldLodgingPackage.Parser, new[]{ "HoldIndicator", "ExpiresAt", "Package" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BookingHeldLodgingPackage : pb::IMessage<BookingHeldLodgingPackage> {
    private static readonly pb::MessageParser<BookingHeldLodgingPackage> _parser = new pb::MessageParser<BookingHeldLodgingPackage>(() => new BookingHeldLodgingPackage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookingHeldLodgingPackage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Supply.Packages.BookingHeldLodgingPackageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingHeldLodgingPackage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingHeldLodgingPackage(BookingHeldLodgingPackage other) : this() {
      HoldIndicator = other.holdIndicator_ != null ? other.HoldIndicator.Clone() : null;
      ExpiresAt = other.expiresAt_ != null ? other.ExpiresAt.Clone() : null;
      Package = other.package_ != null ? other.Package.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookingHeldLodgingPackage Clone() {
      return new BookingHeldLodgingPackage(this);
    }

    /// <summary>Field number for the "hold_indicator" field.</summary>
    public const int HoldIndicatorFieldNumber = 1;
    private global::HOLMS.Types.Supply.ReservationBookingHoldIndicator holdIndicator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.ReservationBookingHoldIndicator HoldIndicator {
      get { return holdIndicator_; }
      set {
        holdIndicator_ = value;
      }
    }

    /// <summary>Field number for the "expires_at" field.</summary>
    public const int ExpiresAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiresAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpiresAt {
      get { return expiresAt_; }
      set {
        expiresAt_ = value;
      }
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 3;
    private global::HOLMS.Types.Supply.Packages.LodgingPackage package_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.Packages.LodgingPackage Package {
      get { return package_; }
      set {
        package_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookingHeldLodgingPackage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookingHeldLodgingPackage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HoldIndicator, other.HoldIndicator)) return false;
      if (!object.Equals(ExpiresAt, other.ExpiresAt)) return false;
      if (!object.Equals(Package, other.Package)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (holdIndicator_ != null) hash ^= HoldIndicator.GetHashCode();
      if (expiresAt_ != null) hash ^= ExpiresAt.GetHashCode();
      if (package_ != null) hash ^= Package.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (holdIndicator_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HoldIndicator);
      }
      if (expiresAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExpiresAt);
      }
      if (package_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Package);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (holdIndicator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HoldIndicator);
      }
      if (expiresAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiresAt);
      }
      if (package_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookingHeldLodgingPackage other) {
      if (other == null) {
        return;
      }
      if (other.holdIndicator_ != null) {
        if (holdIndicator_ == null) {
          holdIndicator_ = new global::HOLMS.Types.Supply.ReservationBookingHoldIndicator();
        }
        HoldIndicator.MergeFrom(other.HoldIndicator);
      }
      if (other.expiresAt_ != null) {
        if (expiresAt_ == null) {
          expiresAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpiresAt.MergeFrom(other.ExpiresAt);
      }
      if (other.package_ != null) {
        if (package_ == null) {
          package_ = new global::HOLMS.Types.Supply.Packages.LodgingPackage();
        }
        Package.MergeFrom(other.Package);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (holdIndicator_ == null) {
              holdIndicator_ = new global::HOLMS.Types.Supply.ReservationBookingHoldIndicator();
            }
            input.ReadMessage(holdIndicator_);
            break;
          }
          case 18: {
            if (expiresAt_ == null) {
              expiresAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(expiresAt_);
            break;
          }
          case 26: {
            if (package_ == null) {
              package_ = new global::HOLMS.Types.Supply.Packages.LodgingPackage();
            }
            input.ReadMessage(package_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
