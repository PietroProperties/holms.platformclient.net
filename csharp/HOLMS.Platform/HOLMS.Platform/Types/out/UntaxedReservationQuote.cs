// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/pricing/untaxed_reservation_quote.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Pricing {

  /// <summary>Holder for reflection information generated from booking/pricing/untaxed_reservation_quote.proto</summary>
  public static partial class UntaxedReservationQuoteReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/pricing/untaxed_reservation_quote.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UntaxedReservationQuoteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9ib29raW5nL3ByaWNpbmcvdW50YXhlZF9yZXNlcnZhdGlvbl9xdW90ZS5w",
            "cm90bxIbaG9sbXMudHlwZXMuYm9va2luZy5wcmljaW5nGjdib29raW5nL3By",
            "aWNpbmcvdW50YXhlZF9yZXNlcnZhdGlvbl9uaWdodGx5X3F1b3RlLnByb3Rv",
            "GkJib29raW5nL3ByaWNpbmcvdW50YXhlZF9pbmNpZGVudGFsX3Jlc2VydmF0",
            "aW9uX25pZ2h0bHlfcXVvdGUucHJvdG8aLmJvb2tpbmcvaW5kaWNhdG9ycy9y",
            "ZXNlcnZhdGlvbl9pbmRpY2F0b3IucHJvdG8ivwIKF1VudGF4ZWRSZXNlcnZh",
            "dGlvblF1b3RlEiIKGnJlc2VydmF0aW9uX3N1YmplY3RfdG9fdGF4GAEgASgI",
            "ElMKDm5pZ2h0bHlfcXVvdGVzGAIgAygLMjsuaG9sbXMudHlwZXMuYm9va2lu",
            "Zy5wcmljaW5nLlVudGF4ZWRSZXNlcnZhdGlvbk5pZ2h0bHlRdW90ZRJgChFp",
            "bmNpZGVudGFsX3F1b3RlcxgDIAMoCzJFLmhvbG1zLnR5cGVzLmJvb2tpbmcu",
            "cHJpY2luZy5VbnRheGVkSW5jaWRlbnRhbFJlc2VydmF0aW9uTmlnaHRseVF1",
            "b3RlEkkKC3Jlc2VydmF0aW9uGAQgASgLMjQuaG9sbXMudHlwZXMuYm9va2lu",
            "Zy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yQi9aD2Jvb2tpbmcv",
            "cHJpY2luZ6oCG0hPTE1TLlR5cGVzLkJvb2tpbmcuUHJpY2luZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Pricing.UntaxedReservationNightlyQuoteReflection.Descriptor, global::HOLMS.Types.Booking.Pricing.UntaxedIncidentalReservationNightlyQuoteReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Pricing.UntaxedReservationQuote), global::HOLMS.Types.Booking.Pricing.UntaxedReservationQuote.Parser, new[]{ "ReservationSubjectToTax", "NightlyQuotes", "IncidentalQuotes", "Reservation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UntaxedReservationQuote : pb::IMessage<UntaxedReservationQuote> {
    private static readonly pb::MessageParser<UntaxedReservationQuote> _parser = new pb::MessageParser<UntaxedReservationQuote>(() => new UntaxedReservationQuote());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UntaxedReservationQuote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Pricing.UntaxedReservationQuoteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UntaxedReservationQuote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UntaxedReservationQuote(UntaxedReservationQuote other) : this() {
      reservationSubjectToTax_ = other.reservationSubjectToTax_;
      nightlyQuotes_ = other.nightlyQuotes_.Clone();
      incidentalQuotes_ = other.incidentalQuotes_.Clone();
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UntaxedReservationQuote Clone() {
      return new UntaxedReservationQuote(this);
    }

    /// <summary>Field number for the "reservation_subject_to_tax" field.</summary>
    public const int ReservationSubjectToTaxFieldNumber = 1;
    private bool reservationSubjectToTax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReservationSubjectToTax {
      get { return reservationSubjectToTax_; }
      set {
        reservationSubjectToTax_ = value;
      }
    }

    /// <summary>Field number for the "nightly_quotes" field.</summary>
    public const int NightlyQuotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Pricing.UntaxedReservationNightlyQuote> _repeated_nightlyQuotes_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Booking.Pricing.UntaxedReservationNightlyQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Pricing.UntaxedReservationNightlyQuote> nightlyQuotes_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Pricing.UntaxedReservationNightlyQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Pricing.UntaxedReservationNightlyQuote> NightlyQuotes {
      get { return nightlyQuotes_; }
    }

    /// <summary>Field number for the "incidental_quotes" field.</summary>
    public const int IncidentalQuotesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Pricing.UntaxedIncidentalReservationNightlyQuote> _repeated_incidentalQuotes_codec
        = pb::FieldCodec.ForMessage(26, global::HOLMS.Types.Booking.Pricing.UntaxedIncidentalReservationNightlyQuote.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Pricing.UntaxedIncidentalReservationNightlyQuote> incidentalQuotes_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Pricing.UntaxedIncidentalReservationNightlyQuote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Pricing.UntaxedIncidentalReservationNightlyQuote> IncidentalQuotes {
      get { return incidentalQuotes_; }
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 4;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UntaxedReservationQuote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UntaxedReservationQuote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReservationSubjectToTax != other.ReservationSubjectToTax) return false;
      if(!nightlyQuotes_.Equals(other.nightlyQuotes_)) return false;
      if(!incidentalQuotes_.Equals(other.incidentalQuotes_)) return false;
      if (!object.Equals(Reservation, other.Reservation)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReservationSubjectToTax != false) hash ^= ReservationSubjectToTax.GetHashCode();
      hash ^= nightlyQuotes_.GetHashCode();
      hash ^= incidentalQuotes_.GetHashCode();
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReservationSubjectToTax != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReservationSubjectToTax);
      }
      nightlyQuotes_.WriteTo(output, _repeated_nightlyQuotes_codec);
      incidentalQuotes_.WriteTo(output, _repeated_incidentalQuotes_codec);
      if (reservation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReservationSubjectToTax != false) {
        size += 1 + 1;
      }
      size += nightlyQuotes_.CalculateSize(_repeated_nightlyQuotes_codec);
      size += incidentalQuotes_.CalculateSize(_repeated_incidentalQuotes_codec);
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UntaxedReservationQuote other) {
      if (other == null) {
        return;
      }
      if (other.ReservationSubjectToTax != false) {
        ReservationSubjectToTax = other.ReservationSubjectToTax;
      }
      nightlyQuotes_.Add(other.nightlyQuotes_);
      incidentalQuotes_.Add(other.incidentalQuotes_);
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ReservationSubjectToTax = input.ReadBool();
            break;
          }
          case 18: {
            nightlyQuotes_.AddEntriesFrom(input, _repeated_nightlyQuotes_codec);
            break;
          }
          case 26: {
            incidentalQuotes_.AddEntriesFrom(input, _repeated_incidentalQuotes_codec);
            break;
          }
          case 34: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
