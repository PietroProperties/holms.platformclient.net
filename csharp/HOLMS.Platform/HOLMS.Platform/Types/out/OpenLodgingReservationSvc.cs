// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/open_lodging_reservation_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.RPC {

  /// <summary>Holder for reflection information generated from booking/rpc/open_lodging_reservation_svc.proto</summary>
  public static partial class OpenLodgingReservationSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/rpc/open_lodging_reservation_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OpenLodgingReservationSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5ib29raW5nL3JwYy9vcGVuX2xvZGdpbmdfcmVzZXJ2YXRpb25fc3ZjLnBy",
            "b3RvEhdob2xtcy50eXBlcy5ib29raW5nLnJwYxobZ29vZ2xlL3Byb3RvYnVm",
            "L2VtcHR5LnByb3RvGi5ib29raW5nL2luZGljYXRvcnMvcmVzZXJ2YXRpb25f",
            "aW5kaWNhdG9yLnByb3RvGjVvcGVyYXRpb25zL3Jvb21fY2xhaW1zL3Jvb21f",
            "YXNzaWdubWVudF9ieV9uaWdodC5wcm90bxo/b3BlcmF0aW9ucy9yb29tX2Ns",
            "YWltcy9yZXNlcnZhdGlvbl9yb29tX2Fzc2lnbm1lbnRfcmVzdWx0LnByb3Rv",
            "Gj9ib29raW5nL3Jlc2VydmF0aW9ucy9yZXNlcnZhdGlvbl9yb29tX2Fzc2ln",
            "bm1lbnRfc2NoZWR1bGUucHJvdG8aNWJvb2tpbmcvcmVzZXJ2YXRpb25zL3Jl",
            "c2VydmF0aW9uX2NvbnRhY3RfcGVyc29uLnByb3RvGj1ib29raW5nL2luZGlj",
            "YXRvcnMvcmVzZXJ2YXRpb25fY29udGFjdF9wZXJzb25faW5kaWNhdG9yLnBy",
            "b3RvGiNib29raW5nL2hpc3RvcnkvaGlzdG9yeV9ldmVudC5wcm90bxo5b3Bl",
            "cmF0aW9ucy9ob3VzZWtlZXBpbmcvaG91c2VrZWVwaW5nX3RpbWVfaW5kaWNh",
            "dG9yLnByb3RvGixib29raW5nL3Jlc2VydmF0aW9uX2Fzc29jaWF0ZWRfcGFy",
            "dGllcy5wcm90bxoyYm9va2luZy9oaXN0b3J5L3Jlc2VydmF0aW9uX2NyZWF0",
            "aW9uX3N1bW1hcnkucHJvdG8aM2Jvb2tpbmcvaGlzdG9yeS9yZXNlcnZhdGlv",
            "bl9hbWVuZG1lbnRfc3VtbWFyeS5wcm90byK5AQocVXBkYXRlUm9vbUFzc2ln",
            "bm1lbnRzUmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchJO",
            "Cgthc3NpZ25tZW50cxgCIAMoCzI5LmhvbG1zLnR5cGVzLm9wZXJhdGlvbnMu",
            "cm9vbV9jbGFpbXMuUm9vbUFzc2lnbm1lbnRCeU5pZ2h0InQKHVVwZGF0ZVJv",
            "b21Bc3NpZ25tZW50c1Jlc3BvbnNlElMKBnJlc3VsdBgBIAEoDjJDLmhvbG1z",
            "LnR5cGVzLm9wZXJhdGlvbnMucm9vbV9jbGFpbXMuUmVzZXJ2YXRpb25Sb29t",
            "QXNzaWdubWVudFJlc3VsdCJjCh1HZXRSZXNlcnZhdGlvbkhpc3RvcnlSZXNw",
            "b25zZRJCCg9yZXNfaGlzdG9yeV9sb2cYASADKAsyKS5ob2xtcy50eXBlcy5i",
            "b29raW5nLmhpc3RvcnkuSGlzdG9yeUV2ZW50Im4KHkdldFJlc2VydmF0aW9u",
            "Q29udGFjdHNSZXNwb25zZRJMCghjb250YWN0cxgBIAMoCzI6LmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcucmVzZXJ2YXRpb25zLlJlc2VydmF0aW9uQ29udGFjdFBl",
            "cnNvbiLAAQofUmVtb3ZlUmVzZXJ2YXRpb25Db250YWN0UmVxdWVzdBJJCgty",
            "ZXNlcnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5cGVzLmJvb2tpbmcuaW5kaWNh",
            "dG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchJSCgdjb250YWN0GAIgASgLMkEu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uQ29u",
            "dGFjdFBlcnNvbkluZGljYXRvciKGAQocQWRkUmVzZXJ2YXRpb25Db250YWN0",
            "UmVxdWVzdBJJCgtyZXNlcnZhdGlvbhgBIAEoCzI0LmhvbG1zLnR5cGVzLmJv",
            "b2tpbmcuaW5kaWNhdG9ycy5SZXNlcnZhdGlvbkluZGljYXRvchIMCgRuYW1l",
            "GAIgASgJEg0KBWVtYWlsGAMgASgJIskBCiFIb3VzZWtlZXBpbmdUaW1lUHJl",
            "ZmVyZW5jZVJlcXVlc3QSSQoLcmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50",
            "eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3IS",
            "WQoRcmVxdWVzdGVkX2hrX3RpbWUYAiABKAsyPi5ob2xtcy50eXBlcy5vcGVy",
            "YXRpb25zLmhvdXNla2VlcGluZy5Ib3VzZWtlZXBpbmdUaW1lSW5kaWNhdG9y",
            "IpQBCiRWZWhpY2xlUGxhdGVJbmZvcm1hdGlvblVwZGF0ZVJlcXVlc3QSSQoL",
            "cmVzZXJ2YXRpb24YASABKAsyNC5ob2xtcy50eXBlcy5ib29raW5nLmluZGlj",
            "YXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISIQoZdmVoaWNsZV9wbGF0ZV9p",
            "bmZvcm1hdGlvbhgCIAEoCTK3CwoZT3BlbkxvZGdpbmdSZXNlcnZhdGlvblN2",
            "YxKFAQoVR2V0UmVzZXJ2YXRpb25IaXN0b3J5EjQuaG9sbXMudHlwZXMuYm9v",
            "a2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yGjYuaG9sbXMu",
            "dHlwZXMuYm9va2luZy5ycGMuR2V0UmVzZXJ2YXRpb25IaXN0b3J5UmVzcG9u",
            "c2UShgEKFVVwZGF0ZVJvb21Bc3NpZ25tZW50cxI1LmhvbG1zLnR5cGVzLmJv",
            "b2tpbmcucnBjLlVwZGF0ZVJvb21Bc3NpZ25tZW50c1JlcXVlc3QaNi5ob2xt",
            "cy50eXBlcy5ib29raW5nLnJwYy5VcGRhdGVSb29tQXNzaWdubWVudHNSZXNw",
            "b25zZRKPAQoSR2V0Um9vbUFzc2lnbm1lbnRzEjQuaG9sbXMudHlwZXMuYm9v",
            "a2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yGkMuaG9sbXMu",
            "dHlwZXMuYm9va2luZy5yZXNlcnZhdGlvbnMuUmVzZXJ2YXRpb25Sb29tQXNz",
            "aWdubWVudFNjaGVkdWxlEocBChZHZXRSZXNlcnZhdGlvbkNvbnRhY3RzEjQu",
            "aG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5k",
            "aWNhdG9yGjcuaG9sbXMudHlwZXMuYm9va2luZy5ycGMuR2V0UmVzZXJ2YXRp",
            "b25Db250YWN0c1Jlc3BvbnNlEmwKGFJlbW92ZVJlc2VydmF0aW9uQ29udGFj",
            "dBI4LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLlJlbW92ZVJlc2VydmF0aW9u",
            "Q29udGFjdFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSYQoQQWRk",
            "Q29udGFjdFBlcnNvbhI1LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLkFkZFJl",
            "c2VydmF0aW9uQ29udGFjdFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkScwodU2V0SG91c2VrZWVwaW5nVGltZVByZWZlcmVuY2USOi5ob2xtcy50",
            "eXBlcy5ib29raW5nLnJwYy5Ib3VzZWtlZXBpbmdUaW1lUHJlZmVyZW5jZVJl",
            "cXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSigEKH0dldFJlc2VydmF0",
            "aW9uQXNzb2NpYXRlZFBhcnRpZXMSNC5ob2xtcy50eXBlcy5ib29raW5nLmlu",
            "ZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3IaMS5ob2xtcy50eXBlcy5i",
            "b29raW5nLlJlc2VydmF0aW9uQXNzb2NpYXRlZFBhcnRpZXMSjgEKHUdldFJl",
            "c2VydmF0aW9uQ3JlYXRpb25TdW1tYXJ5EjQuaG9sbXMudHlwZXMuYm9va2lu",
            "Zy5pbmRpY2F0b3JzLlJlc2VydmF0aW9uSW5kaWNhdG9yGjcuaG9sbXMudHlw",
            "ZXMuYm9va2luZy5oaXN0b3J5LlJlc2VydmF0aW9uQ3JlYXRpb25TdW1tYXJ5",
            "EpABCh5HZXRSZXNlcnZhdGlvbkFtZW5kbWVudFN1bW1hcnkSNC5ob2xtcy50",
            "eXBlcy5ib29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3Ia",
            "OC5ob2xtcy50eXBlcy5ib29raW5nLmhpc3RvcnkuUmVzZXJ2YXRpb25BbWVu",
            "ZG1lbnRTdW1tYXJ5EnYKHVVwZGF0ZVZlaGljbGVQbGF0ZUluZm9ybWF0aW9u",
            "Ej0uaG9sbXMudHlwZXMuYm9va2luZy5ycGMuVmVoaWNsZVBsYXRlSW5mb3Jt",
            "YXRpb25VcGRhdGVSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Qida",
            "C2Jvb2tpbmcvcnBjqgIXSE9MTVMuVHlwZXMuQm9va2luZy5SUENiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Operations.RoomClaims.RoomAssignmentByNightReflection.Descriptor, global::HOLMS.Types.Operations.RoomClaims.ReservationRoomAssignmentResultReflection.Descriptor, global::HOLMS.Types.Booking.Reservations.ReservationRoomAssignmentScheduleReflection.Descriptor, global::HOLMS.Types.Booking.Reservations.ReservationContactPersonReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationContactPersonIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.History.HistoryEventReflection.Descriptor, global::HOLMS.Types.Operations.Housekeeping.HousekeepingTimeIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.ReservationAssociatedPartiesReflection.Descriptor, global::HOLMS.Types.Booking.History.ReservationCreationSummaryReflection.Descriptor, global::HOLMS.Types.Booking.History.ReservationAmendmentSummaryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.UpdateRoomAssignmentsRequest), global::HOLMS.Types.Booking.RPC.UpdateRoomAssignmentsRequest.Parser, new[]{ "Reservation", "Assignments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.UpdateRoomAssignmentsResponse), global::HOLMS.Types.Booking.RPC.UpdateRoomAssignmentsResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GetReservationHistoryResponse), global::HOLMS.Types.Booking.RPC.GetReservationHistoryResponse.Parser, new[]{ "ResHistoryLog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.GetReservationContactsResponse), global::HOLMS.Types.Booking.RPC.GetReservationContactsResponse.Parser, new[]{ "Contacts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.RemoveReservationContactRequest), global::HOLMS.Types.Booking.RPC.RemoveReservationContactRequest.Parser, new[]{ "Reservation", "Contact" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.AddReservationContactRequest), global::HOLMS.Types.Booking.RPC.AddReservationContactRequest.Parser, new[]{ "Reservation", "Name", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.HousekeepingTimePreferenceRequest), global::HOLMS.Types.Booking.RPC.HousekeepingTimePreferenceRequest.Parser, new[]{ "Reservation", "RequestedHkTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.RPC.VehiclePlateInformationUpdateRequest), global::HOLMS.Types.Booking.RPC.VehiclePlateInformationUpdateRequest.Parser, new[]{ "Reservation", "VehiclePlateInformation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UpdateRoomAssignmentsRequest : pb::IMessage<UpdateRoomAssignmentsRequest> {
    private static readonly pb::MessageParser<UpdateRoomAssignmentsRequest> _parser = new pb::MessageParser<UpdateRoomAssignmentsRequest>(() => new UpdateRoomAssignmentsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRoomAssignmentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomAssignmentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomAssignmentsRequest(UpdateRoomAssignmentsRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      assignments_ = other.assignments_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomAssignmentsRequest Clone() {
      return new UpdateRoomAssignmentsRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "assignments" field.</summary>
    public const int AssignmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Operations.RoomClaims.RoomAssignmentByNight> _repeated_assignments_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Operations.RoomClaims.RoomAssignmentByNight.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Operations.RoomClaims.RoomAssignmentByNight> assignments_ = new pbc::RepeatedField<global::HOLMS.Types.Operations.RoomClaims.RoomAssignmentByNight>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Operations.RoomClaims.RoomAssignmentByNight> Assignments {
      get { return assignments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRoomAssignmentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRoomAssignmentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if(!assignments_.Equals(other.assignments_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      hash ^= assignments_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      assignments_.WriteTo(output, _repeated_assignments_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      size += assignments_.CalculateSize(_repeated_assignments_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRoomAssignmentsRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      assignments_.Add(other.assignments_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            assignments_.AddEntriesFrom(input, _repeated_assignments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRoomAssignmentsResponse : pb::IMessage<UpdateRoomAssignmentsResponse> {
    private static readonly pb::MessageParser<UpdateRoomAssignmentsResponse> _parser = new pb::MessageParser<UpdateRoomAssignmentsResponse>(() => new UpdateRoomAssignmentsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRoomAssignmentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomAssignmentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomAssignmentsResponse(UpdateRoomAssignmentsResponse other) : this() {
      result_ = other.result_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRoomAssignmentsResponse Clone() {
      return new UpdateRoomAssignmentsResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Operations.RoomClaims.ReservationRoomAssignmentResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.RoomClaims.ReservationRoomAssignmentResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRoomAssignmentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRoomAssignmentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRoomAssignmentsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Operations.RoomClaims.ReservationRoomAssignmentResult) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetReservationHistoryResponse : pb::IMessage<GetReservationHistoryResponse> {
    private static readonly pb::MessageParser<GetReservationHistoryResponse> _parser = new pb::MessageParser<GetReservationHistoryResponse>(() => new GetReservationHistoryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReservationHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationHistoryResponse(GetReservationHistoryResponse other) : this() {
      resHistoryLog_ = other.resHistoryLog_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationHistoryResponse Clone() {
      return new GetReservationHistoryResponse(this);
    }

    /// <summary>Field number for the "res_history_log" field.</summary>
    public const int ResHistoryLogFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.History.HistoryEvent> _repeated_resHistoryLog_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.History.HistoryEvent.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.History.HistoryEvent> resHistoryLog_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.History.HistoryEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.History.HistoryEvent> ResHistoryLog {
      get { return resHistoryLog_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReservationHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReservationHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resHistoryLog_.Equals(other.resHistoryLog_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resHistoryLog_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resHistoryLog_.WriteTo(output, _repeated_resHistoryLog_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resHistoryLog_.CalculateSize(_repeated_resHistoryLog_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReservationHistoryResponse other) {
      if (other == null) {
        return;
      }
      resHistoryLog_.Add(other.resHistoryLog_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            resHistoryLog_.AddEntriesFrom(input, _repeated_resHistoryLog_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetReservationContactsResponse : pb::IMessage<GetReservationContactsResponse> {
    private static readonly pb::MessageParser<GetReservationContactsResponse> _parser = new pb::MessageParser<GetReservationContactsResponse>(() => new GetReservationContactsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetReservationContactsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationContactsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationContactsResponse(GetReservationContactsResponse other) : this() {
      contacts_ = other.contacts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetReservationContactsResponse Clone() {
      return new GetReservationContactsResponse(this);
    }

    /// <summary>Field number for the "contacts" field.</summary>
    public const int ContactsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Booking.Reservations.ReservationContactPerson> _repeated_contacts_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Booking.Reservations.ReservationContactPerson.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationContactPerson> contacts_ = new pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationContactPerson>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Booking.Reservations.ReservationContactPerson> Contacts {
      get { return contacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetReservationContactsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetReservationContactsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!contacts_.Equals(other.contacts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= contacts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      contacts_.WriteTo(output, _repeated_contacts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contacts_.CalculateSize(_repeated_contacts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetReservationContactsResponse other) {
      if (other == null) {
        return;
      }
      contacts_.Add(other.contacts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            contacts_.AddEntriesFrom(input, _repeated_contacts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveReservationContactRequest : pb::IMessage<RemoveReservationContactRequest> {
    private static readonly pb::MessageParser<RemoveReservationContactRequest> _parser = new pb::MessageParser<RemoveReservationContactRequest>(() => new RemoveReservationContactRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveReservationContactRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReservationContactRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReservationContactRequest(RemoveReservationContactRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      Contact = other.contact_ != null ? other.Contact.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveReservationContactRequest Clone() {
      return new RemoveReservationContactRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "contact" field.</summary>
    public const int ContactFieldNumber = 2;
    private global::HOLMS.Types.Booking.Indicators.ReservationContactPersonIndicator contact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationContactPersonIndicator Contact {
      get { return contact_; }
      set {
        contact_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveReservationContactRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveReservationContactRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(Contact, other.Contact)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (contact_ != null) hash ^= Contact.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (contact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Contact);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (contact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Contact);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveReservationContactRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.contact_ != null) {
        if (contact_ == null) {
          contact_ = new global::HOLMS.Types.Booking.Indicators.ReservationContactPersonIndicator();
        }
        Contact.MergeFrom(other.Contact);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (contact_ == null) {
              contact_ = new global::HOLMS.Types.Booking.Indicators.ReservationContactPersonIndicator();
            }
            input.ReadMessage(contact_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddReservationContactRequest : pb::IMessage<AddReservationContactRequest> {
    private static readonly pb::MessageParser<AddReservationContactRequest> _parser = new pb::MessageParser<AddReservationContactRequest>(() => new AddReservationContactRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddReservationContactRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReservationContactRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReservationContactRequest(AddReservationContactRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      name_ = other.name_;
      email_ = other.email_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddReservationContactRequest Clone() {
      return new AddReservationContactRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddReservationContactRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddReservationContactRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (Name != other.Name) return false;
      if (Email != other.Email) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddReservationContactRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HousekeepingTimePreferenceRequest : pb::IMessage<HousekeepingTimePreferenceRequest> {
    private static readonly pb::MessageParser<HousekeepingTimePreferenceRequest> _parser = new pb::MessageParser<HousekeepingTimePreferenceRequest>(() => new HousekeepingTimePreferenceRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HousekeepingTimePreferenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HousekeepingTimePreferenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HousekeepingTimePreferenceRequest(HousekeepingTimePreferenceRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      RequestedHkTime = other.requestedHkTime_ != null ? other.RequestedHkTime.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HousekeepingTimePreferenceRequest Clone() {
      return new HousekeepingTimePreferenceRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "requested_hk_time" field.</summary>
    public const int RequestedHkTimeFieldNumber = 2;
    private global::HOLMS.Types.Operations.Housekeeping.HousekeepingTimeIndicator requestedHkTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.Housekeeping.HousekeepingTimeIndicator RequestedHkTime {
      get { return requestedHkTime_; }
      set {
        requestedHkTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HousekeepingTimePreferenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HousekeepingTimePreferenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(RequestedHkTime, other.RequestedHkTime)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (requestedHkTime_ != null) hash ^= RequestedHkTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (requestedHkTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestedHkTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (requestedHkTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestedHkTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HousekeepingTimePreferenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.requestedHkTime_ != null) {
        if (requestedHkTime_ == null) {
          requestedHkTime_ = new global::HOLMS.Types.Operations.Housekeeping.HousekeepingTimeIndicator();
        }
        RequestedHkTime.MergeFrom(other.RequestedHkTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (requestedHkTime_ == null) {
              requestedHkTime_ = new global::HOLMS.Types.Operations.Housekeeping.HousekeepingTimeIndicator();
            }
            input.ReadMessage(requestedHkTime_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VehiclePlateInformationUpdateRequest : pb::IMessage<VehiclePlateInformationUpdateRequest> {
    private static readonly pb::MessageParser<VehiclePlateInformationUpdateRequest> _parser = new pb::MessageParser<VehiclePlateInformationUpdateRequest>(() => new VehiclePlateInformationUpdateRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VehiclePlateInformationUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.RPC.OpenLodgingReservationSvcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehiclePlateInformationUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehiclePlateInformationUpdateRequest(VehiclePlateInformationUpdateRequest other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      vehiclePlateInformation_ = other.vehiclePlateInformation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehiclePlateInformationUpdateRequest Clone() {
      return new VehiclePlateInformationUpdateRequest(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_plate_information" field.</summary>
    public const int VehiclePlateInformationFieldNumber = 2;
    private string vehiclePlateInformation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehiclePlateInformation {
      get { return vehiclePlateInformation_; }
      set {
        vehiclePlateInformation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VehiclePlateInformationUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VehiclePlateInformationUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (VehiclePlateInformation != other.VehiclePlateInformation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (VehiclePlateInformation.Length != 0) hash ^= VehiclePlateInformation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (VehiclePlateInformation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VehiclePlateInformation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (VehiclePlateInformation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehiclePlateInformation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VehiclePlateInformationUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.VehiclePlateInformation.Length != 0) {
        VehiclePlateInformation = other.VehiclePlateInformation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            VehiclePlateInformation = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
