// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenancy_config/rpc/kce_config_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.TenancyConfig.RPC {
  public static partial class KCEConfigSvc
  {
    static readonly string __ServiceName = "holms.types.tenancy_config.rpc.KCEConfigSvc";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse> __Marshaller_GetKCEConfigResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.KabaEncoderConfig> __Marshaller_KabaEncoderConfig = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.KabaEncoderConfig.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse> __Marshaller_SetKabaConfigResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig> __Marshaller_MiwaEncoderConfig = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse> __Marshaller_KCESvcSetMiwaConfigResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest> __Marshaller_KCESvcSetActiveKCEConfigRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_Empty,
        __Marshaller_GetKCEConfigResponse);

    static readonly grpc::Method<global::HOLMS.Types.TenancyConfig.KabaEncoderConfig, global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse> __Method_SetKabaConfig = new grpc::Method<global::HOLMS.Types.TenancyConfig.KabaEncoderConfig, global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetKabaConfig",
        __Marshaller_KabaEncoderConfig,
        __Marshaller_SetKabaConfigResponse);

    static readonly grpc::Method<global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig, global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse> __Method_SetMiwaConfig = new grpc::Method<global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig, global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetMiwaConfig",
        __Marshaller_MiwaEncoderConfig,
        __Marshaller_KCESvcSetMiwaConfigResponse);

    static readonly grpc::Method<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetActiveKCEConfiguration = new grpc::Method<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetActiveKCEConfiguration",
        __Marshaller_KCESvcSetActiveKCEConfigRequest,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.TenancyConfig.RPC.KceConfigSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of KCEConfigSvc</summary>
    public abstract partial class KCEConfigSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse> Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse> SetKabaConfig(global::HOLMS.Types.TenancyConfig.KabaEncoderConfig request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse> SetMiwaConfig(global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SetActiveKCEConfiguration(global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for KCEConfigSvc</summary>
    public partial class KCEConfigSvcClient : grpc::ClientBase<KCEConfigSvcClient>
    {
      /// <summary>Creates a new client for KCEConfigSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public KCEConfigSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for KCEConfigSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public KCEConfigSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected KCEConfigSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected KCEConfigSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse Get(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse> GetAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.GetKCEConfigResponse> GetAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse SetKabaConfig(global::HOLMS.Types.TenancyConfig.KabaEncoderConfig request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetKabaConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse SetKabaConfig(global::HOLMS.Types.TenancyConfig.KabaEncoderConfig request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetKabaConfig, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse> SetKabaConfigAsync(global::HOLMS.Types.TenancyConfig.KabaEncoderConfig request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetKabaConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.SetKabaConfigResponse> SetKabaConfigAsync(global::HOLMS.Types.TenancyConfig.KabaEncoderConfig request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetKabaConfig, null, options, request);
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse SetMiwaConfig(global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetMiwaConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse SetMiwaConfig(global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetMiwaConfig, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse> SetMiwaConfigAsync(global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetMiwaConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetMiwaConfigResponse> SetMiwaConfigAsync(global::HOLMS.Types.TenancyConfig.MiwaEncoderConfig request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetMiwaConfig, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetActiveKCEConfiguration(global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetActiveKCEConfiguration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetActiveKCEConfiguration(global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetActiveKCEConfiguration, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetActiveKCEConfigurationAsync(global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetActiveKCEConfigurationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetActiveKCEConfigurationAsync(global::HOLMS.Types.TenancyConfig.RPC.KCESvcSetActiveKCEConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetActiveKCEConfiguration, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override KCEConfigSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new KCEConfigSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(KCEConfigSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_SetKabaConfig, serviceImpl.SetKabaConfig)
          .AddMethod(__Method_SetMiwaConfig, serviceImpl.SetMiwaConfig)
          .AddMethod(__Method_SetActiveKCEConfiguration, serviceImpl.SetActiveKCEConfiguration).Build();
    }

  }
}
#endregion
