// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/rpc/tax_assessment_svc.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio.RPC {

  /// <summary>Holder for reflection information generated from folio/rpc/tax_assessment_svc.proto</summary>
  public static partial class TaxAssessmentSvcReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/rpc/tax_assessment_svc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TaxAssessmentSvcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJmb2xpby9ycGMvdGF4X2Fzc2Vzc21lbnRfc3ZjLnByb3RvEhdob2xtcy50",
            "eXBlcy5ib29raW5nLnJwYxofcHJpbWl0aXZlL21vbmV0YXJ5X2Ftb3VudC5w",
            "cm90bxoeZm9saW8vY2hhcmdlX2NyZWRpdF90eXBlLnByb3RvGiBmb2xpby9m",
            "b2xpb190YXhfYXNzZXNzbWVudC5wcm90bxowYm9va2luZy9pbmRpY2F0b3Jz",
            "L2dyb3VwX2Jvb2tpbmdfaW5kaWNhdG9yLnByb3RvGi5ib29raW5nL2luZGlj",
            "YXRvcnMvcmVzZXJ2YXRpb25faW5kaWNhdG9yLnByb3RvIvoBCjdUYXhBc3Nl",
            "c3NtZW50U3ZjSHlwb3RoZXRpY2FsR3JvdXBCb29raW5nRm9saW9BZGp1c3Rt",
            "ZW50EkwKDWdyb3VwX2Jvb2tpbmcYASABKAsyNS5ob2xtcy50eXBlcy5ib29r",
            "aW5nLmluZGljYXRvcnMuR3JvdXBCb29raW5nSW5kaWNhdG9yEj4KD2Ftb3Vu",
            "dF90ZW5kZXJlZBgCIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25l",
            "dGFyeUFtb3VudBIxCgR0eXBlGAMgASgOMiMuaG9sbXMudHlwZXMuZm9saW8u",
            "Q2hhcmdlQ3JlZGl0VHlwZSL2AQo2VGF4QXNzZXNzbWVudFN2Y0h5cG90aGV0",
            "aWNhbFJlc2VydmF0aW9uRm9saW9BZGp1c3RtZW50EkkKC3Jlc2VydmF0aW9u",
            "GAEgASgLMjQuaG9sbXMudHlwZXMuYm9va2luZy5pbmRpY2F0b3JzLlJlc2Vy",
            "dmF0aW9uSW5kaWNhdG9yEj4KD2Ftb3VudF90ZW5kZXJlZBgCIAEoCzIlLmhv",
            "bG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3VudBIxCgR0eXBlGAMg",
            "ASgOMiMuaG9sbXMudHlwZXMuZm9saW8uQ2hhcmdlQ3JlZGl0VHlwZSJuCjBU",
            "YXhBc3Nlc3NtZW50U3ZjSHlwb3RoZXRpY2FsQWRqdXN0bWVudEFzc2Vzc21l",
            "bnQSOgoLYXNzZXNzbWVudHMYASADKAsyJS5ob2xtcy50eXBlcy5mb2xpby5G",
            "b2xpb1RheEFzc2Vzc21lbnQyrQMKEFRheEFzc2Vzc21lbnRTdmMSzAEKLUFz",
            "c2Vzc0h5cG90aGV0aWNhbEdyb3VwQm9va2luZ0ZvbGlvQWRqdXN0bWVudBJQ",
            "LmhvbG1zLnR5cGVzLmJvb2tpbmcucnBjLlRheEFzc2Vzc21lbnRTdmNIeXBv",
            "dGhldGljYWxHcm91cEJvb2tpbmdGb2xpb0FkanVzdG1lbnQaSS5ob2xtcy50",
            "eXBlcy5ib29raW5nLnJwYy5UYXhBc3Nlc3NtZW50U3ZjSHlwb3RoZXRpY2Fs",
            "QWRqdXN0bWVudEFzc2Vzc21lbnQSyQEKK0Fzc2Vzc0h5cG90aGV0aWNhbFJl",
            "c2VydmFpb25Gb2xpb0FkanVzdG1lbnQSTy5ob2xtcy50eXBlcy5ib29raW5n",
            "LnJwYy5UYXhBc3Nlc3NtZW50U3ZjSHlwb3RoZXRpY2FsUmVzZXJ2YXRpb25G",
            "b2xpb0FkanVzdG1lbnQaSS5ob2xtcy50eXBlcy5ib29raW5nLnJwYy5UYXhB",
            "c3Nlc3NtZW50U3ZjSHlwb3RoZXRpY2FsQWRqdXN0bWVudEFzc2Vzc21lbnRC",
            "GKoCFUhPTE1TLlR5cGVzLkZvbGlvLlJQQ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Folio.ChargeCreditTypeReflection.Descriptor, global::HOLMS.Types.Folio.FolioTaxAssessmentReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.GroupBookingIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment), global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment.Parser, new[]{ "GroupBooking", "AmountTendered", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment), global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalReservationFolioAdjustment.Parser, new[]{ "Reservation", "AmountTendered", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment), global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcHypotheticalAdjustmentAssessment.Parser, new[]{ "Assessments" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment : pb::IMessage<TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment> {
    private static readonly pb::MessageParser<TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment> _parser = new pb::MessageParser<TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment>(() => new TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment(TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment other) : this() {
      GroupBooking = other.groupBooking_ != null ? other.GroupBooking.Clone() : null;
      AmountTendered = other.amountTendered_ != null ? other.AmountTendered.Clone() : null;
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment Clone() {
      return new TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment(this);
    }

    /// <summary>Field number for the "group_booking" field.</summary>
    public const int GroupBookingFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator groupBooking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator GroupBooking {
      get { return groupBooking_; }
      set {
        groupBooking_ = value;
      }
    }

    /// <summary>Field number for the "amount_tendered" field.</summary>
    public const int AmountTenderedFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amountTendered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AmountTendered {
      get { return amountTendered_; }
      set {
        amountTendered_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::HOLMS.Types.Folio.ChargeCreditType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.ChargeCreditType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GroupBooking, other.GroupBooking)) return false;
      if (!object.Equals(AmountTendered, other.AmountTendered)) return false;
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (groupBooking_ != null) hash ^= GroupBooking.GetHashCode();
      if (amountTendered_ != null) hash ^= AmountTendered.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (groupBooking_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GroupBooking);
      }
      if (amountTendered_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AmountTendered);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (groupBooking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupBooking);
      }
      if (amountTendered_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountTendered);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxAssessmentSvcHypotheticalGroupBookingFolioAdjustment other) {
      if (other == null) {
        return;
      }
      if (other.groupBooking_ != null) {
        if (groupBooking_ == null) {
          groupBooking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
        }
        GroupBooking.MergeFrom(other.GroupBooking);
      }
      if (other.amountTendered_ != null) {
        if (amountTendered_ == null) {
          amountTendered_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AmountTendered.MergeFrom(other.AmountTendered);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (groupBooking_ == null) {
              groupBooking_ = new global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator();
            }
            input.ReadMessage(groupBooking_);
            break;
          }
          case 18: {
            if (amountTendered_ == null) {
              amountTendered_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amountTendered_);
            break;
          }
          case 24: {
            type_ = (global::HOLMS.Types.Folio.ChargeCreditType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaxAssessmentSvcHypotheticalReservationFolioAdjustment : pb::IMessage<TaxAssessmentSvcHypotheticalReservationFolioAdjustment> {
    private static readonly pb::MessageParser<TaxAssessmentSvcHypotheticalReservationFolioAdjustment> _parser = new pb::MessageParser<TaxAssessmentSvcHypotheticalReservationFolioAdjustment>(() => new TaxAssessmentSvcHypotheticalReservationFolioAdjustment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxAssessmentSvcHypotheticalReservationFolioAdjustment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalReservationFolioAdjustment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalReservationFolioAdjustment(TaxAssessmentSvcHypotheticalReservationFolioAdjustment other) : this() {
      Reservation = other.reservation_ != null ? other.Reservation.Clone() : null;
      AmountTendered = other.amountTendered_ != null ? other.AmountTendered.Clone() : null;
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalReservationFolioAdjustment Clone() {
      return new TaxAssessmentSvcHypotheticalReservationFolioAdjustment(this);
    }

    /// <summary>Field number for the "reservation" field.</summary>
    public const int ReservationFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator reservation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator Reservation {
      get { return reservation_; }
      set {
        reservation_ = value;
      }
    }

    /// <summary>Field number for the "amount_tendered" field.</summary>
    public const int AmountTenderedFieldNumber = 2;
    private global::HOLMS.Types.Primitive.MonetaryAmount amountTendered_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AmountTendered {
      get { return amountTendered_; }
      set {
        amountTendered_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::HOLMS.Types.Folio.ChargeCreditType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.ChargeCreditType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxAssessmentSvcHypotheticalReservationFolioAdjustment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxAssessmentSvcHypotheticalReservationFolioAdjustment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reservation, other.Reservation)) return false;
      if (!object.Equals(AmountTendered, other.AmountTendered)) return false;
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservation_ != null) hash ^= Reservation.GetHashCode();
      if (amountTendered_ != null) hash ^= AmountTendered.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reservation);
      }
      if (amountTendered_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AmountTendered);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reservation);
      }
      if (amountTendered_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountTendered);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxAssessmentSvcHypotheticalReservationFolioAdjustment other) {
      if (other == null) {
        return;
      }
      if (other.reservation_ != null) {
        if (reservation_ == null) {
          reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        Reservation.MergeFrom(other.Reservation);
      }
      if (other.amountTendered_ != null) {
        if (amountTendered_ == null) {
          amountTendered_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AmountTendered.MergeFrom(other.AmountTendered);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (reservation_ == null) {
              reservation_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(reservation_);
            break;
          }
          case 18: {
            if (amountTendered_ == null) {
              amountTendered_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amountTendered_);
            break;
          }
          case 24: {
            type_ = (global::HOLMS.Types.Folio.ChargeCreditType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaxAssessmentSvcHypotheticalAdjustmentAssessment : pb::IMessage<TaxAssessmentSvcHypotheticalAdjustmentAssessment> {
    private static readonly pb::MessageParser<TaxAssessmentSvcHypotheticalAdjustmentAssessment> _parser = new pb::MessageParser<TaxAssessmentSvcHypotheticalAdjustmentAssessment>(() => new TaxAssessmentSvcHypotheticalAdjustmentAssessment());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxAssessmentSvcHypotheticalAdjustmentAssessment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.RPC.TaxAssessmentSvcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalAdjustmentAssessment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalAdjustmentAssessment(TaxAssessmentSvcHypotheticalAdjustmentAssessment other) : this() {
      assessments_ = other.assessments_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxAssessmentSvcHypotheticalAdjustmentAssessment Clone() {
      return new TaxAssessmentSvcHypotheticalAdjustmentAssessment(this);
    }

    /// <summary>Field number for the "assessments" field.</summary>
    public const int AssessmentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FolioTaxAssessment> _repeated_assessments_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.FolioTaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment> assessments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FolioTaxAssessment> Assessments {
      get { return assessments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxAssessmentSvcHypotheticalAdjustmentAssessment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxAssessmentSvcHypotheticalAdjustmentAssessment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assessments_.Equals(other.assessments_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assessments_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assessments_.WriteTo(output, _repeated_assessments_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assessments_.CalculateSize(_repeated_assessments_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxAssessmentSvcHypotheticalAdjustmentAssessment other) {
      if (other == null) {
        return;
      }
      assessments_.Add(other.assessments_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            assessments_.AddEntriesFrom(input, _repeated_assessments_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
