// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opex_logging/operational_exception_notification.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.OpExLogging {

  /// <summary>Holder for reflection information generated from opex_logging/operational_exception_notification.proto</summary>
  public static partial class OperationalExceptionNotificationReflection {

    #region Descriptor
    /// <summary>File descriptor for opex_logging/operational_exception_notification.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OperationalExceptionNotificationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjVvcGV4X2xvZ2dpbmcvb3BlcmF0aW9uYWxfZXhjZXB0aW9uX25vdGlmaWNh",
            "dGlvbi5wcm90bxIYaG9sbXMudHlwZXMub3BleF9sb2dnaW5nGiBpYW0vc3Rh",
            "ZmZfbWVtYmVyX2luZGljYXRvci5wcm90byKbAQogT3BlcmF0aW9uYWxFeGNl",
            "cHRpb25Ob3RpZmljYXRpb24SMwoEdXNlchgBIAEoCzIlLmhvbG1zLnR5cGVz",
            "LmlhbS5TdGFmZk1lbWJlckluZGljYXRvchIZChFleGNlcHRpb25fbWVzc2Fn",
            "ZRgCIAEoCRIUCgxleGNlcHRpb25faWQYAyABKAkSEQoJal93X3Rva2VuGAQg",
            "ASgJQhqqAhdIT0xNUy5UeXBlcy5PcEV4TG9nZ2luZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.IAM.StaffMemberIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.OpExLogging.OperationalExceptionNotification), global::HOLMS.Types.OpExLogging.OperationalExceptionNotification.Parser, new[]{ "User", "ExceptionMessage", "ExceptionId", "JWToken" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OperationalExceptionNotification : pb::IMessage<OperationalExceptionNotification> {
    private static readonly pb::MessageParser<OperationalExceptionNotification> _parser = new pb::MessageParser<OperationalExceptionNotification>(() => new OperationalExceptionNotification());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationalExceptionNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.OpExLogging.OperationalExceptionNotificationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationalExceptionNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationalExceptionNotification(OperationalExceptionNotification other) : this() {
      User = other.user_ != null ? other.User.Clone() : null;
      exceptionMessage_ = other.exceptionMessage_;
      exceptionId_ = other.exceptionId_;
      jWToken_ = other.jWToken_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationalExceptionNotification Clone() {
      return new OperationalExceptionNotification(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::HOLMS.Types.IAM.StaffMemberIndicator user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.StaffMemberIndicator User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "exception_message" field.</summary>
    public const int ExceptionMessageFieldNumber = 2;
    private string exceptionMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExceptionMessage {
      get { return exceptionMessage_; }
      set {
        exceptionMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exception_id" field.</summary>
    public const int ExceptionIdFieldNumber = 3;
    private string exceptionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExceptionId {
      get { return exceptionId_; }
      set {
        exceptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "j_w_token" field.</summary>
    public const int JWTokenFieldNumber = 4;
    private string jWToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JWToken {
      get { return jWToken_; }
      set {
        jWToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationalExceptionNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationalExceptionNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (ExceptionMessage != other.ExceptionMessage) return false;
      if (ExceptionId != other.ExceptionId) return false;
      if (JWToken != other.JWToken) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (ExceptionMessage.Length != 0) hash ^= ExceptionMessage.GetHashCode();
      if (ExceptionId.Length != 0) hash ^= ExceptionId.GetHashCode();
      if (JWToken.Length != 0) hash ^= JWToken.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (ExceptionMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExceptionMessage);
      }
      if (ExceptionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExceptionId);
      }
      if (JWToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JWToken);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ExceptionMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExceptionMessage);
      }
      if (ExceptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExceptionId);
      }
      if (JWToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JWToken);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationalExceptionNotification other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
        }
        User.MergeFrom(other.User);
      }
      if (other.ExceptionMessage.Length != 0) {
        ExceptionMessage = other.ExceptionMessage;
      }
      if (other.ExceptionId.Length != 0) {
        ExceptionId = other.ExceptionId;
      }
      if (other.JWToken.Length != 0) {
        JWToken = other.JWToken;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (user_ == null) {
              user_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
            }
            input.ReadMessage(user_);
            break;
          }
          case 18: {
            ExceptionMessage = input.ReadString();
            break;
          }
          case 26: {
            ExceptionId = input.ReadString();
            break;
          }
          case 34: {
            JWToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
