// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/cards/transactions/get_open_batch_state_response.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Cards.Transactions {

  /// <summary>Holder for reflection information generated from money/cards/transactions/get_open_batch_state_response.proto</summary>
  public static partial class GetOpenBatchStateResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for money/cards/transactions/get_open_batch_state_response.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetOpenBatchStateResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjxtb25leS9jYXJkcy90cmFuc2FjdGlvbnMvZ2V0X29wZW5fYmF0Y2hfc3Rh",
            "dGVfcmVzcG9uc2UucHJvdG8SJGhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLnRy",
            "YW5zYWN0aW9ucxo4bW9uZXkvY2FyZHMvdHJhbnNhY3Rpb25zL3BheW1lbnRf",
            "Y2FyZF9zYWxlX2NhcHR1cmUucHJvdG8aMm1vbmV5L2NhcmRzL3RyYW5zYWN0",
            "aW9ucy9wYXltZW50X2NhcmRfcmVmdW5kLnByb3RvGjBtb25leS9jYXJkcy90",
            "cmFuc2FjdGlvbnMvcGF5bWVudF9jYXJkX3NhbGUucHJvdG8i5QIKGUdldE9w",
            "ZW5CYXRjaFN0YXRlUmVzcG9uc2USUAoGcmVzdWx0GAEgASgOMkAuaG9sbXMu",
            "dHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rpb25zLkdldEN1cnJlbnRCYXRj",
            "aFN0YXRlUmVzdWx0ElYKEHBlbmRpbmdfY2FwdHVyZXMYAiADKAsyPC5ob2xt",
            "cy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuUGF5bWVudENhcmRT",
            "YWxlQ2FwdHVyZRJQCg9wZW5kaW5nX3JlZnVuZHMYAyADKAsyNy5ob2xtcy50",
            "eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuUGF5bWVudENhcmRSZWZ1",
            "bmQSTAoNcGF5bWVudF9zYWxlcxgEIAMoCzI1LmhvbG1zLnR5cGVzLm1vbmV5",
            "LmNhcmRzLnRyYW5zYWN0aW9ucy5QYXltZW50Q2FyZFNhbGUqwgIKGkdldEN1",
            "cnJlbnRCYXRjaFN0YXRlUmVzdWx0EkQKQENBUkRfUFJPQ0VTU0lOR19TVkNf",
            "R0VUX0NVUlJFTlRfQkFUQ0hfU1RBVEVfUkVTVUxUX1VOS05PV05fRVJST1IQ",
            "ABJUClBDQVJEX1BST0NFU1NJTkdfU1ZDX0dFVF9DVVJSRU5UX0JBVENIX1NU",
            "QVRFX1JFU1VMVF9QUk9DRVNTT1JfQ09NTVVOSUNBVElPTl9FUlJPUhABEkUK",
            "QUNBUkRfUFJPQ0VTU0lOR19TVkNfR0VUX0NVUlJFTlRfQkFUQ0hfU1RBVEVf",
            "UkVTVUxUX0JBVENIX05PVF9PUEVOEAISQQo9Q0FSRF9QUk9DRVNTSU5HX1NW",
            "Q19HRVRfQ1VSUkVOVF9CQVRDSF9TVEFURV9SRVNVTFRfQkFUQ0hfT1BFThAD",
            "QieqAiRIT0xNUy5UeXBlcy5Nb25leS5DYXJkcy5UcmFuc2FjdGlvbnNiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCaptureReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefundReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Money.Cards.Transactions.GetCurrentBatchStateResult), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Cards.Transactions.GetOpenBatchStateResponse), global::HOLMS.Types.Money.Cards.Transactions.GetOpenBatchStateResponse.Parser, new[]{ "Result", "PendingCaptures", "PendingRefunds", "PaymentSales" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GetCurrentBatchStateResult {
    [pbr::OriginalName("CARD_PROCESSING_SVC_GET_CURRENT_BATCH_STATE_RESULT_UNKNOWN_ERROR")] CardProcessingSvcGetCurrentBatchStateResultUnknownError = 0,
    [pbr::OriginalName("CARD_PROCESSING_SVC_GET_CURRENT_BATCH_STATE_RESULT_PROCESSOR_COMMUNICATION_ERROR")] CardProcessingSvcGetCurrentBatchStateResultProcessorCommunicationError = 1,
    [pbr::OriginalName("CARD_PROCESSING_SVC_GET_CURRENT_BATCH_STATE_RESULT_BATCH_NOT_OPEN")] CardProcessingSvcGetCurrentBatchStateResultBatchNotOpen = 2,
    [pbr::OriginalName("CARD_PROCESSING_SVC_GET_CURRENT_BATCH_STATE_RESULT_BATCH_OPEN")] CardProcessingSvcGetCurrentBatchStateResultBatchOpen = 3,
  }

  #endregion

  #region Messages
  public sealed partial class GetOpenBatchStateResponse : pb::IMessage<GetOpenBatchStateResponse> {
    private static readonly pb::MessageParser<GetOpenBatchStateResponse> _parser = new pb::MessageParser<GetOpenBatchStateResponse>(() => new GetOpenBatchStateResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOpenBatchStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Cards.Transactions.GetOpenBatchStateResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenBatchStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenBatchStateResponse(GetOpenBatchStateResponse other) : this() {
      result_ = other.result_;
      pendingCaptures_ = other.pendingCaptures_.Clone();
      pendingRefunds_ = other.pendingRefunds_.Clone();
      paymentSales_ = other.paymentSales_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOpenBatchStateResponse Clone() {
      return new GetOpenBatchStateResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.Transactions.GetCurrentBatchStateResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.GetCurrentBatchStateResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "pending_captures" field.</summary>
    public const int PendingCapturesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> _repeated_pendingCaptures_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> pendingCaptures_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> PendingCaptures {
      get { return pendingCaptures_; }
    }

    /// <summary>Field number for the "pending_refunds" field.</summary>
    public const int PendingRefundsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund> _repeated_pendingRefunds_codec
        = pb::FieldCodec.ForMessage(26, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund> pendingRefunds_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund> PendingRefunds {
      get { return pendingRefunds_; }
    }

    /// <summary>Field number for the "payment_sales" field.</summary>
    public const int PaymentSalesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale> _repeated_paymentSales_codec
        = pb::FieldCodec.ForMessage(34, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale> paymentSales_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSale> PaymentSales {
      get { return paymentSales_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOpenBatchStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOpenBatchStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!pendingCaptures_.Equals(other.pendingCaptures_)) return false;
      if(!pendingRefunds_.Equals(other.pendingRefunds_)) return false;
      if(!paymentSales_.Equals(other.paymentSales_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= pendingCaptures_.GetHashCode();
      hash ^= pendingRefunds_.GetHashCode();
      hash ^= paymentSales_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      pendingCaptures_.WriteTo(output, _repeated_pendingCaptures_codec);
      pendingRefunds_.WriteTo(output, _repeated_pendingRefunds_codec);
      paymentSales_.WriteTo(output, _repeated_paymentSales_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += pendingCaptures_.CalculateSize(_repeated_pendingCaptures_codec);
      size += pendingRefunds_.CalculateSize(_repeated_pendingRefunds_codec);
      size += paymentSales_.CalculateSize(_repeated_paymentSales_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOpenBatchStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      pendingCaptures_.Add(other.pendingCaptures_);
      pendingRefunds_.Add(other.pendingRefunds_);
      paymentSales_.Add(other.paymentSales_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::HOLMS.Types.Money.Cards.Transactions.GetCurrentBatchStateResult) input.ReadEnum();
            break;
          }
          case 18: {
            pendingCaptures_.AddEntriesFrom(input, _repeated_pendingCaptures_codec);
            break;
          }
          case 26: {
            pendingRefunds_.AddEntriesFrom(input, _repeated_pendingRefunds_codec);
            break;
          }
          case 34: {
            paymentSales_.AddEntriesFrom(input, _repeated_paymentSales_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
