// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/channels/travel_agent.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Channels {

  /// <summary>Holder for reflection information generated from booking/channels/travel_agent.proto</summary>
  public static partial class TravelAgentReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/channels/travel_agent.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TravelAgentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNib29raW5nL2NoYW5uZWxzL3RyYXZlbF9hZ2VudC5wcm90bxIcaG9sbXMu",
            "dHlwZXMuYm9va2luZy5jaGFubmVscxomYm9va2luZy9jaGFubmVscy9jb21t",
            "aXNzaW9uX3R5cGUucHJvdG8aL2Jvb2tpbmcvaW5kaWNhdG9ycy90cmF2ZWxf",
            "YWdlbnRfaW5kaWNhdG9yLnByb3RvGiFwcmltaXRpdmUvZml4ZWRfcG9pbnRf",
            "cmF0aW8ucHJvdG8aH3ByaW1pdGl2ZS9tb25ldGFyeV9hbW91bnQucHJvdG8i",
            "0AQKC1RyYXZlbEFnZW50EkcKCWVudGl0eV9pZBgBIAEoCzI0LmhvbG1zLnR5",
            "cGVzLmJvb2tpbmcuaW5kaWNhdG9ycy5UcmF2ZWxBZ2VudEluZGljYXRvchIP",
            "CgdpYXRhX2lkGAIgASgJEkUKD2NvbW1pc3Npb25fdHlwZRgDIAEoDjIsLmhv",
            "bG1zLnR5cGVzLmJvb2tpbmcuY2hhbm5lbHMuQ29tbWlzc2lvblR5cGUSQAoR",
            "Y29tbWlzc2lvbl9hbW91bnQYBCABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRp",
            "dmUuTW9uZXRhcnlBbW91bnQSRQoVY29tbWlzc2lvbl9wZXJjZW50YWdlGAUg",
            "ASgLMiYuaG9sbXMudHlwZXMucHJpbWl0aXZlLkZpeGVkUG9pbnRSYXRpbxIS",
            "CgpnaXZlbl9uYW1lGAYgASgJEhMKC2ZhbWlseV9uYW1lGAcgASgJEhkKEWJ1",
            "c2luZXNzX2FkZHJlc3MxGAggASgJEhkKEWJ1c2luZXNzX2FkZHJlc3MyGAkg",
            "ASgJEhUKDWJ1c2luZXNzX2NpdHkYCiABKAkSFgoOYnVzaW5lc3Nfc3RhdGUY",
            "CyABKAkSFAoMYnVzaW5lc3NfemlwGAwgASgJEhcKD2J1c2luZXNzX25hdGlv",
            "bhgNIAEoCRIdChVidXNpbmVzc19waG9uZV9udW1iZXIYDiABKAkSGwoTYnVz",
            "aW5lc3NfZmF4X251bWJlchgPIAEoCRIeChZidXNpbmVzc19lbWFpbF9hZGRy",
            "ZXNzGBAgASgJQjFaEGJvb2tpbmcvY2hhbm5lbHOqAhxIT0xNUy5UeXBlcy5C",
            "b29raW5nLkNoYW5uZWxzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Channels.CommissionTypeReflection.Descriptor, global::HOLMS.Types.Booking.Indicators.TravelAgentIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.FixedPointRatioReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Channels.TravelAgent), global::HOLMS.Types.Booking.Channels.TravelAgent.Parser, new[]{ "EntityId", "IataId", "CommissionType", "CommissionAmount", "CommissionPercentage", "GivenName", "FamilyName", "BusinessAddress1", "BusinessAddress2", "BusinessCity", "BusinessState", "BusinessZip", "BusinessNation", "BusinessPhoneNumber", "BusinessFaxNumber", "BusinessEmailAddress" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TravelAgent : pb::IMessage<TravelAgent> {
    private static readonly pb::MessageParser<TravelAgent> _parser = new pb::MessageParser<TravelAgent>(() => new TravelAgent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TravelAgent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Channels.TravelAgentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TravelAgent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TravelAgent(TravelAgent other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      iataId_ = other.iataId_;
      commissionType_ = other.commissionType_;
      CommissionAmount = other.commissionAmount_ != null ? other.CommissionAmount.Clone() : null;
      CommissionPercentage = other.commissionPercentage_ != null ? other.CommissionPercentage.Clone() : null;
      givenName_ = other.givenName_;
      familyName_ = other.familyName_;
      businessAddress1_ = other.businessAddress1_;
      businessAddress2_ = other.businessAddress2_;
      businessCity_ = other.businessCity_;
      businessState_ = other.businessState_;
      businessZip_ = other.businessZip_;
      businessNation_ = other.businessNation_;
      businessPhoneNumber_ = other.businessPhoneNumber_;
      businessFaxNumber_ = other.businessFaxNumber_;
      businessEmailAddress_ = other.businessEmailAddress_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TravelAgent Clone() {
      return new TravelAgent(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "iata_id" field.</summary>
    public const int IataIdFieldNumber = 2;
    private string iataId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IataId {
      get { return iataId_; }
      set {
        iataId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commission_type" field.</summary>
    public const int CommissionTypeFieldNumber = 3;
    private global::HOLMS.Types.Booking.Channels.CommissionType commissionType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Channels.CommissionType CommissionType {
      get { return commissionType_; }
      set {
        commissionType_ = value;
      }
    }

    /// <summary>Field number for the "commission_amount" field.</summary>
    public const int CommissionAmountFieldNumber = 4;
    private global::HOLMS.Types.Primitive.MonetaryAmount commissionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CommissionAmount {
      get { return commissionAmount_; }
      set {
        commissionAmount_ = value;
      }
    }

    /// <summary>Field number for the "commission_percentage" field.</summary>
    public const int CommissionPercentageFieldNumber = 5;
    private global::HOLMS.Types.Primitive.FixedPointRatio commissionPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.FixedPointRatio CommissionPercentage {
      get { return commissionPercentage_; }
      set {
        commissionPercentage_ = value;
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 6;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 7;
    private string familyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_address1" field.</summary>
    public const int BusinessAddress1FieldNumber = 8;
    private string businessAddress1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessAddress1 {
      get { return businessAddress1_; }
      set {
        businessAddress1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_address2" field.</summary>
    public const int BusinessAddress2FieldNumber = 9;
    private string businessAddress2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessAddress2 {
      get { return businessAddress2_; }
      set {
        businessAddress2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_city" field.</summary>
    public const int BusinessCityFieldNumber = 10;
    private string businessCity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessCity {
      get { return businessCity_; }
      set {
        businessCity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_state" field.</summary>
    public const int BusinessStateFieldNumber = 11;
    private string businessState_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessState {
      get { return businessState_; }
      set {
        businessState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_zip" field.</summary>
    public const int BusinessZipFieldNumber = 12;
    private string businessZip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessZip {
      get { return businessZip_; }
      set {
        businessZip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_nation" field.</summary>
    public const int BusinessNationFieldNumber = 13;
    private string businessNation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessNation {
      get { return businessNation_; }
      set {
        businessNation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_phone_number" field.</summary>
    public const int BusinessPhoneNumberFieldNumber = 14;
    private string businessPhoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessPhoneNumber {
      get { return businessPhoneNumber_; }
      set {
        businessPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_fax_number" field.</summary>
    public const int BusinessFaxNumberFieldNumber = 15;
    private string businessFaxNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessFaxNumber {
      get { return businessFaxNumber_; }
      set {
        businessFaxNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_email_address" field.</summary>
    public const int BusinessEmailAddressFieldNumber = 16;
    private string businessEmailAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessEmailAddress {
      get { return businessEmailAddress_; }
      set {
        businessEmailAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TravelAgent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TravelAgent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (IataId != other.IataId) return false;
      if (CommissionType != other.CommissionType) return false;
      if (!object.Equals(CommissionAmount, other.CommissionAmount)) return false;
      if (!object.Equals(CommissionPercentage, other.CommissionPercentage)) return false;
      if (GivenName != other.GivenName) return false;
      if (FamilyName != other.FamilyName) return false;
      if (BusinessAddress1 != other.BusinessAddress1) return false;
      if (BusinessAddress2 != other.BusinessAddress2) return false;
      if (BusinessCity != other.BusinessCity) return false;
      if (BusinessState != other.BusinessState) return false;
      if (BusinessZip != other.BusinessZip) return false;
      if (BusinessNation != other.BusinessNation) return false;
      if (BusinessPhoneNumber != other.BusinessPhoneNumber) return false;
      if (BusinessFaxNumber != other.BusinessFaxNumber) return false;
      if (BusinessEmailAddress != other.BusinessEmailAddress) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (IataId.Length != 0) hash ^= IataId.GetHashCode();
      if (CommissionType != 0) hash ^= CommissionType.GetHashCode();
      if (commissionAmount_ != null) hash ^= CommissionAmount.GetHashCode();
      if (commissionPercentage_ != null) hash ^= CommissionPercentage.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (BusinessAddress1.Length != 0) hash ^= BusinessAddress1.GetHashCode();
      if (BusinessAddress2.Length != 0) hash ^= BusinessAddress2.GetHashCode();
      if (BusinessCity.Length != 0) hash ^= BusinessCity.GetHashCode();
      if (BusinessState.Length != 0) hash ^= BusinessState.GetHashCode();
      if (BusinessZip.Length != 0) hash ^= BusinessZip.GetHashCode();
      if (BusinessNation.Length != 0) hash ^= BusinessNation.GetHashCode();
      if (BusinessPhoneNumber.Length != 0) hash ^= BusinessPhoneNumber.GetHashCode();
      if (BusinessFaxNumber.Length != 0) hash ^= BusinessFaxNumber.GetHashCode();
      if (BusinessEmailAddress.Length != 0) hash ^= BusinessEmailAddress.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (IataId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IataId);
      }
      if (CommissionType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) CommissionType);
      }
      if (commissionAmount_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CommissionAmount);
      }
      if (commissionPercentage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CommissionPercentage);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GivenName);
      }
      if (FamilyName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FamilyName);
      }
      if (BusinessAddress1.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BusinessAddress1);
      }
      if (BusinessAddress2.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BusinessAddress2);
      }
      if (BusinessCity.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BusinessCity);
      }
      if (BusinessState.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(BusinessState);
      }
      if (BusinessZip.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BusinessZip);
      }
      if (BusinessNation.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BusinessNation);
      }
      if (BusinessPhoneNumber.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(BusinessPhoneNumber);
      }
      if (BusinessFaxNumber.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BusinessFaxNumber);
      }
      if (BusinessEmailAddress.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(BusinessEmailAddress);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (IataId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IataId);
      }
      if (CommissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommissionType);
      }
      if (commissionAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommissionAmount);
      }
      if (commissionPercentage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommissionPercentage);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (BusinessAddress1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessAddress1);
      }
      if (BusinessAddress2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessAddress2);
      }
      if (BusinessCity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessCity);
      }
      if (BusinessState.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessState);
      }
      if (BusinessZip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessZip);
      }
      if (BusinessNation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessNation);
      }
      if (BusinessPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessPhoneNumber);
      }
      if (BusinessFaxNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessFaxNumber);
      }
      if (BusinessEmailAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BusinessEmailAddress);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TravelAgent other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.IataId.Length != 0) {
        IataId = other.IataId;
      }
      if (other.CommissionType != 0) {
        CommissionType = other.CommissionType;
      }
      if (other.commissionAmount_ != null) {
        if (commissionAmount_ == null) {
          commissionAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CommissionAmount.MergeFrom(other.CommissionAmount);
      }
      if (other.commissionPercentage_ != null) {
        if (commissionPercentage_ == null) {
          commissionPercentage_ = new global::HOLMS.Types.Primitive.FixedPointRatio();
        }
        CommissionPercentage.MergeFrom(other.CommissionPercentage);
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.BusinessAddress1.Length != 0) {
        BusinessAddress1 = other.BusinessAddress1;
      }
      if (other.BusinessAddress2.Length != 0) {
        BusinessAddress2 = other.BusinessAddress2;
      }
      if (other.BusinessCity.Length != 0) {
        BusinessCity = other.BusinessCity;
      }
      if (other.BusinessState.Length != 0) {
        BusinessState = other.BusinessState;
      }
      if (other.BusinessZip.Length != 0) {
        BusinessZip = other.BusinessZip;
      }
      if (other.BusinessNation.Length != 0) {
        BusinessNation = other.BusinessNation;
      }
      if (other.BusinessPhoneNumber.Length != 0) {
        BusinessPhoneNumber = other.BusinessPhoneNumber;
      }
      if (other.BusinessFaxNumber.Length != 0) {
        BusinessFaxNumber = other.BusinessFaxNumber;
      }
      if (other.BusinessEmailAddress.Length != 0) {
        BusinessEmailAddress = other.BusinessEmailAddress;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Booking.Indicators.TravelAgentIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            IataId = input.ReadString();
            break;
          }
          case 24: {
            commissionType_ = (global::HOLMS.Types.Booking.Channels.CommissionType) input.ReadEnum();
            break;
          }
          case 34: {
            if (commissionAmount_ == null) {
              commissionAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(commissionAmount_);
            break;
          }
          case 42: {
            if (commissionPercentage_ == null) {
              commissionPercentage_ = new global::HOLMS.Types.Primitive.FixedPointRatio();
            }
            input.ReadMessage(commissionPercentage_);
            break;
          }
          case 50: {
            GivenName = input.ReadString();
            break;
          }
          case 58: {
            FamilyName = input.ReadString();
            break;
          }
          case 66: {
            BusinessAddress1 = input.ReadString();
            break;
          }
          case 74: {
            BusinessAddress2 = input.ReadString();
            break;
          }
          case 82: {
            BusinessCity = input.ReadString();
            break;
          }
          case 90: {
            BusinessState = input.ReadString();
            break;
          }
          case 98: {
            BusinessZip = input.ReadString();
            break;
          }
          case 106: {
            BusinessNation = input.ReadString();
            break;
          }
          case 114: {
            BusinessPhoneNumber = input.ReadString();
            break;
          }
          case 122: {
            BusinessFaxNumber = input.ReadString();
            break;
          }
          case 130: {
            BusinessEmailAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
