// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crm/rpc/guest_svc.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace HOLMS.Types.CRM.RPC {
  public static class GuestSvc
  {
    static readonly string __ServiceName = "holms.types.crm.rpc.GuestSvc";

    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> __Marshaller_GuestSvcManyGuestsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.Guests.GuestIndicator> __Marshaller_GuestIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Guests.GuestIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.Guests.Guest> __Marshaller_Guest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Guests.Guest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest> __Marshaller_GuestSvcGetManyRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest> __Marshaller_GuestSvcPrefixSearchRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest> __Marshaller_GuestSvcSearchByEmailRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate> __Marshaller_ReservationNoteTemplate = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator> __Marshaller_ReservationNoteTemplateIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse> __Marshaller_GuestSvcGetNoteTemplatesForGuestResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse.Parser.ParseFrom);

    static readonly Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> __Method_All = new Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse>(
        MethodType.Unary,
        __ServiceName,
        "All",
        __Marshaller_Empty,
        __Marshaller_GuestSvcManyGuestsResponse);

    static readonly Method<global::HOLMS.Types.CRM.Guests.GuestIndicator, global::HOLMS.Types.CRM.Guests.Guest> __Method_GetById = new Method<global::HOLMS.Types.CRM.Guests.GuestIndicator, global::HOLMS.Types.CRM.Guests.Guest>(
        MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_GuestIndicator,
        __Marshaller_Guest);

    static readonly Method<global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> __Method_GetSeveralById = new Method<global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetSeveralById",
        __Marshaller_GuestSvcGetManyRequest,
        __Marshaller_GuestSvcManyGuestsResponse);

    static readonly Method<global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> __Method_SearchByNamePrefix = new Method<global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse>(
        MethodType.Unary,
        __ServiceName,
        "SearchByNamePrefix",
        __Marshaller_GuestSvcPrefixSearchRequest,
        __Marshaller_GuestSvcManyGuestsResponse);

    static readonly Method<global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> __Method_SearchByEmailAddress = new Method<global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest, global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse>(
        MethodType.Unary,
        __ServiceName,
        "SearchByEmailAddress",
        __Marshaller_GuestSvcSearchByEmailRequest,
        __Marshaller_GuestSvcManyGuestsResponse);

    static readonly Method<global::HOLMS.Types.CRM.Guests.Guest, global::HOLMS.Types.CRM.Guests.Guest> __Method_Create = new Method<global::HOLMS.Types.CRM.Guests.Guest, global::HOLMS.Types.CRM.Guests.Guest>(
        MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Guest,
        __Marshaller_Guest);

    static readonly Method<global::HOLMS.Types.CRM.Guests.Guest, global::HOLMS.Types.CRM.Guests.Guest> __Method_Update = new Method<global::HOLMS.Types.CRM.Guests.Guest, global::HOLMS.Types.CRM.Guests.Guest>(
        MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Guest,
        __Marshaller_Guest);

    static readonly Method<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddNoteTemplateToGuest = new Method<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "AddNoteTemplateToGuest",
        __Marshaller_ReservationNoteTemplate,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AmendNoteTemplate = new Method<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "AmendNoteTemplate",
        __Marshaller_ReservationNoteTemplate,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveNoteTemplateFromGuest = new Method<global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "RemoveNoteTemplateFromGuest",
        __Marshaller_ReservationNoteTemplateIndicator,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.CRM.Guests.GuestIndicator, global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse> __Method_GetNoteTemplatesForGuest = new Method<global::HOLMS.Types.CRM.Guests.GuestIndicator, global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetNoteTemplatesForGuest",
        __Marshaller_GuestIndicator,
        __Marshaller_GuestSvcGetNoteTemplatesForGuestResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.CRM.RPC.GuestSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GuestSvc</summary>
    public abstract class GuestSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> All(global::Google.Protobuf.WellKnownTypes.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.Guests.Guest> GetById(global::HOLMS.Types.CRM.Guests.GuestIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> GetSeveralById(global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> SearchByNamePrefix(global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> SearchByEmailAddress(global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.Guests.Guest> Create(global::HOLMS.Types.CRM.Guests.Guest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.Guests.Guest> Update(global::HOLMS.Types.CRM.Guests.Guest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> AddNoteTemplateToGuest(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> AmendNoteTemplate(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> RemoveNoteTemplateFromGuest(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse> GetNoteTemplatesForGuest(global::HOLMS.Types.CRM.Guests.GuestIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GuestSvc</summary>
    public class GuestSvcClient : ClientBase<GuestSvcClient>
    {
      /// <summary>Creates a new client for GuestSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GuestSvcClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GuestSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GuestSvcClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GuestSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GuestSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse All(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return All(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse All(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_All, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AllAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_All, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.Guests.Guest GetById(global::HOLMS.Types.CRM.Guests.GuestIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetById(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.Guests.Guest GetById(global::HOLMS.Types.CRM.Guests.GuestIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.Guest> GetByIdAsync(global::HOLMS.Types.CRM.Guests.GuestIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.Guest> GetByIdAsync(global::HOLMS.Types.CRM.Guests.GuestIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse GetSeveralById(global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetSeveralById(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse GetSeveralById(global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSeveralById, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> GetSeveralByIdAsync(global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetSeveralByIdAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> GetSeveralByIdAsync(global::HOLMS.Types.CRM.RPC.GuestSvcGetManyRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSeveralById, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse SearchByNamePrefix(global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchByNamePrefix(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse SearchByNamePrefix(global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchByNamePrefix, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> SearchByNamePrefixAsync(global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchByNamePrefixAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> SearchByNamePrefixAsync(global::HOLMS.Types.CRM.RPC.GuestSvcPrefixSearchRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchByNamePrefix, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse SearchByEmailAddress(global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchByEmailAddress(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse SearchByEmailAddress(global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchByEmailAddress, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> SearchByEmailAddressAsync(global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchByEmailAddressAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcManyGuestsResponse> SearchByEmailAddressAsync(global::HOLMS.Types.CRM.RPC.GuestSvcSearchByEmailRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchByEmailAddress, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.Guests.Guest Create(global::HOLMS.Types.CRM.Guests.Guest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.Guests.Guest Create(global::HOLMS.Types.CRM.Guests.Guest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.Guest> CreateAsync(global::HOLMS.Types.CRM.Guests.Guest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.Guest> CreateAsync(global::HOLMS.Types.CRM.Guests.Guest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.Guests.Guest Update(global::HOLMS.Types.CRM.Guests.Guest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.Guests.Guest Update(global::HOLMS.Types.CRM.Guests.Guest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.Guest> UpdateAsync(global::HOLMS.Types.CRM.Guests.Guest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.Guests.Guest> UpdateAsync(global::HOLMS.Types.CRM.Guests.Guest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddNoteTemplateToGuest(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddNoteTemplateToGuest(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddNoteTemplateToGuest(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddNoteTemplateToGuest, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddNoteTemplateToGuestAsync(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddNoteTemplateToGuestAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddNoteTemplateToGuestAsync(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddNoteTemplateToGuest, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AmendNoteTemplate(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AmendNoteTemplate(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AmendNoteTemplate(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AmendNoteTemplate, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AmendNoteTemplateAsync(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AmendNoteTemplateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AmendNoteTemplateAsync(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplate request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AmendNoteTemplate, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveNoteTemplateFromGuest(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveNoteTemplateFromGuest(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveNoteTemplateFromGuest(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveNoteTemplateFromGuest, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveNoteTemplateFromGuestAsync(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveNoteTemplateFromGuestAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveNoteTemplateFromGuestAsync(global::HOLMS.Types.CRM.Guests.ReservationNoteTemplateIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveNoteTemplateFromGuest, null, options, request);
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse GetNoteTemplatesForGuest(global::HOLMS.Types.CRM.Guests.GuestIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetNoteTemplatesForGuest(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse GetNoteTemplatesForGuest(global::HOLMS.Types.CRM.Guests.GuestIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNoteTemplatesForGuest, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse> GetNoteTemplatesForGuestAsync(global::HOLMS.Types.CRM.Guests.GuestIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetNoteTemplatesForGuestAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.CRM.RPC.GuestSvcGetNoteTemplatesForGuestResponse> GetNoteTemplatesForGuestAsync(global::HOLMS.Types.CRM.Guests.GuestIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNoteTemplatesForGuest, null, options, request);
      }
      protected override GuestSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GuestSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(GuestSvcBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_All, serviceImpl.All)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_GetSeveralById, serviceImpl.GetSeveralById)
          .AddMethod(__Method_SearchByNamePrefix, serviceImpl.SearchByNamePrefix)
          .AddMethod(__Method_SearchByEmailAddress, serviceImpl.SearchByEmailAddress)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_AddNoteTemplateToGuest, serviceImpl.AddNoteTemplateToGuest)
          .AddMethod(__Method_AmendNoteTemplate, serviceImpl.AmendNoteTemplate)
          .AddMethod(__Method_RemoveNoteTemplateFromGuest, serviceImpl.RemoveNoteTemplateFromGuest)
          .AddMethod(__Method_GetNoteTemplatesForGuest, serviceImpl.GetNoteTemplatesForGuest).Build();
    }

  }
}
#endregion
