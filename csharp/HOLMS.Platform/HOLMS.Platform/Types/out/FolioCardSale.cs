// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/folio_card_sale.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio {

  /// <summary>Holder for reflection information generated from folio/folio_card_sale.proto</summary>
  public static partial class FolioCardSaleReflection {

    #region Descriptor
    /// <summary>File descriptor for folio/folio_card_sale.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FolioCardSaleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtmb2xpby9mb2xpb19jYXJkX3NhbGUucHJvdG8SEWhvbG1zLnR5cGVzLmZv",
            "bGlvGiNmb2xpby9mb2xpb19jYXJkX3NhbGVfcHVycG9zZS5wcm90bxokZm9s",
            "aW8vZm9saW9fZ3Vlc3RfcGF5bWVudF9jYXJkLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGiBpYW0vc3RhZmZfbWVtYmVyX2luZGlj",
            "YXRvci5wcm90bxo5bW9uZXkvY2FyZHMvdHJhbnNhY3Rpb25zL2F1dGhvcml6",
            "YXRpb25fZW50cnlfbWV0aG9kLnByb3RvGi5tb25leS9jYXJkcy90cmFuc2Fj",
            "dGlvbnMvY2FyZF9zYWxlX3N0YXRlLnByb3RvGjptb25leS9jYXJkcy90cmFu",
            "c2FjdGlvbnMvcGF5bWVudF9jYXJkX3NhbGVfaW5kaWNhdG9yLnByb3RvGh9w",
            "cmltaXRpdmUvbW9uZXRhcnlfYW1vdW50LnByb3RvIqwGCg1Gb2xpb0NhcmRT",
            "YWxlEkwKBHNhbGUYASABKAsyPi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50",
            "cmFuc2FjdGlvbnMuUGF5bWVudENhcmRTYWxlSW5kaWNhdG9yEjYKBGNhcmQY",
            "AiABKAsyKC5ob2xtcy50eXBlcy5mb2xpby5Gb2xpb0d1ZXN0UGF5bWVudENh",
            "cmQSOAoHcHVycG9zZRgDIAEoDjInLmhvbG1zLnR5cGVzLmZvbGlvLkZvbGlv",
            "Q2FyZFNhbGVQdXJwb3NlEkcKCnNhbGVfc3RhdGUYBCABKA4yMy5ob2xtcy50",
            "eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuQ2FyZFNhbGVTdGF0ZRI+",
            "Cg9vcGVuX2F1dGhvcml6ZWQYBSABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRp",
            "dmUuTW9uZXRhcnlBbW91bnQSNwoIY2FwdHVyZWQYBiABKAsyJS5ob2xtcy50",
            "eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSVAoMZW50cnlfbWV0aG9k",
            "GAcgASgOMj4uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rpb25z",
            "LkF1dGhvcml6YXRpb25FbnRyeU1ldGhvZBIxCg1hdXRob3JpemVkX2F0GAgg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgtjYXB0dXJlZF9h",
            "dBgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGQoRYXBwbGlj",
            "YXRpb25fbGFiZWwYCiABKAkSDQoFYV9pX2QYCyABKAkSGgoSYXBwbGljYXRp",
            "b25fY3J5cHRvGAwgASgJEhUKDWFwcHJvdmFsX2NvZGUYDSABKAkSOgoLcmVj",
            "ZWl2ZWRfYnkYDiABKAsyJS5ob2xtcy50eXBlcy5pYW0uU3RhZmZNZW1iZXJJ",
            "bmRpY2F0b3ISRgoXZmluYWxfYXV0aG9yaXplZF9hbW91bnQYDyABKAsyJS5o",
            "b2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnRCFKoCEUhPTE1T",
            "LlR5cGVzLkZvbGlvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Folio.FolioCardSalePurposeReflection.Descriptor, global::HOLMS.Types.Folio.FolioGuestPaymentCardReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.IAM.StaffMemberIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethodReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.CardSaleStateReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.FolioCardSale), global::HOLMS.Types.Folio.FolioCardSale.Parser, new[]{ "Sale", "Card", "Purpose", "SaleState", "OpenAuthorized", "Captured", "EntryMethod", "AuthorizedAt", "CapturedAt", "ApplicationLabel", "AID", "ApplicationCrypto", "ApprovalCode", "ReceivedBy", "FinalAuthorizedAmount" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FolioCardSale : pb::IMessage<FolioCardSale> {
    private static readonly pb::MessageParser<FolioCardSale> _parser = new pb::MessageParser<FolioCardSale>(() => new FolioCardSale());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolioCardSale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.FolioCardSaleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioCardSale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioCardSale(FolioCardSale other) : this() {
      Sale = other.sale_ != null ? other.Sale.Clone() : null;
      Card = other.card_ != null ? other.Card.Clone() : null;
      purpose_ = other.purpose_;
      saleState_ = other.saleState_;
      OpenAuthorized = other.openAuthorized_ != null ? other.OpenAuthorized.Clone() : null;
      Captured = other.captured_ != null ? other.Captured.Clone() : null;
      entryMethod_ = other.entryMethod_;
      AuthorizedAt = other.authorizedAt_ != null ? other.AuthorizedAt.Clone() : null;
      CapturedAt = other.capturedAt_ != null ? other.CapturedAt.Clone() : null;
      applicationLabel_ = other.applicationLabel_;
      aID_ = other.aID_;
      applicationCrypto_ = other.applicationCrypto_;
      approvalCode_ = other.approvalCode_;
      ReceivedBy = other.receivedBy_ != null ? other.ReceivedBy.Clone() : null;
      FinalAuthorizedAmount = other.finalAuthorizedAmount_ != null ? other.FinalAuthorizedAmount.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioCardSale Clone() {
      return new FolioCardSale(this);
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator sale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 2;
    private global::HOLMS.Types.Folio.FolioGuestPaymentCard card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FolioGuestPaymentCard Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::HOLMS.Types.Folio.FolioCardSalePurpose purpose_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FolioCardSalePurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    /// <summary>Field number for the "sale_state" field.</summary>
    public const int SaleStateFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.Transactions.CardSaleState saleState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.CardSaleState SaleState {
      get { return saleState_; }
      set {
        saleState_ = value;
      }
    }

    /// <summary>Field number for the "open_authorized" field.</summary>
    public const int OpenAuthorizedFieldNumber = 5;
    private global::HOLMS.Types.Primitive.MonetaryAmount openAuthorized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount OpenAuthorized {
      get { return openAuthorized_; }
      set {
        openAuthorized_ = value;
      }
    }

    /// <summary>Field number for the "captured" field.</summary>
    public const int CapturedFieldNumber = 6;
    private global::HOLMS.Types.Primitive.MonetaryAmount captured_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Captured {
      get { return captured_; }
      set {
        captured_ = value;
      }
    }

    /// <summary>Field number for the "entry_method" field.</summary>
    public const int EntryMethodFieldNumber = 7;
    private global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethod entryMethod_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethod EntryMethod {
      get { return entryMethod_; }
      set {
        entryMethod_ = value;
      }
    }

    /// <summary>Field number for the "authorized_at" field.</summary>
    public const int AuthorizedAtFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp authorizedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AuthorizedAt {
      get { return authorizedAt_; }
      set {
        authorizedAt_ = value;
      }
    }

    /// <summary>Field number for the "captured_at" field.</summary>
    public const int CapturedAtFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp capturedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CapturedAt {
      get { return capturedAt_; }
      set {
        capturedAt_ = value;
      }
    }

    /// <summary>Field number for the "application_label" field.</summary>
    public const int ApplicationLabelFieldNumber = 10;
    private string applicationLabel_ = "";
    /// <summary>
    /// Card network stuff
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationLabel {
      get { return applicationLabel_; }
      set {
        applicationLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_i_d" field.</summary>
    public const int AIDFieldNumber = 11;
    private string aID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AID {
      get { return aID_; }
      set {
        aID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_crypto" field.</summary>
    public const int ApplicationCryptoFieldNumber = 12;
    private string applicationCrypto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationCrypto {
      get { return applicationCrypto_; }
      set {
        applicationCrypto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "approval_code" field.</summary>
    public const int ApprovalCodeFieldNumber = 13;
    private string approvalCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApprovalCode {
      get { return approvalCode_; }
      set {
        approvalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "received_by" field.</summary>
    public const int ReceivedByFieldNumber = 14;
    private global::HOLMS.Types.IAM.StaffMemberIndicator receivedBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.IAM.StaffMemberIndicator ReceivedBy {
      get { return receivedBy_; }
      set {
        receivedBy_ = value;
      }
    }

    /// <summary>Field number for the "final_authorized_amount" field.</summary>
    public const int FinalAuthorizedAmountFieldNumber = 15;
    private global::HOLMS.Types.Primitive.MonetaryAmount finalAuthorizedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount FinalAuthorizedAmount {
      get { return finalAuthorizedAmount_; }
      set {
        finalAuthorizedAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolioCardSale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolioCardSale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sale, other.Sale)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      if (Purpose != other.Purpose) return false;
      if (SaleState != other.SaleState) return false;
      if (!object.Equals(OpenAuthorized, other.OpenAuthorized)) return false;
      if (!object.Equals(Captured, other.Captured)) return false;
      if (EntryMethod != other.EntryMethod) return false;
      if (!object.Equals(AuthorizedAt, other.AuthorizedAt)) return false;
      if (!object.Equals(CapturedAt, other.CapturedAt)) return false;
      if (ApplicationLabel != other.ApplicationLabel) return false;
      if (AID != other.AID) return false;
      if (ApplicationCrypto != other.ApplicationCrypto) return false;
      if (ApprovalCode != other.ApprovalCode) return false;
      if (!object.Equals(ReceivedBy, other.ReceivedBy)) return false;
      if (!object.Equals(FinalAuthorizedAmount, other.FinalAuthorizedAmount)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sale_ != null) hash ^= Sale.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (Purpose != 0) hash ^= Purpose.GetHashCode();
      if (SaleState != 0) hash ^= SaleState.GetHashCode();
      if (openAuthorized_ != null) hash ^= OpenAuthorized.GetHashCode();
      if (captured_ != null) hash ^= Captured.GetHashCode();
      if (EntryMethod != 0) hash ^= EntryMethod.GetHashCode();
      if (authorizedAt_ != null) hash ^= AuthorizedAt.GetHashCode();
      if (capturedAt_ != null) hash ^= CapturedAt.GetHashCode();
      if (ApplicationLabel.Length != 0) hash ^= ApplicationLabel.GetHashCode();
      if (AID.Length != 0) hash ^= AID.GetHashCode();
      if (ApplicationCrypto.Length != 0) hash ^= ApplicationCrypto.GetHashCode();
      if (ApprovalCode.Length != 0) hash ^= ApprovalCode.GetHashCode();
      if (receivedBy_ != null) hash ^= ReceivedBy.GetHashCode();
      if (finalAuthorizedAmount_ != null) hash ^= FinalAuthorizedAmount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sale_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sale);
      }
      if (card_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Card);
      }
      if (Purpose != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Purpose);
      }
      if (SaleState != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SaleState);
      }
      if (openAuthorized_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OpenAuthorized);
      }
      if (captured_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Captured);
      }
      if (EntryMethod != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) EntryMethod);
      }
      if (authorizedAt_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AuthorizedAt);
      }
      if (capturedAt_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CapturedAt);
      }
      if (ApplicationLabel.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ApplicationLabel);
      }
      if (AID.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(AID);
      }
      if (ApplicationCrypto.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ApplicationCrypto);
      }
      if (ApprovalCode.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ApprovalCode);
      }
      if (receivedBy_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ReceivedBy);
      }
      if (finalAuthorizedAmount_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(FinalAuthorizedAmount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sale);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (Purpose != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Purpose);
      }
      if (SaleState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SaleState);
      }
      if (openAuthorized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OpenAuthorized);
      }
      if (captured_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Captured);
      }
      if (EntryMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntryMethod);
      }
      if (authorizedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthorizedAt);
      }
      if (capturedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapturedAt);
      }
      if (ApplicationLabel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationLabel);
      }
      if (AID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AID);
      }
      if (ApplicationCrypto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationCrypto);
      }
      if (ApprovalCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApprovalCode);
      }
      if (receivedBy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceivedBy);
      }
      if (finalAuthorizedAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinalAuthorizedAmount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolioCardSale other) {
      if (other == null) {
        return;
      }
      if (other.sale_ != null) {
        if (sale_ == null) {
          sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
        }
        Sale.MergeFrom(other.Sale);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::HOLMS.Types.Folio.FolioGuestPaymentCard();
        }
        Card.MergeFrom(other.Card);
      }
      if (other.Purpose != 0) {
        Purpose = other.Purpose;
      }
      if (other.SaleState != 0) {
        SaleState = other.SaleState;
      }
      if (other.openAuthorized_ != null) {
        if (openAuthorized_ == null) {
          openAuthorized_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        OpenAuthorized.MergeFrom(other.OpenAuthorized);
      }
      if (other.captured_ != null) {
        if (captured_ == null) {
          captured_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Captured.MergeFrom(other.Captured);
      }
      if (other.EntryMethod != 0) {
        EntryMethod = other.EntryMethod;
      }
      if (other.authorizedAt_ != null) {
        if (authorizedAt_ == null) {
          authorizedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AuthorizedAt.MergeFrom(other.AuthorizedAt);
      }
      if (other.capturedAt_ != null) {
        if (capturedAt_ == null) {
          capturedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CapturedAt.MergeFrom(other.CapturedAt);
      }
      if (other.ApplicationLabel.Length != 0) {
        ApplicationLabel = other.ApplicationLabel;
      }
      if (other.AID.Length != 0) {
        AID = other.AID;
      }
      if (other.ApplicationCrypto.Length != 0) {
        ApplicationCrypto = other.ApplicationCrypto;
      }
      if (other.ApprovalCode.Length != 0) {
        ApprovalCode = other.ApprovalCode;
      }
      if (other.receivedBy_ != null) {
        if (receivedBy_ == null) {
          receivedBy_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
        }
        ReceivedBy.MergeFrom(other.ReceivedBy);
      }
      if (other.finalAuthorizedAmount_ != null) {
        if (finalAuthorizedAmount_ == null) {
          finalAuthorizedAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        FinalAuthorizedAmount.MergeFrom(other.FinalAuthorizedAmount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (sale_ == null) {
              sale_ = new global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleIndicator();
            }
            input.ReadMessage(sale_);
            break;
          }
          case 18: {
            if (card_ == null) {
              card_ = new global::HOLMS.Types.Folio.FolioGuestPaymentCard();
            }
            input.ReadMessage(card_);
            break;
          }
          case 24: {
            purpose_ = (global::HOLMS.Types.Folio.FolioCardSalePurpose) input.ReadEnum();
            break;
          }
          case 32: {
            saleState_ = (global::HOLMS.Types.Money.Cards.Transactions.CardSaleState) input.ReadEnum();
            break;
          }
          case 42: {
            if (openAuthorized_ == null) {
              openAuthorized_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(openAuthorized_);
            break;
          }
          case 50: {
            if (captured_ == null) {
              captured_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(captured_);
            break;
          }
          case 56: {
            entryMethod_ = (global::HOLMS.Types.Money.Cards.Transactions.AuthorizationEntryMethod) input.ReadEnum();
            break;
          }
          case 66: {
            if (authorizedAt_ == null) {
              authorizedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(authorizedAt_);
            break;
          }
          case 74: {
            if (capturedAt_ == null) {
              capturedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(capturedAt_);
            break;
          }
          case 82: {
            ApplicationLabel = input.ReadString();
            break;
          }
          case 90: {
            AID = input.ReadString();
            break;
          }
          case 98: {
            ApplicationCrypto = input.ReadString();
            break;
          }
          case 106: {
            ApprovalCode = input.ReadString();
            break;
          }
          case 114: {
            if (receivedBy_ == null) {
              receivedBy_ = new global::HOLMS.Types.IAM.StaffMemberIndicator();
            }
            input.ReadMessage(receivedBy_);
            break;
          }
          case 122: {
            if (finalAuthorizedAmount_ == null) {
              finalAuthorizedAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(finalAuthorizedAmount_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
