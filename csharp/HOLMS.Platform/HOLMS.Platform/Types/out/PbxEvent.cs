// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operations/pbx_events/pbx_event.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Operations.PBXEvents {

  /// <summary>Holder for reflection information generated from operations/pbx_events/pbx_event.proto</summary>
  public static partial class PbxEventReflection {

    #region Descriptor
    /// <summary>File descriptor for operations/pbx_events/pbx_event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbxEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVvcGVyYXRpb25zL3BieF9ldmVudHMvcGJ4X2V2ZW50LnByb3RvEiFob2xt",
            "cy50eXBlcy5vcGVyYXRpb25zLnBieF9ldmVudHMaH2dvb2dsZS9wcm90b2J1",
            "Zi90aW1lc3RhbXAucHJvdG8iUwoIUEJYRXZlbnQSFgoOcmF3X2V2ZW50X3Rl",
            "eHQYASABKAkSLwoLcmVjb3JkZWRfYXQYAiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQjlaFG9wZXJhdGlvbnMvcGJ4ZXZlbnRzqgIgSE9MTVMu",
            "VHlwZXMuT3BlcmF0aW9ucy5QQlhFdmVudHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Operations.PBXEvents.PBXEvent), global::HOLMS.Types.Operations.PBXEvents.PBXEvent.Parser, new[]{ "RawEventText", "RecordedAt" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PBXEvent : pb::IMessage<PBXEvent> {
    private static readonly pb::MessageParser<PBXEvent> _parser = new pb::MessageParser<PBXEvent>(() => new PBXEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PBXEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Operations.PBXEvents.PbxEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBXEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBXEvent(PBXEvent other) : this() {
      rawEventText_ = other.rawEventText_;
      RecordedAt = other.recordedAt_ != null ? other.RecordedAt.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PBXEvent Clone() {
      return new PBXEvent(this);
    }

    /// <summary>Field number for the "raw_event_text" field.</summary>
    public const int RawEventTextFieldNumber = 1;
    private string rawEventText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RawEventText {
      get { return rawEventText_; }
      set {
        rawEventText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recorded_at" field.</summary>
    public const int RecordedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp recordedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RecordedAt {
      get { return recordedAt_; }
      set {
        recordedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PBXEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PBXEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RawEventText != other.RawEventText) return false;
      if (!object.Equals(RecordedAt, other.RecordedAt)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RawEventText.Length != 0) hash ^= RawEventText.GetHashCode();
      if (recordedAt_ != null) hash ^= RecordedAt.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RawEventText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RawEventText);
      }
      if (recordedAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RecordedAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RawEventText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RawEventText);
      }
      if (recordedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordedAt);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PBXEvent other) {
      if (other == null) {
        return;
      }
      if (other.RawEventText.Length != 0) {
        RawEventText = other.RawEventText;
      }
      if (other.recordedAt_ != null) {
        if (recordedAt_ == null) {
          recordedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RecordedAt.MergeFrom(other.RecordedAt);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RawEventText = input.ReadString();
            break;
          }
          case 18: {
            if (recordedAt_ == null) {
              recordedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(recordedAt_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
