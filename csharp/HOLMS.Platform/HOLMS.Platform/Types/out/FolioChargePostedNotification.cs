// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/folio_charge_posted_notification.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking {

  /// <summary>Holder for reflection information generated from booking/folio_charge_posted_notification.proto</summary>
  public static partial class FolioChargePostedNotificationReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/folio_charge_posted_notification.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FolioChargePostedNotificationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5ib29raW5nL2ZvbGlvX2NoYXJnZV9wb3N0ZWRfbm90aWZpY2F0aW9uLnBy",
            "b3RvEhNob2xtcy50eXBlcy5ib29raW5nGh9wcmltaXRpdmUvbW9uZXRhcnlf",
            "YW1vdW50LnByb3RvGh1wcmltaXRpdmUvcGJfbG9jYWxfZGF0ZS5wcm90bxog",
            "Y3JtL2d1ZXN0cy9ndWVzdF9pbmRpY2F0b3IucHJvdG8aJW9wZXJhdGlvbnMv",
            "cm9vbXMvcm9vbV9pbmRpY2F0b3IucHJvdG8aK3N1cHBseS9yb29tX3R5cGVz",
            "L3Jvb21fdHlwZV9pbmRpY2F0b3IucHJvdG8i7QIKHUZvbGlvQ2hhcmdlUG9z",
            "dGVkTm90aWZpY2F0aW9uEhEKCWpfd190b2tlbhgBIAEoCRIzCgdvcHNkYXRl",
            "GAIgASgLMiIuaG9sbXMudHlwZXMucHJpbWl0aXZlLlBiTG9jYWxEYXRlEkQK",
            "FXByZXRheF9sb2RnaW5nX2NoYXJnZRgDIAEoCzIlLmhvbG1zLnR5cGVzLnBy",
            "aW1pdGl2ZS5Nb25ldGFyeUFtb3VudBI8Cgdyb29tX2lkGAQgASgLMisuaG9s",
            "bXMudHlwZXMub3BlcmF0aW9ucy5yb29tcy5Sb29tSW5kaWNhdG9yEkYKDHJv",
            "b21fdHlwZV9pZBgFIAEoCzIwLmhvbG1zLnR5cGVzLnN1cHBseS5yb29tX3R5",
            "cGVzLlJvb21UeXBlSW5kaWNhdG9yEjgKCGd1ZXN0X2lkGAYgASgLMiYuaG9s",
            "bXMudHlwZXMuY3JtLmd1ZXN0cy5HdWVzdEluZGljYXRvckIfWgdib29raW5n",
            "qgITSE9MTVMuVHlwZXMuQm9va2luZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Primitive.PbLocalDateReflection.Descriptor, global::HOLMS.Types.CRM.Guests.GuestIndicatorReflection.Descriptor, global::HOLMS.Types.Operations.Rooms.RoomIndicatorReflection.Descriptor, global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.FolioChargePostedNotification), global::HOLMS.Types.Booking.FolioChargePostedNotification.Parser, new[]{ "JWToken", "Opsdate", "PretaxLodgingCharge", "RoomId", "RoomTypeId", "GuestId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FolioChargePostedNotification : pb::IMessage<FolioChargePostedNotification> {
    private static readonly pb::MessageParser<FolioChargePostedNotification> _parser = new pb::MessageParser<FolioChargePostedNotification>(() => new FolioChargePostedNotification());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolioChargePostedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.FolioChargePostedNotificationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioChargePostedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioChargePostedNotification(FolioChargePostedNotification other) : this() {
      jWToken_ = other.jWToken_;
      Opsdate = other.opsdate_ != null ? other.Opsdate.Clone() : null;
      PretaxLodgingCharge = other.pretaxLodgingCharge_ != null ? other.PretaxLodgingCharge.Clone() : null;
      RoomId = other.roomId_ != null ? other.RoomId.Clone() : null;
      RoomTypeId = other.roomTypeId_ != null ? other.RoomTypeId.Clone() : null;
      GuestId = other.guestId_ != null ? other.GuestId.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioChargePostedNotification Clone() {
      return new FolioChargePostedNotification(this);
    }

    /// <summary>Field number for the "j_w_token" field.</summary>
    public const int JWTokenFieldNumber = 1;
    private string jWToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JWToken {
      get { return jWToken_; }
      set {
        jWToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "opsdate" field.</summary>
    public const int OpsdateFieldNumber = 2;
    private global::HOLMS.Types.Primitive.PbLocalDate opsdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate Opsdate {
      get { return opsdate_; }
      set {
        opsdate_ = value;
      }
    }

    /// <summary>Field number for the "pretax_lodging_charge" field.</summary>
    public const int PretaxLodgingChargeFieldNumber = 3;
    private global::HOLMS.Types.Primitive.MonetaryAmount pretaxLodgingCharge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PretaxLodgingCharge {
      get { return pretaxLodgingCharge_; }
      set {
        pretaxLodgingCharge_ = value;
      }
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 4;
    private global::HOLMS.Types.Operations.Rooms.RoomIndicator roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Operations.Rooms.RoomIndicator RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "room_type_id" field.</summary>
    public const int RoomTypeIdFieldNumber = 5;
    private global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator roomTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator RoomTypeId {
      get { return roomTypeId_; }
      set {
        roomTypeId_ = value;
      }
    }

    /// <summary>Field number for the "guest_id" field.</summary>
    public const int GuestIdFieldNumber = 6;
    private global::HOLMS.Types.CRM.Guests.GuestIndicator guestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.CRM.Guests.GuestIndicator GuestId {
      get { return guestId_; }
      set {
        guestId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolioChargePostedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolioChargePostedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JWToken != other.JWToken) return false;
      if (!object.Equals(Opsdate, other.Opsdate)) return false;
      if (!object.Equals(PretaxLodgingCharge, other.PretaxLodgingCharge)) return false;
      if (!object.Equals(RoomId, other.RoomId)) return false;
      if (!object.Equals(RoomTypeId, other.RoomTypeId)) return false;
      if (!object.Equals(GuestId, other.GuestId)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JWToken.Length != 0) hash ^= JWToken.GetHashCode();
      if (opsdate_ != null) hash ^= Opsdate.GetHashCode();
      if (pretaxLodgingCharge_ != null) hash ^= PretaxLodgingCharge.GetHashCode();
      if (roomId_ != null) hash ^= RoomId.GetHashCode();
      if (roomTypeId_ != null) hash ^= RoomTypeId.GetHashCode();
      if (guestId_ != null) hash ^= GuestId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JWToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JWToken);
      }
      if (opsdate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Opsdate);
      }
      if (pretaxLodgingCharge_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PretaxLodgingCharge);
      }
      if (roomId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RoomId);
      }
      if (roomTypeId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RoomTypeId);
      }
      if (guestId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GuestId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JWToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JWToken);
      }
      if (opsdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opsdate);
      }
      if (pretaxLodgingCharge_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PretaxLodgingCharge);
      }
      if (roomId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomId);
      }
      if (roomTypeId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomTypeId);
      }
      if (guestId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuestId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolioChargePostedNotification other) {
      if (other == null) {
        return;
      }
      if (other.JWToken.Length != 0) {
        JWToken = other.JWToken;
      }
      if (other.opsdate_ != null) {
        if (opsdate_ == null) {
          opsdate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        Opsdate.MergeFrom(other.Opsdate);
      }
      if (other.pretaxLodgingCharge_ != null) {
        if (pretaxLodgingCharge_ == null) {
          pretaxLodgingCharge_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PretaxLodgingCharge.MergeFrom(other.PretaxLodgingCharge);
      }
      if (other.roomId_ != null) {
        if (roomId_ == null) {
          roomId_ = new global::HOLMS.Types.Operations.Rooms.RoomIndicator();
        }
        RoomId.MergeFrom(other.RoomId);
      }
      if (other.roomTypeId_ != null) {
        if (roomTypeId_ == null) {
          roomTypeId_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
        }
        RoomTypeId.MergeFrom(other.RoomTypeId);
      }
      if (other.guestId_ != null) {
        if (guestId_ == null) {
          guestId_ = new global::HOLMS.Types.CRM.Guests.GuestIndicator();
        }
        GuestId.MergeFrom(other.GuestId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            JWToken = input.ReadString();
            break;
          }
          case 18: {
            if (opsdate_ == null) {
              opsdate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(opsdate_);
            break;
          }
          case 26: {
            if (pretaxLodgingCharge_ == null) {
              pretaxLodgingCharge_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(pretaxLodgingCharge_);
            break;
          }
          case 34: {
            if (roomId_ == null) {
              roomId_ = new global::HOLMS.Types.Operations.Rooms.RoomIndicator();
            }
            input.ReadMessage(roomId_);
            break;
          }
          case 42: {
            if (roomTypeId_ == null) {
              roomTypeId_ = new global::HOLMS.Types.Supply.RoomTypes.RoomTypeIndicator();
            }
            input.ReadMessage(roomTypeId_);
            break;
          }
          case 50: {
            if (guestId_ == null) {
              guestId_ = new global::HOLMS.Types.CRM.Guests.GuestIndicator();
            }
            input.ReadMessage(guestId_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
