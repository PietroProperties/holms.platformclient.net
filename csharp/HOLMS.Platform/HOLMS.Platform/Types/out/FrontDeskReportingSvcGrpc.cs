// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reporting/rpc/front_desk_reporting_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.Reporting.RPC {
  public static partial class FrontDeskReportingSvc
  {
    static readonly string __ServiceName = "holms.types.reporting.rpc.FrontDeskReportingSvc";

    static readonly grpc::Marshaller<global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest> __Marshaller_FrontDeskBatchReportingSvcRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> __Marshaller_HtmlReportResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest> __Marshaller_FrontDeskReportingSvcHousekeepingRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest, global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> __Method_GetFrontDeskReports = new grpc::Method<global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest, global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFrontDeskReports",
        __Marshaller_FrontDeskBatchReportingSvcRequest,
        __Marshaller_HtmlReportResponse);

    static readonly grpc::Method<global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest, global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> __Method_GetHousekeepingAssignmentsReport = new grpc::Method<global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest, global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHousekeepingAssignmentsReport",
        __Marshaller_FrontDeskReportingSvcHousekeepingRequest,
        __Marshaller_HtmlReportResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of FrontDeskReportingSvc</summary>
    public abstract partial class FrontDeskReportingSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> GetFrontDeskReports(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> GetHousekeepingAssignmentsReport(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for FrontDeskReportingSvc</summary>
    public partial class FrontDeskReportingSvcClient : grpc::ClientBase<FrontDeskReportingSvcClient>
    {
      /// <summary>Creates a new client for FrontDeskReportingSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FrontDeskReportingSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for FrontDeskReportingSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FrontDeskReportingSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FrontDeskReportingSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FrontDeskReportingSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse GetFrontDeskReports(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFrontDeskReports(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse GetFrontDeskReports(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFrontDeskReports, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> GetFrontDeskReportsAsync(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFrontDeskReportsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> GetFrontDeskReportsAsync(global::HOLMS.Types.Reporting.RPC.FrontDeskBatchReportingSvcRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFrontDeskReports, null, options, request);
      }
      public virtual global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse GetHousekeepingAssignmentsReport(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetHousekeepingAssignmentsReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse GetHousekeepingAssignmentsReport(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHousekeepingAssignmentsReport, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> GetHousekeepingAssignmentsReportAsync(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetHousekeepingAssignmentsReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Reporting.Outputs.HtmlReportResponse> GetHousekeepingAssignmentsReportAsync(global::HOLMS.Types.Reporting.RPC.FrontDeskReportingSvcHousekeepingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHousekeepingAssignmentsReport, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FrontDeskReportingSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FrontDeskReportingSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FrontDeskReportingSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetFrontDeskReports, serviceImpl.GetFrontDeskReports)
          .AddMethod(__Method_GetHousekeepingAssignmentsReport, serviceImpl.GetHousekeepingAssignmentsReport).Build();
    }

  }
}
#endregion
