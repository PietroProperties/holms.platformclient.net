// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/reservations/reservation_summary_lite.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Booking.Reservations {

  /// <summary>Holder for reflection information generated from booking/reservations/reservation_summary_lite.proto</summary>
  public static partial class ReservationSummaryLiteReflection {

    #region Descriptor
    /// <summary>File descriptor for booking/reservations/reservation_summary_lite.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReservationSummaryLiteReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNib29raW5nL3Jlc2VydmF0aW9ucy9yZXNlcnZhdGlvbl9zdW1tYXJ5X2xp",
            "dGUucHJvdG8SIGhvbG1zLnR5cGVzLmJvb2tpbmcucmVzZXJ2YXRpb25zGi5i",
            "b29raW5nL2luZGljYXRvcnMvcmVzZXJ2YXRpb25faW5kaWNhdG9yLnByb3Rv",
            "Gixib29raW5nL3Jlc2VydmF0aW9ucy9yZXNlcnZhdGlvbl9zdGF0ZS5wcm90",
            "bxodcHJpbWl0aXZlL3BiX2xvY2FsX2RhdGUucHJvdG8aH3ByaW1pdGl2ZS9t",
            "b25ldGFyeV9hbW91bnQucHJvdG8aM2ZvbGlvL2d1YXJhbnRlZXMvcmVzZXJ2",
            "YXRpb25fZ3VhcmFudGVlX3N0YXR1cy5wcm90byL7BQoWUmVzZXJ2YXRpb25T",
            "dW1tYXJ5TGl0ZRJHCgllbnRpdHlfaWQYASABKAsyNC5ob2xtcy50eXBlcy5i",
            "b29raW5nLmluZGljYXRvcnMuUmVzZXJ2YXRpb25JbmRpY2F0b3ISQQoFc3Rh",
            "dGUYAiABKA4yMi5ob2xtcy50eXBlcy5ib29raW5nLnJlc2VydmF0aW9ucy5S",
            "ZXNlcnZhdGlvblN0YXRlEhUKDUJvb2tpbmdOdW1iZXIYAyABKAMSFQoNQm9v",
            "a2luZ1ByZWZpeBgEIAEoCRIhChlDdXJyZW50T2NjdXBpZWRSb29tTnVtYmVy",
            "GAUgASgJEiIKGlRlcm1pbmFsT2NjdXBpZWRSb29tTnVtYmVyGAYgASgJEiQK",
            "HEZpcnN0TmlnaHRBc3NpZ25lZFJvb21OdW1iZXIYByABKAkSHwoXVmVoaWNs",
            "ZVBsYXRlSW5mb3JtYXRpb24YCCABKAkSNwoLQXJyaXZhbERhdGUYCSABKAsy",
            "Ii5ob2xtcy50eXBlcy5wcmltaXRpdmUuUGJMb2NhbERhdGUSOQoNRGVwYXJ0",
            "dXJlRGF0ZRgKIAEoCzIiLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5QYkxvY2Fs",
            "RGF0ZRIUCgxSb29tVHlwZU5hbWUYCyABKAkSEQoJT1RBTnVtYmVyGAwgASgJ",
            "EhEKCUd1ZXN0VGV4dBgNIAEoCRIXCg9NYXN0ZXJGb2xpb1RleHQYDiABKAkS",
            "GQoRSXNHcm91cEFzc29jaWF0ZWQYDyABKAgSQgoTQ3VycmVudER1ZUZyb21H",
            "dWVzdBgQIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFt",
            "b3VudBJVCg9HdWFyYW50ZWVTdGF0dXMYESABKA4yPC5ob2xtcy50eXBlcy5i",
            "b29raW5nLnJlc2VydmF0aW9ucy5SZXNlcnZhdGlvbkd1YXJhbnRlZVN0YXR1",
            "cxIaChJyZXNlcnZhdGlvbl9zb3VyY2UYEiABKAlCOVoUYm9va2luZy9yZXNl",
            "cnZhdGlvbnOqAiBIT0xNUy5UeXBlcy5Cb29raW5nLlJlc2VydmF0aW9uc2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Booking.Indicators.ReservationIndicatorReflection.Descriptor, global::HOLMS.Types.Booking.Reservations.ReservationStateReflection.Descriptor, global::HOLMS.Types.Primitive.PbLocalDateReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, global::HOLMS.Types.Folio.Guarantees.ReservationGuaranteeStatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Booking.Reservations.ReservationSummaryLite), global::HOLMS.Types.Booking.Reservations.ReservationSummaryLite.Parser, new[]{ "EntityId", "State", "BookingNumber", "BookingPrefix", "CurrentOccupiedRoomNumber", "TerminalOccupiedRoomNumber", "FirstNightAssignedRoomNumber", "VehiclePlateInformation", "ArrivalDate", "DepartureDate", "RoomTypeName", "OTANumber", "GuestText", "MasterFolioText", "IsGroupAssociated", "CurrentDueFromGuest", "GuaranteeStatus", "ReservationSource" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReservationSummaryLite : pb::IMessage<ReservationSummaryLite> {
    private static readonly pb::MessageParser<ReservationSummaryLite> _parser = new pb::MessageParser<ReservationSummaryLite>(() => new ReservationSummaryLite());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservationSummaryLite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Booking.Reservations.ReservationSummaryLiteReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSummaryLite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSummaryLite(ReservationSummaryLite other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      state_ = other.state_;
      bookingNumber_ = other.bookingNumber_;
      bookingPrefix_ = other.bookingPrefix_;
      currentOccupiedRoomNumber_ = other.currentOccupiedRoomNumber_;
      terminalOccupiedRoomNumber_ = other.terminalOccupiedRoomNumber_;
      firstNightAssignedRoomNumber_ = other.firstNightAssignedRoomNumber_;
      vehiclePlateInformation_ = other.vehiclePlateInformation_;
      ArrivalDate = other.arrivalDate_ != null ? other.ArrivalDate.Clone() : null;
      DepartureDate = other.departureDate_ != null ? other.DepartureDate.Clone() : null;
      roomTypeName_ = other.roomTypeName_;
      oTANumber_ = other.oTANumber_;
      guestText_ = other.guestText_;
      masterFolioText_ = other.masterFolioText_;
      isGroupAssociated_ = other.isGroupAssociated_;
      CurrentDueFromGuest = other.currentDueFromGuest_ != null ? other.CurrentDueFromGuest.Clone() : null;
      guaranteeStatus_ = other.guaranteeStatus_;
      reservationSource_ = other.reservationSource_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservationSummaryLite Clone() {
      return new ReservationSummaryLite(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Booking.Indicators.ReservationIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Indicators.ReservationIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::HOLMS.Types.Booking.Reservations.ReservationState state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Booking.Reservations.ReservationState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "BookingNumber" field.</summary>
    public const int BookingNumberFieldNumber = 3;
    private long bookingNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BookingNumber {
      get { return bookingNumber_; }
      set {
        bookingNumber_ = value;
      }
    }

    /// <summary>Field number for the "BookingPrefix" field.</summary>
    public const int BookingPrefixFieldNumber = 4;
    private string bookingPrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingPrefix {
      get { return bookingPrefix_; }
      set {
        bookingPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CurrentOccupiedRoomNumber" field.</summary>
    public const int CurrentOccupiedRoomNumberFieldNumber = 5;
    private string currentOccupiedRoomNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentOccupiedRoomNumber {
      get { return currentOccupiedRoomNumber_; }
      set {
        currentOccupiedRoomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TerminalOccupiedRoomNumber" field.</summary>
    public const int TerminalOccupiedRoomNumberFieldNumber = 6;
    private string terminalOccupiedRoomNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TerminalOccupiedRoomNumber {
      get { return terminalOccupiedRoomNumber_; }
      set {
        terminalOccupiedRoomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstNightAssignedRoomNumber" field.</summary>
    public const int FirstNightAssignedRoomNumberFieldNumber = 7;
    private string firstNightAssignedRoomNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstNightAssignedRoomNumber {
      get { return firstNightAssignedRoomNumber_; }
      set {
        firstNightAssignedRoomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VehiclePlateInformation" field.</summary>
    public const int VehiclePlateInformationFieldNumber = 8;
    private string vehiclePlateInformation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehiclePlateInformation {
      get { return vehiclePlateInformation_; }
      set {
        vehiclePlateInformation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ArrivalDate" field.</summary>
    public const int ArrivalDateFieldNumber = 9;
    private global::HOLMS.Types.Primitive.PbLocalDate arrivalDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate ArrivalDate {
      get { return arrivalDate_; }
      set {
        arrivalDate_ = value;
      }
    }

    /// <summary>Field number for the "DepartureDate" field.</summary>
    public const int DepartureDateFieldNumber = 10;
    private global::HOLMS.Types.Primitive.PbLocalDate departureDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.PbLocalDate DepartureDate {
      get { return departureDate_; }
      set {
        departureDate_ = value;
      }
    }

    /// <summary>Field number for the "RoomTypeName" field.</summary>
    public const int RoomTypeNameFieldNumber = 11;
    private string roomTypeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomTypeName {
      get { return roomTypeName_; }
      set {
        roomTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OTANumber" field.</summary>
    public const int OTANumberFieldNumber = 12;
    private string oTANumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OTANumber {
      get { return oTANumber_; }
      set {
        oTANumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "GuestText" field.</summary>
    public const int GuestTextFieldNumber = 13;
    private string guestText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GuestText {
      get { return guestText_; }
      set {
        guestText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MasterFolioText" field.</summary>
    public const int MasterFolioTextFieldNumber = 14;
    private string masterFolioText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MasterFolioText {
      get { return masterFolioText_; }
      set {
        masterFolioText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsGroupAssociated" field.</summary>
    public const int IsGroupAssociatedFieldNumber = 15;
    private bool isGroupAssociated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGroupAssociated {
      get { return isGroupAssociated_; }
      set {
        isGroupAssociated_ = value;
      }
    }

    /// <summary>Field number for the "CurrentDueFromGuest" field.</summary>
    public const int CurrentDueFromGuestFieldNumber = 16;
    private global::HOLMS.Types.Primitive.MonetaryAmount currentDueFromGuest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CurrentDueFromGuest {
      get { return currentDueFromGuest_; }
      set {
        currentDueFromGuest_ = value;
      }
    }

    /// <summary>Field number for the "GuaranteeStatus" field.</summary>
    public const int GuaranteeStatusFieldNumber = 17;
    private global::HOLMS.Types.Folio.Guarantees.ReservationGuaranteeStatus guaranteeStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.Guarantees.ReservationGuaranteeStatus GuaranteeStatus {
      get { return guaranteeStatus_; }
      set {
        guaranteeStatus_ = value;
      }
    }

    /// <summary>Field number for the "reservation_source" field.</summary>
    public const int ReservationSourceFieldNumber = 18;
    private string reservationSource_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReservationSource {
      get { return reservationSource_; }
      set {
        reservationSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservationSummaryLite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservationSummaryLite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (State != other.State) return false;
      if (BookingNumber != other.BookingNumber) return false;
      if (BookingPrefix != other.BookingPrefix) return false;
      if (CurrentOccupiedRoomNumber != other.CurrentOccupiedRoomNumber) return false;
      if (TerminalOccupiedRoomNumber != other.TerminalOccupiedRoomNumber) return false;
      if (FirstNightAssignedRoomNumber != other.FirstNightAssignedRoomNumber) return false;
      if (VehiclePlateInformation != other.VehiclePlateInformation) return false;
      if (!object.Equals(ArrivalDate, other.ArrivalDate)) return false;
      if (!object.Equals(DepartureDate, other.DepartureDate)) return false;
      if (RoomTypeName != other.RoomTypeName) return false;
      if (OTANumber != other.OTANumber) return false;
      if (GuestText != other.GuestText) return false;
      if (MasterFolioText != other.MasterFolioText) return false;
      if (IsGroupAssociated != other.IsGroupAssociated) return false;
      if (!object.Equals(CurrentDueFromGuest, other.CurrentDueFromGuest)) return false;
      if (GuaranteeStatus != other.GuaranteeStatus) return false;
      if (ReservationSource != other.ReservationSource) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (BookingNumber != 0L) hash ^= BookingNumber.GetHashCode();
      if (BookingPrefix.Length != 0) hash ^= BookingPrefix.GetHashCode();
      if (CurrentOccupiedRoomNumber.Length != 0) hash ^= CurrentOccupiedRoomNumber.GetHashCode();
      if (TerminalOccupiedRoomNumber.Length != 0) hash ^= TerminalOccupiedRoomNumber.GetHashCode();
      if (FirstNightAssignedRoomNumber.Length != 0) hash ^= FirstNightAssignedRoomNumber.GetHashCode();
      if (VehiclePlateInformation.Length != 0) hash ^= VehiclePlateInformation.GetHashCode();
      if (arrivalDate_ != null) hash ^= ArrivalDate.GetHashCode();
      if (departureDate_ != null) hash ^= DepartureDate.GetHashCode();
      if (RoomTypeName.Length != 0) hash ^= RoomTypeName.GetHashCode();
      if (OTANumber.Length != 0) hash ^= OTANumber.GetHashCode();
      if (GuestText.Length != 0) hash ^= GuestText.GetHashCode();
      if (MasterFolioText.Length != 0) hash ^= MasterFolioText.GetHashCode();
      if (IsGroupAssociated != false) hash ^= IsGroupAssociated.GetHashCode();
      if (currentDueFromGuest_ != null) hash ^= CurrentDueFromGuest.GetHashCode();
      if (GuaranteeStatus != 0) hash ^= GuaranteeStatus.GetHashCode();
      if (ReservationSource.Length != 0) hash ^= ReservationSource.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (BookingNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BookingNumber);
      }
      if (BookingPrefix.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BookingPrefix);
      }
      if (CurrentOccupiedRoomNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CurrentOccupiedRoomNumber);
      }
      if (TerminalOccupiedRoomNumber.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TerminalOccupiedRoomNumber);
      }
      if (FirstNightAssignedRoomNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FirstNightAssignedRoomNumber);
      }
      if (VehiclePlateInformation.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(VehiclePlateInformation);
      }
      if (arrivalDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ArrivalDate);
      }
      if (departureDate_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DepartureDate);
      }
      if (RoomTypeName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RoomTypeName);
      }
      if (OTANumber.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(OTANumber);
      }
      if (GuestText.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(GuestText);
      }
      if (MasterFolioText.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(MasterFolioText);
      }
      if (IsGroupAssociated != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsGroupAssociated);
      }
      if (currentDueFromGuest_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CurrentDueFromGuest);
      }
      if (GuaranteeStatus != 0) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) GuaranteeStatus);
      }
      if (ReservationSource.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ReservationSource);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (BookingNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BookingNumber);
      }
      if (BookingPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookingPrefix);
      }
      if (CurrentOccupiedRoomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentOccupiedRoomNumber);
      }
      if (TerminalOccupiedRoomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TerminalOccupiedRoomNumber);
      }
      if (FirstNightAssignedRoomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstNightAssignedRoomNumber);
      }
      if (VehiclePlateInformation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehiclePlateInformation);
      }
      if (arrivalDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArrivalDate);
      }
      if (departureDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartureDate);
      }
      if (RoomTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomTypeName);
      }
      if (OTANumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OTANumber);
      }
      if (GuestText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuestText);
      }
      if (MasterFolioText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterFolioText);
      }
      if (IsGroupAssociated != false) {
        size += 1 + 1;
      }
      if (currentDueFromGuest_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentDueFromGuest);
      }
      if (GuaranteeStatus != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GuaranteeStatus);
      }
      if (ReservationSource.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReservationSource);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservationSummaryLite other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.BookingNumber != 0L) {
        BookingNumber = other.BookingNumber;
      }
      if (other.BookingPrefix.Length != 0) {
        BookingPrefix = other.BookingPrefix;
      }
      if (other.CurrentOccupiedRoomNumber.Length != 0) {
        CurrentOccupiedRoomNumber = other.CurrentOccupiedRoomNumber;
      }
      if (other.TerminalOccupiedRoomNumber.Length != 0) {
        TerminalOccupiedRoomNumber = other.TerminalOccupiedRoomNumber;
      }
      if (other.FirstNightAssignedRoomNumber.Length != 0) {
        FirstNightAssignedRoomNumber = other.FirstNightAssignedRoomNumber;
      }
      if (other.VehiclePlateInformation.Length != 0) {
        VehiclePlateInformation = other.VehiclePlateInformation;
      }
      if (other.arrivalDate_ != null) {
        if (arrivalDate_ == null) {
          arrivalDate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        ArrivalDate.MergeFrom(other.ArrivalDate);
      }
      if (other.departureDate_ != null) {
        if (departureDate_ == null) {
          departureDate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
        }
        DepartureDate.MergeFrom(other.DepartureDate);
      }
      if (other.RoomTypeName.Length != 0) {
        RoomTypeName = other.RoomTypeName;
      }
      if (other.OTANumber.Length != 0) {
        OTANumber = other.OTANumber;
      }
      if (other.GuestText.Length != 0) {
        GuestText = other.GuestText;
      }
      if (other.MasterFolioText.Length != 0) {
        MasterFolioText = other.MasterFolioText;
      }
      if (other.IsGroupAssociated != false) {
        IsGroupAssociated = other.IsGroupAssociated;
      }
      if (other.currentDueFromGuest_ != null) {
        if (currentDueFromGuest_ == null) {
          currentDueFromGuest_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CurrentDueFromGuest.MergeFrom(other.CurrentDueFromGuest);
      }
      if (other.GuaranteeStatus != 0) {
        GuaranteeStatus = other.GuaranteeStatus;
      }
      if (other.ReservationSource.Length != 0) {
        ReservationSource = other.ReservationSource;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Booking.Indicators.ReservationIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 16: {
            state_ = (global::HOLMS.Types.Booking.Reservations.ReservationState) input.ReadEnum();
            break;
          }
          case 24: {
            BookingNumber = input.ReadInt64();
            break;
          }
          case 34: {
            BookingPrefix = input.ReadString();
            break;
          }
          case 42: {
            CurrentOccupiedRoomNumber = input.ReadString();
            break;
          }
          case 50: {
            TerminalOccupiedRoomNumber = input.ReadString();
            break;
          }
          case 58: {
            FirstNightAssignedRoomNumber = input.ReadString();
            break;
          }
          case 66: {
            VehiclePlateInformation = input.ReadString();
            break;
          }
          case 74: {
            if (arrivalDate_ == null) {
              arrivalDate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(arrivalDate_);
            break;
          }
          case 82: {
            if (departureDate_ == null) {
              departureDate_ = new global::HOLMS.Types.Primitive.PbLocalDate();
            }
            input.ReadMessage(departureDate_);
            break;
          }
          case 90: {
            RoomTypeName = input.ReadString();
            break;
          }
          case 98: {
            OTANumber = input.ReadString();
            break;
          }
          case 106: {
            GuestText = input.ReadString();
            break;
          }
          case 114: {
            MasterFolioText = input.ReadString();
            break;
          }
          case 120: {
            IsGroupAssociated = input.ReadBool();
            break;
          }
          case 130: {
            if (currentDueFromGuest_ == null) {
              currentDueFromGuest_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(currentDueFromGuest_);
            break;
          }
          case 136: {
            guaranteeStatus_ = (global::HOLMS.Types.Folio.Guarantees.ReservationGuaranteeStatus) input.ReadEnum();
            break;
          }
          case 146: {
            ReservationSource = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
