// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/cards/merchant_authorization.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Cards {

  /// <summary>Holder for reflection information generated from money/cards/merchant_authorization.proto</summary>
  public static partial class MerchantAuthorizationReflection {

    #region Descriptor
    /// <summary>File descriptor for money/cards/merchant_authorization.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MerchantAuthorizationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihtb25leS9jYXJkcy9tZXJjaGFudF9hdXRob3JpemF0aW9uLnByb3RvEhdo",
            "b2xtcy50eXBlcy5tb25leS5jYXJkcxoubW9uZXkvY2FyZHMvcHJvY2Vzc29y",
            "X3RyYW5zYWN0aW9uX3Jlc3VsdC5wcm90bxopbW9uZXkvY2FyZHMvY2FyZF9t",
            "ZXJjaGFudF9pbmRpY2F0b3IucHJvdG8aMm1vbmV5L2NhcmRzL21lcmNoYW50",
            "X2F1dGhvcml6YXRpb25faW5kaWNhdG9yLnByb3RvGh9wcmltaXRpdmUvbW9u",
            "ZXRhcnlfYW1vdW50LnByb3RvItkDChVNZXJjaGFudEF1dGhvcml6YXRpb24S",
            "SgoJZW50aXR5X2lkGAEgASgLMjcuaG9sbXMudHlwZXMubW9uZXkuY2FyZHMu",
            "TWVyY2hhbnRBdXRob3JpemF0aW9uSW5kaWNhdG9yEkMKC21lcmNoYW50X2lk",
            "GAIgASgLMi4uaG9sbXMudHlwZXMubW9uZXkuY2FyZHMuQ2FyZE1lcmNoYW50",
            "SW5kaWNhdG9yEhgKEGNhcmRfbWVtYmVyX25hbWUYAyABKAkSDgoGdHhuX2lk",
            "GAQgASgJEhIKCm1hc2tlZF9wYW4YBSABKAkSNQoGYW1vdW50GAYgASgLMiUu",
            "aG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50EkMKBnJlc3Vs",
            "dBgHIAEoDjIzLmhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLlByb2Nlc3NvclRy",
            "YW5zYWN0aW9uUmVzdWx0Eg0KBWJyYW5kGAggASgJEh0KFWhvc3RfcmVmZXJl",
            "bmNlX251bWJlchgJIAEoCRJHCgxlbnRyeV9tZXRob2QYCiABKA4yMS5ob2xt",
            "cy50eXBlcy5tb25leS5jYXJkcy5BdXRob3JpemF0aW9uRW50cnlNZXRob2Qq",
            "XwoYQXV0aG9yaXphdGlvbkVudHJ5TWV0aG9kEhYKEkNBUkRfUFJFU0VOVF9T",
            "V0lQRRAAEhUKEUNBUkRfUFJFU0VOVF9DSElQEAESFAoQQ0FSRF9OT1RfUFJF",
            "U0VOVBACQidaC21vbmV5L2NhcmRzqgIXSE9MTVMuVHlwZXMuTW9uZXkuQ2Fy",
            "ZHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Money.Cards.ProcessorTransactionResultReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicatorReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Cards.MerchantAuthorization), global::HOLMS.Types.Money.Cards.MerchantAuthorization.Parser, new[]{ "EntityId", "MerchantId", "CardMemberName", "TxnId", "MaskedPan", "Amount", "Result", "Brand", "HostReferenceNumber", "EntryMethod" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AuthorizationEntryMethod {
    [pbr::OriginalName("CARD_PRESENT_SWIPE")] CardPresentSwipe = 0,
    [pbr::OriginalName("CARD_PRESENT_CHIP")] CardPresentChip = 1,
    [pbr::OriginalName("CARD_NOT_PRESENT")] CardNotPresent = 2,
  }

  #endregion

  #region Messages
  public sealed partial class MerchantAuthorization : pb::IMessage<MerchantAuthorization> {
    private static readonly pb::MessageParser<MerchantAuthorization> _parser = new pb::MessageParser<MerchantAuthorization>(() => new MerchantAuthorization());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerchantAuthorization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Cards.MerchantAuthorizationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantAuthorization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantAuthorization(MerchantAuthorization other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      MerchantId = other.merchantId_ != null ? other.MerchantId.Clone() : null;
      cardMemberName_ = other.cardMemberName_;
      txnId_ = other.txnId_;
      maskedPan_ = other.maskedPan_;
      Amount = other.amount_ != null ? other.Amount.Clone() : null;
      result_ = other.result_;
      brand_ = other.brand_;
      hostReferenceNumber_ = other.hostReferenceNumber_;
      entryMethod_ = other.entryMethod_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantAuthorization Clone() {
      return new MerchantAuthorization(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "merchant_id" field.</summary>
    public const int MerchantIdFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator merchantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator MerchantId {
      get { return merchantId_; }
      set {
        merchantId_ = value;
      }
    }

    /// <summary>Field number for the "card_member_name" field.</summary>
    public const int CardMemberNameFieldNumber = 3;
    private string cardMemberName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardMemberName {
      get { return cardMemberName_; }
      set {
        cardMemberName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "txn_id" field.</summary>
    public const int TxnIdFieldNumber = 4;
    private string txnId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TxnId {
      get { return txnId_; }
      set {
        txnId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "masked_pan" field.</summary>
    public const int MaskedPanFieldNumber = 5;
    private string maskedPan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaskedPan {
      get { return maskedPan_; }
      set {
        maskedPan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private global::HOLMS.Types.Primitive.MonetaryAmount amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 7;
    private global::HOLMS.Types.Money.Cards.ProcessorTransactionResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.ProcessorTransactionResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "brand" field.</summary>
    public const int BrandFieldNumber = 8;
    private string brand_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Brand {
      get { return brand_; }
      set {
        brand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_reference_number" field.</summary>
    public const int HostReferenceNumberFieldNumber = 9;
    private string hostReferenceNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostReferenceNumber {
      get { return hostReferenceNumber_; }
      set {
        hostReferenceNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entry_method" field.</summary>
    public const int EntryMethodFieldNumber = 10;
    private global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod entryMethod_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod EntryMethod {
      get { return entryMethod_; }
      set {
        entryMethod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerchantAuthorization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerchantAuthorization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (!object.Equals(MerchantId, other.MerchantId)) return false;
      if (CardMemberName != other.CardMemberName) return false;
      if (TxnId != other.TxnId) return false;
      if (MaskedPan != other.MaskedPan) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Result != other.Result) return false;
      if (Brand != other.Brand) return false;
      if (HostReferenceNumber != other.HostReferenceNumber) return false;
      if (EntryMethod != other.EntryMethod) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (merchantId_ != null) hash ^= MerchantId.GetHashCode();
      if (CardMemberName.Length != 0) hash ^= CardMemberName.GetHashCode();
      if (TxnId.Length != 0) hash ^= TxnId.GetHashCode();
      if (MaskedPan.Length != 0) hash ^= MaskedPan.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (Brand.Length != 0) hash ^= Brand.GetHashCode();
      if (HostReferenceNumber.Length != 0) hash ^= HostReferenceNumber.GetHashCode();
      if (EntryMethod != 0) hash ^= EntryMethod.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (merchantId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MerchantId);
      }
      if (CardMemberName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CardMemberName);
      }
      if (TxnId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TxnId);
      }
      if (MaskedPan.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MaskedPan);
      }
      if (amount_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Amount);
      }
      if (Result != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Result);
      }
      if (Brand.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Brand);
      }
      if (HostReferenceNumber.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HostReferenceNumber);
      }
      if (EntryMethod != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EntryMethod);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (merchantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerchantId);
      }
      if (CardMemberName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardMemberName);
      }
      if (TxnId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TxnId);
      }
      if (MaskedPan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaskedPan);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Brand.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Brand);
      }
      if (HostReferenceNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostReferenceNumber);
      }
      if (EntryMethod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntryMethod);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerchantAuthorization other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.merchantId_ != null) {
        if (merchantId_ == null) {
          merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        MerchantId.MergeFrom(other.MerchantId);
      }
      if (other.CardMemberName.Length != 0) {
        CardMemberName = other.CardMemberName;
      }
      if (other.TxnId.Length != 0) {
        TxnId = other.TxnId;
      }
      if (other.MaskedPan.Length != 0) {
        MaskedPan = other.MaskedPan;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.Brand.Length != 0) {
        Brand = other.Brand;
      }
      if (other.HostReferenceNumber.Length != 0) {
        HostReferenceNumber = other.HostReferenceNumber;
      }
      if (other.EntryMethod != 0) {
        EntryMethod = other.EntryMethod;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Money.Cards.MerchantAuthorizationIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            if (merchantId_ == null) {
              merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(merchantId_);
            break;
          }
          case 26: {
            CardMemberName = input.ReadString();
            break;
          }
          case 34: {
            TxnId = input.ReadString();
            break;
          }
          case 42: {
            MaskedPan = input.ReadString();
            break;
          }
          case 50: {
            if (amount_ == null) {
              amount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 56: {
            result_ = (global::HOLMS.Types.Money.Cards.ProcessorTransactionResult) input.ReadEnum();
            break;
          }
          case 66: {
            Brand = input.ReadString();
            break;
          }
          case 74: {
            HostReferenceNumber = input.ReadString();
            break;
          }
          case 80: {
            entryMethod_ = (global::HOLMS.Types.Money.Cards.AuthorizationEntryMethod) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
