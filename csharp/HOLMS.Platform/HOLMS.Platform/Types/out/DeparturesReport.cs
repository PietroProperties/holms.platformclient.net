// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operations/reporting/departures_report.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Operations.Reporting {

  /// <summary>Holder for reflection information generated from operations/reporting/departures_report.proto</summary>
  public static partial class DeparturesReportReflection {

    #region Descriptor
    /// <summary>File descriptor for operations/reporting/departures_report.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeparturesReportReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixvcGVyYXRpb25zL3JlcG9ydGluZy9kZXBhcnR1cmVzX3JlcG9ydC5wcm90",
            "bxIgaG9sbXMudHlwZXMub3BlcmF0aW9ucy5yZXBvcnRpbmcaH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aH3ByaW1pdGl2ZS9tb25ldGFyeV9h",
            "bW91bnQucHJvdG8i2wEKE0RlcGFydHVyZXNSZXBvcnRSb3cSEgoKZ3Vlc3Rf",
            "bmFtZRgBIAEoCRIaChJyZXNlcnZhdGlvbl9udW1iZXIYAiABKAkSEwoLcm9v",
            "bV9udW1iZXIYAyABKAkSEQoJcm9vbV90eXBlGAQgASgJEhQKDGd1ZXN0c19j",
            "b3VudBgFIAEoDRIYChBncm91cF9ib29raW5nX2lkGAYgASgJEjwKDWZvbGlv",
            "X2JhbGFuY2UYByABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRh",
            "cnlBbW91bnQihwIKEERlcGFydHVyZXNSZXBvcnQSFAoMdGVuYW5jeV9uYW1l",
            "GAEgASgJEhUKDXN0YWZmX3ByaW50ZXIYAiABKAkSLgoKcHJpbnRlZF9hdBgD",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLcmVwb3J0X2Rh",
            "dGUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhoKEnRvdGFs",
            "X2FkdWx0c19jb3VudBgFIAEoDRJJCgpkZXBhcnR1cmVzGAYgAygLMjUuaG9s",
            "bXMudHlwZXMub3BlcmF0aW9ucy5yZXBvcnRpbmcuRGVwYXJ0dXJlc1JlcG9y",
            "dFJvd0I5WhRvcGVyYXRpb25zL3JlcG9ydGluZ6oCIEhPTE1TLlR5cGVzLk9w",
            "ZXJhdGlvbnMuUmVwb3J0aW5nYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Operations.Reporting.DeparturesReportRow), global::HOLMS.Types.Operations.Reporting.DeparturesReportRow.Parser, new[]{ "GuestName", "ReservationNumber", "RoomNumber", "RoomType", "GuestsCount", "GroupBookingId", "FolioBalance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Operations.Reporting.DeparturesReport), global::HOLMS.Types.Operations.Reporting.DeparturesReport.Parser, new[]{ "TenancyName", "StaffPrinter", "PrintedAt", "ReportDate", "TotalAdultsCount", "Departures" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeparturesReportRow : pb::IMessage<DeparturesReportRow> {
    private static readonly pb::MessageParser<DeparturesReportRow> _parser = new pb::MessageParser<DeparturesReportRow>(() => new DeparturesReportRow());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeparturesReportRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Operations.Reporting.DeparturesReportReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeparturesReportRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeparturesReportRow(DeparturesReportRow other) : this() {
      guestName_ = other.guestName_;
      reservationNumber_ = other.reservationNumber_;
      roomNumber_ = other.roomNumber_;
      roomType_ = other.roomType_;
      guestsCount_ = other.guestsCount_;
      groupBookingId_ = other.groupBookingId_;
      FolioBalance = other.folioBalance_ != null ? other.FolioBalance.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeparturesReportRow Clone() {
      return new DeparturesReportRow(this);
    }

    /// <summary>Field number for the "guest_name" field.</summary>
    public const int GuestNameFieldNumber = 1;
    private string guestName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GuestName {
      get { return guestName_; }
      set {
        guestName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reservation_number" field.</summary>
    public const int ReservationNumberFieldNumber = 2;
    private string reservationNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReservationNumber {
      get { return reservationNumber_; }
      set {
        reservationNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_number" field.</summary>
    public const int RoomNumberFieldNumber = 3;
    private string roomNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNumber {
      get { return roomNumber_; }
      set {
        roomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "room_type" field.</summary>
    public const int RoomTypeFieldNumber = 4;
    private string roomType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomType {
      get { return roomType_; }
      set {
        roomType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guests_count" field.</summary>
    public const int GuestsCountFieldNumber = 5;
    private uint guestsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GuestsCount {
      get { return guestsCount_; }
      set {
        guestsCount_ = value;
      }
    }

    /// <summary>Field number for the "group_booking_id" field.</summary>
    public const int GroupBookingIdFieldNumber = 6;
    private string groupBookingId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupBookingId {
      get { return groupBookingId_; }
      set {
        groupBookingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folio_balance" field.</summary>
    public const int FolioBalanceFieldNumber = 7;
    private global::HOLMS.Types.Primitive.MonetaryAmount folioBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount FolioBalance {
      get { return folioBalance_; }
      set {
        folioBalance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeparturesReportRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeparturesReportRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GuestName != other.GuestName) return false;
      if (ReservationNumber != other.ReservationNumber) return false;
      if (RoomNumber != other.RoomNumber) return false;
      if (RoomType != other.RoomType) return false;
      if (GuestsCount != other.GuestsCount) return false;
      if (GroupBookingId != other.GroupBookingId) return false;
      if (!object.Equals(FolioBalance, other.FolioBalance)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GuestName.Length != 0) hash ^= GuestName.GetHashCode();
      if (ReservationNumber.Length != 0) hash ^= ReservationNumber.GetHashCode();
      if (RoomNumber.Length != 0) hash ^= RoomNumber.GetHashCode();
      if (RoomType.Length != 0) hash ^= RoomType.GetHashCode();
      if (GuestsCount != 0) hash ^= GuestsCount.GetHashCode();
      if (GroupBookingId.Length != 0) hash ^= GroupBookingId.GetHashCode();
      if (folioBalance_ != null) hash ^= FolioBalance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GuestName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GuestName);
      }
      if (ReservationNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReservationNumber);
      }
      if (RoomNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RoomNumber);
      }
      if (RoomType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RoomType);
      }
      if (GuestsCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(GuestsCount);
      }
      if (GroupBookingId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GroupBookingId);
      }
      if (folioBalance_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FolioBalance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GuestName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuestName);
      }
      if (ReservationNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReservationNumber);
      }
      if (RoomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomNumber);
      }
      if (RoomType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomType);
      }
      if (GuestsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GuestsCount);
      }
      if (GroupBookingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupBookingId);
      }
      if (folioBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FolioBalance);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeparturesReportRow other) {
      if (other == null) {
        return;
      }
      if (other.GuestName.Length != 0) {
        GuestName = other.GuestName;
      }
      if (other.ReservationNumber.Length != 0) {
        ReservationNumber = other.ReservationNumber;
      }
      if (other.RoomNumber.Length != 0) {
        RoomNumber = other.RoomNumber;
      }
      if (other.RoomType.Length != 0) {
        RoomType = other.RoomType;
      }
      if (other.GuestsCount != 0) {
        GuestsCount = other.GuestsCount;
      }
      if (other.GroupBookingId.Length != 0) {
        GroupBookingId = other.GroupBookingId;
      }
      if (other.folioBalance_ != null) {
        if (folioBalance_ == null) {
          folioBalance_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        FolioBalance.MergeFrom(other.FolioBalance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GuestName = input.ReadString();
            break;
          }
          case 18: {
            ReservationNumber = input.ReadString();
            break;
          }
          case 26: {
            RoomNumber = input.ReadString();
            break;
          }
          case 34: {
            RoomType = input.ReadString();
            break;
          }
          case 40: {
            GuestsCount = input.ReadUInt32();
            break;
          }
          case 50: {
            GroupBookingId = input.ReadString();
            break;
          }
          case 58: {
            if (folioBalance_ == null) {
              folioBalance_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(folioBalance_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeparturesReport : pb::IMessage<DeparturesReport> {
    private static readonly pb::MessageParser<DeparturesReport> _parser = new pb::MessageParser<DeparturesReport>(() => new DeparturesReport());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeparturesReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Operations.Reporting.DeparturesReportReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeparturesReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeparturesReport(DeparturesReport other) : this() {
      tenancyName_ = other.tenancyName_;
      staffPrinter_ = other.staffPrinter_;
      PrintedAt = other.printedAt_ != null ? other.PrintedAt.Clone() : null;
      ReportDate = other.reportDate_ != null ? other.ReportDate.Clone() : null;
      totalAdultsCount_ = other.totalAdultsCount_;
      departures_ = other.departures_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeparturesReport Clone() {
      return new DeparturesReport(this);
    }

    /// <summary>Field number for the "tenancy_name" field.</summary>
    public const int TenancyNameFieldNumber = 1;
    private string tenancyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TenancyName {
      get { return tenancyName_; }
      set {
        tenancyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "staff_printer" field.</summary>
    public const int StaffPrinterFieldNumber = 2;
    private string staffPrinter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StaffPrinter {
      get { return staffPrinter_; }
      set {
        staffPrinter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "printed_at" field.</summary>
    public const int PrintedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp printedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PrintedAt {
      get { return printedAt_; }
      set {
        printedAt_ = value;
      }
    }

    /// <summary>Field number for the "report_date" field.</summary>
    public const int ReportDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp reportDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReportDate {
      get { return reportDate_; }
      set {
        reportDate_ = value;
      }
    }

    /// <summary>Field number for the "total_adults_count" field.</summary>
    public const int TotalAdultsCountFieldNumber = 5;
    private uint totalAdultsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalAdultsCount {
      get { return totalAdultsCount_; }
      set {
        totalAdultsCount_ = value;
      }
    }

    /// <summary>Field number for the "departures" field.</summary>
    public const int DeparturesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Operations.Reporting.DeparturesReportRow> _repeated_departures_codec
        = pb::FieldCodec.ForMessage(50, global::HOLMS.Types.Operations.Reporting.DeparturesReportRow.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Operations.Reporting.DeparturesReportRow> departures_ = new pbc::RepeatedField<global::HOLMS.Types.Operations.Reporting.DeparturesReportRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Operations.Reporting.DeparturesReportRow> Departures {
      get { return departures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeparturesReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeparturesReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TenancyName != other.TenancyName) return false;
      if (StaffPrinter != other.StaffPrinter) return false;
      if (!object.Equals(PrintedAt, other.PrintedAt)) return false;
      if (!object.Equals(ReportDate, other.ReportDate)) return false;
      if (TotalAdultsCount != other.TotalAdultsCount) return false;
      if(!departures_.Equals(other.departures_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TenancyName.Length != 0) hash ^= TenancyName.GetHashCode();
      if (StaffPrinter.Length != 0) hash ^= StaffPrinter.GetHashCode();
      if (printedAt_ != null) hash ^= PrintedAt.GetHashCode();
      if (reportDate_ != null) hash ^= ReportDate.GetHashCode();
      if (TotalAdultsCount != 0) hash ^= TotalAdultsCount.GetHashCode();
      hash ^= departures_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TenancyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TenancyName);
      }
      if (StaffPrinter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StaffPrinter);
      }
      if (printedAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PrintedAt);
      }
      if (reportDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReportDate);
      }
      if (TotalAdultsCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(TotalAdultsCount);
      }
      departures_.WriteTo(output, _repeated_departures_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TenancyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TenancyName);
      }
      if (StaffPrinter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StaffPrinter);
      }
      if (printedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrintedAt);
      }
      if (reportDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportDate);
      }
      if (TotalAdultsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalAdultsCount);
      }
      size += departures_.CalculateSize(_repeated_departures_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeparturesReport other) {
      if (other == null) {
        return;
      }
      if (other.TenancyName.Length != 0) {
        TenancyName = other.TenancyName;
      }
      if (other.StaffPrinter.Length != 0) {
        StaffPrinter = other.StaffPrinter;
      }
      if (other.printedAt_ != null) {
        if (printedAt_ == null) {
          printedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PrintedAt.MergeFrom(other.PrintedAt);
      }
      if (other.reportDate_ != null) {
        if (reportDate_ == null) {
          reportDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReportDate.MergeFrom(other.ReportDate);
      }
      if (other.TotalAdultsCount != 0) {
        TotalAdultsCount = other.TotalAdultsCount;
      }
      departures_.Add(other.departures_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TenancyName = input.ReadString();
            break;
          }
          case 18: {
            StaffPrinter = input.ReadString();
            break;
          }
          case 26: {
            if (printedAt_ == null) {
              printedAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(printedAt_);
            break;
          }
          case 34: {
            if (reportDate_ == null) {
              reportDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(reportDate_);
            break;
          }
          case 40: {
            TotalAdultsCount = input.ReadUInt32();
            break;
          }
          case 50: {
            departures_.AddEntriesFrom(input, _repeated_departures_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
