// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/group_booking_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.Booking.RPC {
  public static partial class GroupBookingSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.GroupBookingSvc";

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> __Marshaller_GroupBookingSvcAllBookings = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.CRM.Groups.GroupIndicator> __Marshaller_GroupIndicator = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Groups.GroupIndicator.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Marshaller_GroupBookingExt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Groups.GroupBookingExt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Groups.GroupBooking> __Marshaller_GroupBooking = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Groups.GroupBooking.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest> __Marshaller_GroupBookingSvcPriceUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest> __Marshaller_GroupBookingSvcQuantityUpdateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator> __Marshaller_GroupBookingIndicator = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> __Marshaller_GroupBookingSvcGetReservationsWithTagResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest> __Marshaller_GroupBookingSvcGetByIdsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> __Marshaller_GroupBookingSvcGetByIdsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest> __Marshaller_PaymentReservationMappingRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse> __Marshaller_GroupBookingPaymentMappingResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> __Method_All = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "All",
        __Marshaller_Empty,
        __Marshaller_GroupBookingSvcAllBookings);

    static readonly grpc::Method<global::HOLMS.Types.CRM.Groups.GroupIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Method_Create = new grpc::Method<global::HOLMS.Types.CRM.Groups.GroupIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_GroupIndicator,
        __Marshaller_GroupBookingExt);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Groups.GroupBooking, global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Method_Update = new grpc::Method<global::HOLMS.Types.Booking.Groups.GroupBooking, global::HOLMS.Types.Booking.Groups.GroupBookingExt>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_GroupBooking,
        __Marshaller_GroupBookingExt);

    static readonly grpc::Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateGroupBookingPrices = new grpc::Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGroupBookingPrices",
        __Marshaller_GroupBookingSvcPriceUpdateRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateQuantities = new grpc::Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateQuantities",
        __Marshaller_GroupBookingSvcQuantityUpdateRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> __Method_GetReservationSummariesWithGBTag = new grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReservationSummariesWithGBTag",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBookingSvcGetReservationsWithTagResponse);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBooking> __Method_GetById = new grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBooking>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBooking);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Method_GetByIdFull = new grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByIdFull",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBookingExt);

    static readonly grpc::Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> __Method_GetByIds = new grpc::Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByIds",
        __Marshaller_GroupBookingSvcGetByIdsRequest,
        __Marshaller_GroupBookingSvcGetByIdsResponse);

    static readonly grpc::Method<global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_MapPaymentWithReservation = new grpc::Method<global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MapPaymentWithReservation",
        __Marshaller_PaymentReservationMappingRequest,
        __Marshaller_Empty);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse> __Method_GetPaymentMappingById = new grpc::Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPaymentMappingById",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBookingPaymentMappingResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GroupBookingSvc</summary>
    public abstract partial class GroupBookingSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> All(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBookingExt> Create(global::HOLMS.Types.CRM.Groups.GroupIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBookingExt> Update(global::HOLMS.Types.Booking.Groups.GroupBooking request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateGroupBookingPrices(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateQuantities(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> GetReservationSummariesWithGBTag(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBooking> GetById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBookingExt> GetByIdFull(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> GetByIds(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> MapPaymentWithReservation(global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse> GetPaymentMappingById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GroupBookingSvc</summary>
    public partial class GroupBookingSvcClient : grpc::ClientBase<GroupBookingSvcClient>
    {
      /// <summary>Creates a new client for GroupBookingSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GroupBookingSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GroupBookingSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GroupBookingSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GroupBookingSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GroupBookingSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings All(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return All(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings All(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_All, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_All, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Create(global::HOLMS.Types.CRM.Groups.GroupIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Create(global::HOLMS.Types.CRM.Groups.GroupIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> CreateAsync(global::HOLMS.Types.CRM.Groups.GroupIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> CreateAsync(global::HOLMS.Types.CRM.Groups.GroupIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Update(global::HOLMS.Types.Booking.Groups.GroupBooking request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Update(global::HOLMS.Types.Booking.Groups.GroupBooking request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> UpdateAsync(global::HOLMS.Types.Booking.Groups.GroupBooking request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> UpdateAsync(global::HOLMS.Types.Booking.Groups.GroupBooking request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateGroupBookingPrices(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateGroupBookingPrices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateGroupBookingPrices(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGroupBookingPrices, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateGroupBookingPricesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateGroupBookingPricesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateGroupBookingPricesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGroupBookingPrices, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateQuantities(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateQuantities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateQuantities(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateQuantities, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateQuantitiesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateQuantitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateQuantitiesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateQuantities, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse GetReservationSummariesWithGBTag(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetReservationSummariesWithGBTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse GetReservationSummariesWithGBTag(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReservationSummariesWithGBTag, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> GetReservationSummariesWithGBTagAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetReservationSummariesWithGBTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> GetReservationSummariesWithGBTagAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReservationSummariesWithGBTag, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBooking GetById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBooking GetById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBooking> GetByIdAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBooking> GetByIdAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt GetByIdFull(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdFull(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt GetByIdFull(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByIdFull, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> GetByIdFullAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdFullAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> GetByIdFullAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByIdFull, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse GetByIds(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse GetByIds(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByIds, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> GetByIdsAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> GetByIdsAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByIds, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty MapPaymentWithReservation(global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MapPaymentWithReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty MapPaymentWithReservation(global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MapPaymentWithReservation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> MapPaymentWithReservationAsync(global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return MapPaymentWithReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> MapPaymentWithReservationAsync(global::HOLMS.Types.Booking.RPC.PaymentReservationMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MapPaymentWithReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse GetPaymentMappingById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPaymentMappingById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse GetPaymentMappingById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPaymentMappingById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse> GetPaymentMappingByIdAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetPaymentMappingByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingPaymentMappingResponse> GetPaymentMappingByIdAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPaymentMappingById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override GroupBookingSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GroupBookingSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GroupBookingSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_All, serviceImpl.All)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_UpdateGroupBookingPrices, serviceImpl.UpdateGroupBookingPrices)
          .AddMethod(__Method_UpdateQuantities, serviceImpl.UpdateQuantities)
          .AddMethod(__Method_GetReservationSummariesWithGBTag, serviceImpl.GetReservationSummariesWithGBTag)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_GetByIdFull, serviceImpl.GetByIdFull)
          .AddMethod(__Method_GetByIds, serviceImpl.GetByIds)
          .AddMethod(__Method_MapPaymentWithReservation, serviceImpl.MapPaymentWithReservation)
          .AddMethod(__Method_GetPaymentMappingById, serviceImpl.GetPaymentMappingById).Build();
    }

  }
}
#endregion
