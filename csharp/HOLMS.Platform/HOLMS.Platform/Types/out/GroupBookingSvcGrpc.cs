// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/group_booking_svc.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace HOLMS.Types.Booking.RPC {
  public static class GroupBookingSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.GroupBookingSvc";

    static readonly Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> __Marshaller_GroupBookingSvcAllBookings = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.CRM.Groups.GroupIndicator> __Marshaller_GroupIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.CRM.Groups.GroupIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Marshaller_GroupBookingExt = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Groups.GroupBookingExt.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.Groups.GroupBooking> __Marshaller_GroupBooking = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Groups.GroupBooking.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest> __Marshaller_GroupBookingSvcPriceUpdateRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest> __Marshaller_GroupBookingSvcQuantityUpdateRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator> __Marshaller_GroupBookingIndicator = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> __Marshaller_GroupBookingSvcGetReservationsWithTagResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest> __Marshaller_GroupBookingSvcGetByIdsRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> __Marshaller_GroupBookingSvcGetByIdsResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest> __Marshaller_GroupBookingSvcGetFilteredBookingsListRequest = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest.Parser.ParseFrom);
    static readonly Marshaller<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse> __Marshaller_GroupBookingSvcGetFilteredBookingsListResponse = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse.Parser.ParseFrom);

    static readonly Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> __Method_All = new Method<global::Google.Protobuf.WellKnownTypes.Empty, global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings>(
        MethodType.Unary,
        __ServiceName,
        "All",
        __Marshaller_Empty,
        __Marshaller_GroupBookingSvcAllBookings);

    static readonly Method<global::HOLMS.Types.CRM.Groups.GroupIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Method_Create = new Method<global::HOLMS.Types.CRM.Groups.GroupIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt>(
        MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_GroupIndicator,
        __Marshaller_GroupBookingExt);

    static readonly Method<global::HOLMS.Types.Booking.Groups.GroupBooking, global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Method_Update = new Method<global::HOLMS.Types.Booking.Groups.GroupBooking, global::HOLMS.Types.Booking.Groups.GroupBookingExt>(
        MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_GroupBooking,
        __Marshaller_GroupBookingExt);

    static readonly Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateGroupBookingPrices = new Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "UpdateGroupBookingPrices",
        __Marshaller_GroupBookingSvcPriceUpdateRequest,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateQuantities = new Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        MethodType.Unary,
        __ServiceName,
        "UpdateQuantities",
        __Marshaller_GroupBookingSvcQuantityUpdateRequest,
        __Marshaller_Empty);

    static readonly Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> __Method_GetReservationSummariesWithGBTag = new Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetReservationSummariesWithGBTag",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBookingSvcGetReservationsWithTagResponse);

    static readonly Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBooking> __Method_GetById = new Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBooking>(
        MethodType.Unary,
        __ServiceName,
        "GetById",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBooking);

    static readonly Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt> __Method_GetByIdFull = new Method<global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator, global::HOLMS.Types.Booking.Groups.GroupBookingExt>(
        MethodType.Unary,
        __ServiceName,
        "GetByIdFull",
        __Marshaller_GroupBookingIndicator,
        __Marshaller_GroupBookingExt);

    static readonly Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> __Method_GetByIds = new Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetByIds",
        __Marshaller_GroupBookingSvcGetByIdsRequest,
        __Marshaller_GroupBookingSvcGetByIdsResponse);

    static readonly Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse> __Method_GetFilteredBookingsList = new Method<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest, global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse>(
        MethodType.Unary,
        __ServiceName,
        "GetFilteredBookingsList",
        __Marshaller_GroupBookingSvcGetFilteredBookingsListRequest,
        __Marshaller_GroupBookingSvcGetFilteredBookingsListResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Booking.RPC.GroupBookingSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GroupBookingSvc</summary>
    public abstract class GroupBookingSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> All(global::Google.Protobuf.WellKnownTypes.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBookingExt> Create(global::HOLMS.Types.CRM.Groups.GroupIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBookingExt> Update(global::HOLMS.Types.Booking.Groups.GroupBooking request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateGroupBookingPrices(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UpdateQuantities(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> GetReservationSummariesWithGBTag(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBooking> GetById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.Groups.GroupBookingExt> GetByIdFull(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> GetByIds(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse> GetFilteredBookingsList(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GroupBookingSvc</summary>
    public class GroupBookingSvcClient : ClientBase<GroupBookingSvcClient>
    {
      /// <summary>Creates a new client for GroupBookingSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public GroupBookingSvcClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GroupBookingSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public GroupBookingSvcClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected GroupBookingSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected GroupBookingSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings All(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return All(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings All(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_All, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AllAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcAllBookings> AllAsync(global::Google.Protobuf.WellKnownTypes.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_All, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Create(global::HOLMS.Types.CRM.Groups.GroupIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Create(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Create(global::HOLMS.Types.CRM.Groups.GroupIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> CreateAsync(global::HOLMS.Types.CRM.Groups.GroupIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> CreateAsync(global::HOLMS.Types.CRM.Groups.GroupIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Update(global::HOLMS.Types.Booking.Groups.GroupBooking request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Update(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt Update(global::HOLMS.Types.Booking.Groups.GroupBooking request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> UpdateAsync(global::HOLMS.Types.Booking.Groups.GroupBooking request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> UpdateAsync(global::HOLMS.Types.Booking.Groups.GroupBooking request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateGroupBookingPrices(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateGroupBookingPrices(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateGroupBookingPrices(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGroupBookingPrices, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateGroupBookingPricesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateGroupBookingPricesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateGroupBookingPricesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcPriceUpdateRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGroupBookingPrices, null, options, request);
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateQuantities(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateQuantities(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateQuantities(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateQuantities, null, options, request);
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateQuantitiesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateQuantitiesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UpdateQuantitiesAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcQuantityUpdateRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateQuantities, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse GetReservationSummariesWithGBTag(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetReservationSummariesWithGBTag(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse GetReservationSummariesWithGBTag(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReservationSummariesWithGBTag, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> GetReservationSummariesWithGBTagAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetReservationSummariesWithGBTagAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetReservationsWithTagResponse> GetReservationSummariesWithGBTagAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReservationSummariesWithGBTag, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBooking GetById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetById(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBooking GetById(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBooking> GetByIdAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBooking> GetByIdAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetById, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt GetByIdFull(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdFull(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.Groups.GroupBookingExt GetByIdFull(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByIdFull, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> GetByIdFullAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdFullAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.Groups.GroupBookingExt> GetByIdFullAsync(global::HOLMS.Types.Booking.Indicators.GroupBookingIndicator request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByIdFull, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse GetByIds(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIds(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse GetByIds(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByIds, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> GetByIdsAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByIdsAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsResponse> GetByIdsAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetByIdsRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByIds, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse GetFilteredBookingsList(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFilteredBookingsList(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse GetFilteredBookingsList(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFilteredBookingsList, null, options, request);
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse> GetFilteredBookingsListAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFilteredBookingsListAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListResponse> GetFilteredBookingsListAsync(global::HOLMS.Types.Booking.RPC.GroupBookingSvcGetFilteredBookingsListRequest request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFilteredBookingsList, null, options, request);
      }
      protected override GroupBookingSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GroupBookingSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(GroupBookingSvcBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_All, serviceImpl.All)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_UpdateGroupBookingPrices, serviceImpl.UpdateGroupBookingPrices)
          .AddMethod(__Method_UpdateQuantities, serviceImpl.UpdateQuantities)
          .AddMethod(__Method_GetReservationSummariesWithGBTag, serviceImpl.GetReservationSummariesWithGBTag)
          .AddMethod(__Method_GetById, serviceImpl.GetById)
          .AddMethod(__Method_GetByIdFull, serviceImpl.GetByIdFull)
          .AddMethod(__Method_GetByIds, serviceImpl.GetByIds)
          .AddMethod(__Method_GetFilteredBookingsList, serviceImpl.GetFilteredBookingsList).Build();
    }

  }
}
#endregion
