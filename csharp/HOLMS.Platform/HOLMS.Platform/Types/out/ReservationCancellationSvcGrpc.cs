// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: booking/rpc/reservation_cancellation_svc.proto
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace HOLMS.Types.Booking.RPC {
  public static partial class ReservationCancellationSvc
  {
    static readonly string __ServiceName = "holms.types.booking.rpc.ReservationCancellationSvc";

    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.Indicators.ReservationIndicator> __Marshaller_ReservationIndicator = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.Indicators.ReservationIndicator.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.CancellationPenaltyEstimate> __Marshaller_CancellationPenaltyEstimate = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.CancellationPenaltyEstimate.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.CancellationRequest> __Marshaller_CancellationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.CancellationRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse> __Marshaller_ReservationCancellationSvcCancelReservationResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse> __Marshaller_ReservationCancellationSvcGetCancelledReservationResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange> __Marshaller_PbInclusiveCalendarDateRange = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse> __Marshaller_ReservationCancellationSvcSearchCancelledReservationsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.CancellationPenaltyEstimate> __Method_EstimateCancellationPenalty = new grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.CancellationPenaltyEstimate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateCancellationPenalty",
        __Marshaller_ReservationIndicator,
        __Marshaller_CancellationPenaltyEstimate);

    static readonly grpc::Method<global::HOLMS.Types.Booking.CancellationRequest, global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse> __Method_CancelReservation = new grpc::Method<global::HOLMS.Types.Booking.CancellationRequest, global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelReservation",
        __Marshaller_CancellationRequest,
        __Marshaller_ReservationCancellationSvcCancelReservationResponse);

    static readonly grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse> __Method_GetCancelledReservation = new grpc::Method<global::HOLMS.Types.Booking.Indicators.ReservationIndicator, global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCancelledReservation",
        __Marshaller_ReservationIndicator,
        __Marshaller_ReservationCancellationSvcGetCancelledReservationResponse);

    static readonly grpc::Method<global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange, global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse> __Method_SearchCancelledReservations = new grpc::Method<global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange, global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchCancelledReservations",
        __Marshaller_PbInclusiveCalendarDateRange,
        __Marshaller_ReservationCancellationSvcSearchCancelledReservationsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ReservationCancellationSvc</summary>
    public abstract partial class ReservationCancellationSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.CancellationPenaltyEstimate> EstimateCancellationPenalty(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse> CancelReservation(global::HOLMS.Types.Booking.CancellationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse> GetCancelledReservation(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse> SearchCancelledReservations(global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ReservationCancellationSvc</summary>
    public partial class ReservationCancellationSvcClient : grpc::ClientBase<ReservationCancellationSvcClient>
    {
      /// <summary>Creates a new client for ReservationCancellationSvc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ReservationCancellationSvcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ReservationCancellationSvc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ReservationCancellationSvcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ReservationCancellationSvcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ReservationCancellationSvcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::HOLMS.Types.Booking.CancellationPenaltyEstimate EstimateCancellationPenalty(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateCancellationPenalty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.CancellationPenaltyEstimate EstimateCancellationPenalty(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateCancellationPenalty, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.CancellationPenaltyEstimate> EstimateCancellationPenaltyAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return EstimateCancellationPenaltyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.CancellationPenaltyEstimate> EstimateCancellationPenaltyAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateCancellationPenalty, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse CancelReservation(global::HOLMS.Types.Booking.CancellationRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CancelReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse CancelReservation(global::HOLMS.Types.Booking.CancellationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelReservation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse> CancelReservationAsync(global::HOLMS.Types.Booking.CancellationRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CancelReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcCancelReservationResponse> CancelReservationAsync(global::HOLMS.Types.Booking.CancellationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse GetCancelledReservation(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetCancelledReservation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse GetCancelledReservation(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCancelledReservation, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse> GetCancelledReservationAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetCancelledReservationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcGetCancelledReservationResponse> GetCancelledReservationAsync(global::HOLMS.Types.Booking.Indicators.ReservationIndicator request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCancelledReservation, null, options, request);
      }
      public virtual global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse SearchCancelledReservations(global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchCancelledReservations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse SearchCancelledReservations(global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchCancelledReservations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse> SearchCancelledReservationsAsync(global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchCancelledReservationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::HOLMS.Types.Booking.RPC.ReservationCancellationSvcSearchCancelledReservationsResponse> SearchCancelledReservationsAsync(global::HOLMS.Types.Primitive.PbInclusiveCalendarDateRange request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchCancelledReservations, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ReservationCancellationSvcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ReservationCancellationSvcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ReservationCancellationSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_EstimateCancellationPenalty, serviceImpl.EstimateCancellationPenalty)
          .AddMethod(__Method_CancelReservation, serviceImpl.CancelReservation)
          .AddMethod(__Method_GetCancelledReservation, serviceImpl.GetCancelledReservation)
          .AddMethod(__Method_SearchCancelledReservations, serviceImpl.SearchCancelledReservations).Build();
    }

  }
}
#endregion
