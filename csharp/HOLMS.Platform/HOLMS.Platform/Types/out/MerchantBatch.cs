// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: money/cards/transactions/merchant_batch.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Money.Cards.Transactions {

  /// <summary>Holder for reflection information generated from money/cards/transactions/merchant_batch.proto</summary>
  public static partial class MerchantBatchReflection {

    #region Descriptor
    /// <summary>File descriptor for money/cards/transactions/merchant_batch.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MerchantBatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1tb25leS9jYXJkcy90cmFuc2FjdGlvbnMvbWVyY2hhbnRfYmF0Y2gucHJv",
            "dG8SJGhvbG1zLnR5cGVzLm1vbmV5LmNhcmRzLnRyYW5zYWN0aW9ucxofZ29v",
            "Z2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxopbW9uZXkvY2FyZHMvY2Fy",
            "ZF9tZXJjaGFudF9pbmRpY2F0b3IucHJvdG8aN21vbmV5L2NhcmRzL3RyYW5z",
            "YWN0aW9ucy9tZXJjaGFudF9iYXRjaF9pbmRpY2F0b3IucHJvdG8aOG1vbmV5",
            "L2NhcmRzL3RyYW5zYWN0aW9ucy9wYXltZW50X2NhcmRfc2FsZV9jYXB0dXJl",
            "LnByb3RvGjJtb25leS9jYXJkcy90cmFuc2FjdGlvbnMvcGF5bWVudF9jYXJk",
            "X3JlZnVuZC5wcm90bxo7bW9uZXkvY2FyZHMvdHJhbnNhY3Rpb25zL3Byb2Nl",
            "c3Nvcl90cmFuc2FjdGlvbl9yZXN1bHQucHJvdG8aH3ByaW1pdGl2ZS9tb25l",
            "dGFyeV9hbW91bnQucHJvdG8izAQKDU1lcmNoYW50QmF0Y2gSTwoJZW50aXR5",
            "X2lkGAEgASgLMjwuaG9sbXMudHlwZXMubW9uZXkuY2FyZHMudHJhbnNhY3Rp",
            "b25zLk1lcmNoYW50QmF0Y2hJbmRpY2F0b3ISQwoLbWVyY2hhbnRfaWQYAiAB",
            "KAsyLi5ob2xtcy50eXBlcy5tb25leS5jYXJkcy5DYXJkTWVyY2hhbnRJbmRp",
            "Y2F0b3ISFQoNbWVyY2hhbnRfbmFtZRgDIAEoCRJQCgZyZXN1bHQYBCABKA4y",
            "QC5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2FjdGlvbnMuUHJvY2Vz",
            "c29yVHJhbnNhY3Rpb25SZXN1bHQSGgoScHJvY2Vzc29yX2JhdGNoX2lkGAUg",
            "ASgFEhkKEXRyYW5zYWN0aW9uX2NvdW50GAYgASgFEjsKDHRvdGFsX2Ftb3Vu",
            "dBgHIAEoCzIlLmhvbG1zLnR5cGVzLnByaW1pdGl2ZS5Nb25ldGFyeUFtb3Vu",
            "dBIuCgpjcmVhdGVkX2F0GAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBJOCghjYXB0dXJlcxgJIAMoCzI8LmhvbG1zLnR5cGVzLm1vbmV5LmNh",
            "cmRzLnRyYW5zYWN0aW9ucy5QYXltZW50Q2FyZFNhbGVDYXB0dXJlEkgKB3Jl",
            "ZnVuZHMYCiADKAsyNy5ob2xtcy50eXBlcy5tb25leS5jYXJkcy50cmFuc2Fj",
            "dGlvbnMuUGF5bWVudENhcmRSZWZ1bmRCJ6oCJEhPTE1TLlR5cGVzLk1vbmV5",
            "LkNhcmRzLlRyYW5zYWN0aW9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::HOLMS.Types.Money.Cards.CardMerchantIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.MerchantBatchIndicatorReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCaptureReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefundReflection.Descriptor, global::HOLMS.Types.Money.Cards.Transactions.ProcessorTransactionResultReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Money.Cards.Transactions.MerchantBatch), global::HOLMS.Types.Money.Cards.Transactions.MerchantBatch.Parser, new[]{ "EntityId", "MerchantId", "MerchantName", "Result", "ProcessorBatchId", "TransactionCount", "TotalAmount", "CreatedAt", "Captures", "Refunds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MerchantBatch : pb::IMessage<MerchantBatch> {
    private static readonly pb::MessageParser<MerchantBatch> _parser = new pb::MessageParser<MerchantBatch>(() => new MerchantBatch());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MerchantBatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Money.Cards.Transactions.MerchantBatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantBatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantBatch(MerchantBatch other) : this() {
      EntityId = other.entityId_ != null ? other.EntityId.Clone() : null;
      MerchantId = other.merchantId_ != null ? other.MerchantId.Clone() : null;
      merchantName_ = other.merchantName_;
      result_ = other.result_;
      processorBatchId_ = other.processorBatchId_;
      transactionCount_ = other.transactionCount_;
      TotalAmount = other.totalAmount_ != null ? other.TotalAmount.Clone() : null;
      CreatedAt = other.createdAt_ != null ? other.CreatedAt.Clone() : null;
      captures_ = other.captures_.Clone();
      refunds_ = other.refunds_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MerchantBatch Clone() {
      return new MerchantBatch(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::HOLMS.Types.Money.Cards.Transactions.MerchantBatchIndicator entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.MerchantBatchIndicator EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }

    /// <summary>Field number for the "merchant_id" field.</summary>
    public const int MerchantIdFieldNumber = 2;
    private global::HOLMS.Types.Money.Cards.CardMerchantIndicator merchantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.CardMerchantIndicator MerchantId {
      get { return merchantId_; }
      set {
        merchantId_ = value;
      }
    }

    /// <summary>Field number for the "merchant_name" field.</summary>
    public const int MerchantNameFieldNumber = 3;
    private string merchantName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MerchantName {
      get { return merchantName_; }
      set {
        merchantName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::HOLMS.Types.Money.Cards.Transactions.ProcessorTransactionResult result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Money.Cards.Transactions.ProcessorTransactionResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "processor_batch_id" field.</summary>
    public const int ProcessorBatchIdFieldNumber = 5;
    private int processorBatchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessorBatchId {
      get { return processorBatchId_; }
      set {
        processorBatchId_ = value;
      }
    }

    /// <summary>Field number for the "transaction_count" field.</summary>
    public const int TransactionCountFieldNumber = 6;
    private int transactionCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TransactionCount {
      get { return transactionCount_; }
      set {
        transactionCount_ = value;
      }
    }

    /// <summary>Field number for the "total_amount" field.</summary>
    public const int TotalAmountFieldNumber = 7;
    private global::HOLMS.Types.Primitive.MonetaryAmount totalAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount TotalAmount {
      get { return totalAmount_; }
      set {
        totalAmount_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "captures" field.</summary>
    public const int CapturesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> _repeated_captures_codec
        = pb::FieldCodec.ForMessage(74, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> captures_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardSaleCapture> Captures {
      get { return captures_; }
    }

    /// <summary>Field number for the "refunds" field.</summary>
    public const int RefundsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund> _repeated_refunds_codec
        = pb::FieldCodec.ForMessage(82, global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund> refunds_ = new pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Money.Cards.Transactions.PaymentCardRefund> Refunds {
      get { return refunds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MerchantBatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MerchantBatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (!object.Equals(MerchantId, other.MerchantId)) return false;
      if (MerchantName != other.MerchantName) return false;
      if (Result != other.Result) return false;
      if (ProcessorBatchId != other.ProcessorBatchId) return false;
      if (TransactionCount != other.TransactionCount) return false;
      if (!object.Equals(TotalAmount, other.TotalAmount)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if(!captures_.Equals(other.captures_)) return false;
      if(!refunds_.Equals(other.refunds_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entityId_ != null) hash ^= EntityId.GetHashCode();
      if (merchantId_ != null) hash ^= MerchantId.GetHashCode();
      if (MerchantName.Length != 0) hash ^= MerchantName.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ProcessorBatchId != 0) hash ^= ProcessorBatchId.GetHashCode();
      if (TransactionCount != 0) hash ^= TransactionCount.GetHashCode();
      if (totalAmount_ != null) hash ^= TotalAmount.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      hash ^= captures_.GetHashCode();
      hash ^= refunds_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entityId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (merchantId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MerchantId);
      }
      if (MerchantName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MerchantName);
      }
      if (Result != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Result);
      }
      if (ProcessorBatchId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ProcessorBatchId);
      }
      if (TransactionCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TransactionCount);
      }
      if (totalAmount_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TotalAmount);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CreatedAt);
      }
      captures_.WriteTo(output, _repeated_captures_codec);
      refunds_.WriteTo(output, _repeated_refunds_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entityId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (merchantId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerchantId);
      }
      if (MerchantName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MerchantName);
      }
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ProcessorBatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessorBatchId);
      }
      if (TransactionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TransactionCount);
      }
      if (totalAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalAmount);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      size += captures_.CalculateSize(_repeated_captures_codec);
      size += refunds_.CalculateSize(_repeated_refunds_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MerchantBatch other) {
      if (other == null) {
        return;
      }
      if (other.entityId_ != null) {
        if (entityId_ == null) {
          entityId_ = new global::HOLMS.Types.Money.Cards.Transactions.MerchantBatchIndicator();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.merchantId_ != null) {
        if (merchantId_ == null) {
          merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
        }
        MerchantId.MergeFrom(other.MerchantId);
      }
      if (other.MerchantName.Length != 0) {
        MerchantName = other.MerchantName;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ProcessorBatchId != 0) {
        ProcessorBatchId = other.ProcessorBatchId;
      }
      if (other.TransactionCount != 0) {
        TransactionCount = other.TransactionCount;
      }
      if (other.totalAmount_ != null) {
        if (totalAmount_ == null) {
          totalAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        TotalAmount.MergeFrom(other.TotalAmount);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          createdAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      captures_.Add(other.captures_);
      refunds_.Add(other.refunds_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (entityId_ == null) {
              entityId_ = new global::HOLMS.Types.Money.Cards.Transactions.MerchantBatchIndicator();
            }
            input.ReadMessage(entityId_);
            break;
          }
          case 18: {
            if (merchantId_ == null) {
              merchantId_ = new global::HOLMS.Types.Money.Cards.CardMerchantIndicator();
            }
            input.ReadMessage(merchantId_);
            break;
          }
          case 26: {
            MerchantName = input.ReadString();
            break;
          }
          case 32: {
            result_ = (global::HOLMS.Types.Money.Cards.Transactions.ProcessorTransactionResult) input.ReadEnum();
            break;
          }
          case 40: {
            ProcessorBatchId = input.ReadInt32();
            break;
          }
          case 48: {
            TransactionCount = input.ReadInt32();
            break;
          }
          case 58: {
            if (totalAmount_ == null) {
              totalAmount_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(totalAmount_);
            break;
          }
          case 66: {
            if (createdAt_ == null) {
              createdAt_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createdAt_);
            break;
          }
          case 74: {
            captures_.AddEntriesFrom(input, _repeated_captures_codec);
            break;
          }
          case 82: {
            refunds_.AddEntriesFrom(input, _repeated_refunds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
