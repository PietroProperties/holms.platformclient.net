// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: folio/fsv2/folio_state_v2.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HOLMS.Types.Folio.FSv2 {

  /// <summary>Holder for reflection information generated from folio/fsv2/folio_state_v2.proto</summary>
  public static partial class FolioStateV2Reflection {

    #region Descriptor
    /// <summary>File descriptor for folio/fsv2/folio_state_v2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FolioStateV2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9mb2xpby9mc3YyL2ZvbGlvX3N0YXRlX3YyLnByb3RvEhZob2xtcy50eXBl",
            "cy5mb2xpby5mc3YyGiRmb2xpby9mc3YyL2ZvbGlvX2F0b21pY19jaGFyZ2Uu",
            "cHJvdG8aIWZvbGlvL2ZzdjIvZm9saW9fYWRqdXN0bWVudC5wcm90bxoiZm9s",
            "aW8vZnN2Mi9mb2xpb19jYXJkX3JlZnVuZC5wcm90bxogZm9saW8vZnN2Mi9m",
            "b2xpb19jYXJkX3NhbGUucHJvdG8aKWZvbGlvL2ZzdjIvZm9saW9fY2hlY2tf",
            "Y2FzaF9wYXltZW50LnByb3RvGiVmb2xpby9mc3YyL2ZvbGlvX3RheF9hc3Nl",
            "c3NtZW50LnByb3RvGiRmb2xpby9mc3YyL21hc3Rlcl9mb2xpb19zdGF0dXMu",
            "cHJvdG8aH3ByaW1pdGl2ZS9tb25ldGFyeV9hbW91bnQucHJvdG8i2gkKDEZv",
            "bGlvU3RhdGV2MhJEChFlZmZlY3RpdmVfY2hhcmdlcxgBIAMoCzIpLmhvbG1z",
            "LnR5cGVzLmZvbGlvLmZzdjIuRm9saW9BdG9taWNDaGFyZ2USPAoLYWRqdXN0",
            "bWVudHMYAiADKAsyJy5ob2xtcy50eXBlcy5mb2xpby5mc3YyLkZvbGlvQWRq",
            "dXN0bWVudBI9CgxjYXJkX3JlZnVuZHMYAyADKAsyJy5ob2xtcy50eXBlcy5m",
            "b2xpby5mc3YyLkZvbGlvQ2FyZFJlZnVuZBI5CgpjYXJkX3NhbGVzGAQgAygL",
            "MiUuaG9sbXMudHlwZXMuZm9saW8uZnN2Mi5Gb2xpb0NhcmRTYWxlEkoKE2No",
            "ZWNrX2Nhc2hfcGF5bWVudHMYBSADKAsyLS5ob2xtcy50eXBlcy5mb2xpby5m",
            "c3YyLkZvbGlvQ2hlY2tDYXNoUGF5bWVudBJLChdjdXJyZW50X3RheF9hc3Nl",
            "c3NtZW50cxgGIAMoCzIqLmhvbG1zLnR5cGVzLmZvbGlvLmZzdjIuRm9saW9U",
            "YXhBc3Nlc3NtZW50ElUKIWFudGljaXBhdGVkX2VuZGluZ190YXhfYXNzZXNz",
            "bWVudBgHIAMoCzIqLmhvbG1zLnR5cGVzLmZvbGlvLmZzdjIuRm9saW9UYXhB",
            "c3Nlc3NtZW50EkYKE21hc3Rlcl9mb2xpb19zdGF0dXMYCCABKA4yKS5ob2xt",
            "cy50eXBlcy5mb2xpby5mc3YyLk1hc3RlckZvbGlvU3RhdHVzEkEKDm5hdGl2",
            "ZV9jaGFyZ2VzGAkgAygLMikuaG9sbXMudHlwZXMuZm9saW8uZnN2Mi5Gb2xp",
            "b0F0b21pY0NoYXJnZRJSCh9leHBvcnRlZF90b19vdGhlcl9mb2xpb19jaGFy",
            "Z2VzGAogAygLMikuaG9sbXMudHlwZXMuZm9saW8uZnN2Mi5Gb2xpb0F0b21p",
            "Y0NoYXJnZRJUCiFpbXBvcnRlZF9mcm9tX290aGVyX2ZvbGlvX2NoYXJnZXMY",
            "CyADKAsyKS5ob2xtcy50eXBlcy5mb2xpby5mc3YyLkZvbGlvQXRvbWljQ2hh",
            "cmdlEkIKE2N1cnJlbnRfbmV0X2NoYXJnZXMYDCABKAsyJS5ob2xtcy50eXBl",
            "cy5wcmltaXRpdmUuTW9uZXRhcnlBbW91bnQSRgoXYW50aWNpcGF0ZWRfbmV0",
            "X2NoYXJnZXMYDSABKAsyJS5ob2xtcy50eXBlcy5wcmltaXRpdmUuTW9uZXRh",
            "cnlBbW91bnQSPgoPcG9zdGVkX3BheW1lbnRzGA4gASgLMiUuaG9sbXMudHlw",
            "ZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50Ej0KDnBvc3RlZF9yZWZ1bmRz",
            "GA8gASgLMiUuaG9sbXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50",
            "EkwKHXVudXNlZF9wYXltZW50X2F1dGhvcml6YXRpb25zGBAgASgLMiUuaG9s",
            "bXMudHlwZXMucHJpbWl0aXZlLk1vbmV0YXJ5QW1vdW50Ek4KH3VudXNlZF9n",
            "dWFyYW50ZWVfYXV0aG9yaXphdGlvbnMYESABKAsyJS5ob2xtcy50eXBlcy5w",
            "cmltaXRpdmUuTW9uZXRhcnlBbW91bnRCGaoCFkhPTE1TLlR5cGVzLkZvbGlv",
            "LkZTdjJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HOLMS.Types.Folio.FSv2.FolioAtomicChargeReflection.Descriptor, global::HOLMS.Types.Folio.FSv2.FolioAdjustmentReflection.Descriptor, global::HOLMS.Types.Folio.FSv2.FolioCardRefundReflection.Descriptor, global::HOLMS.Types.Folio.FSv2.FolioCardSaleReflection.Descriptor, global::HOLMS.Types.Folio.FSv2.FolioCheckCashPaymentReflection.Descriptor, global::HOLMS.Types.Folio.FSv2.FolioTaxAssessmentReflection.Descriptor, global::HOLMS.Types.Folio.FSv2.MasterFolioStatusReflection.Descriptor, global::HOLMS.Types.Primitive.MonetaryAmountReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HOLMS.Types.Folio.FSv2.FolioStatev2), global::HOLMS.Types.Folio.FSv2.FolioStatev2.Parser, new[]{ "EffectiveCharges", "Adjustments", "CardRefunds", "CardSales", "CheckCashPayments", "CurrentTaxAssessments", "AnticipatedEndingTaxAssessment", "MasterFolioStatus", "NativeCharges", "ExportedToOtherFolioCharges", "ImportedFromOtherFolioCharges", "CurrentNetCharges", "AnticipatedNetCharges", "PostedPayments", "PostedRefunds", "UnusedPaymentAuthorizations", "UnusedGuaranteeAuthorizations" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FolioStatev2 : pb::IMessage<FolioStatev2> {
    private static readonly pb::MessageParser<FolioStatev2> _parser = new pb::MessageParser<FolioStatev2>(() => new FolioStatev2());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FolioStatev2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HOLMS.Types.Folio.FSv2.FolioStateV2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioStatev2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioStatev2(FolioStatev2 other) : this() {
      effectiveCharges_ = other.effectiveCharges_.Clone();
      adjustments_ = other.adjustments_.Clone();
      cardRefunds_ = other.cardRefunds_.Clone();
      cardSales_ = other.cardSales_.Clone();
      checkCashPayments_ = other.checkCashPayments_.Clone();
      currentTaxAssessments_ = other.currentTaxAssessments_.Clone();
      anticipatedEndingTaxAssessment_ = other.anticipatedEndingTaxAssessment_.Clone();
      masterFolioStatus_ = other.masterFolioStatus_;
      nativeCharges_ = other.nativeCharges_.Clone();
      exportedToOtherFolioCharges_ = other.exportedToOtherFolioCharges_.Clone();
      importedFromOtherFolioCharges_ = other.importedFromOtherFolioCharges_.Clone();
      CurrentNetCharges = other.currentNetCharges_ != null ? other.CurrentNetCharges.Clone() : null;
      AnticipatedNetCharges = other.anticipatedNetCharges_ != null ? other.AnticipatedNetCharges.Clone() : null;
      PostedPayments = other.postedPayments_ != null ? other.PostedPayments.Clone() : null;
      PostedRefunds = other.postedRefunds_ != null ? other.PostedRefunds.Clone() : null;
      UnusedPaymentAuthorizations = other.unusedPaymentAuthorizations_ != null ? other.UnusedPaymentAuthorizations.Clone() : null;
      UnusedGuaranteeAuthorizations = other.unusedGuaranteeAuthorizations_ != null ? other.UnusedGuaranteeAuthorizations.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FolioStatev2 Clone() {
      return new FolioStatev2(this);
    }

    /// <summary>Field number for the "effective_charges" field.</summary>
    public const int EffectiveChargesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> _repeated_effectiveCharges_codec
        = pb::FieldCodec.ForMessage(10, global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> effectiveCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> EffectiveCharges {
      get { return effectiveCharges_; }
    }

    /// <summary>Field number for the "adjustments" field.</summary>
    public const int AdjustmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioAdjustment> _repeated_adjustments_codec
        = pb::FieldCodec.ForMessage(18, global::HOLMS.Types.Folio.FSv2.FolioAdjustment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAdjustment> adjustments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAdjustment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAdjustment> Adjustments {
      get { return adjustments_; }
    }

    /// <summary>Field number for the "card_refunds" field.</summary>
    public const int CardRefundsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioCardRefund> _repeated_cardRefunds_codec
        = pb::FieldCodec.ForMessage(26, global::HOLMS.Types.Folio.FSv2.FolioCardRefund.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCardRefund> cardRefunds_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCardRefund>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCardRefund> CardRefunds {
      get { return cardRefunds_; }
    }

    /// <summary>Field number for the "card_sales" field.</summary>
    public const int CardSalesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioCardSale> _repeated_cardSales_codec
        = pb::FieldCodec.ForMessage(34, global::HOLMS.Types.Folio.FSv2.FolioCardSale.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCardSale> cardSales_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCardSale>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCardSale> CardSales {
      get { return cardSales_; }
    }

    /// <summary>Field number for the "check_cash_payments" field.</summary>
    public const int CheckCashPaymentsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioCheckCashPayment> _repeated_checkCashPayments_codec
        = pb::FieldCodec.ForMessage(42, global::HOLMS.Types.Folio.FSv2.FolioCheckCashPayment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCheckCashPayment> checkCashPayments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCheckCashPayment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioCheckCashPayment> CheckCashPayments {
      get { return checkCashPayments_; }
    }

    /// <summary>Field number for the "current_tax_assessments" field.</summary>
    public const int CurrentTaxAssessmentsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment> _repeated_currentTaxAssessments_codec
        = pb::FieldCodec.ForMessage(50, global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment> currentTaxAssessments_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment> CurrentTaxAssessments {
      get { return currentTaxAssessments_; }
    }

    /// <summary>Field number for the "anticipated_ending_tax_assessment" field.</summary>
    public const int AnticipatedEndingTaxAssessmentFieldNumber = 7;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment> _repeated_anticipatedEndingTaxAssessment_codec
        = pb::FieldCodec.ForMessage(58, global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment> anticipatedEndingTaxAssessment_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioTaxAssessment> AnticipatedEndingTaxAssessment {
      get { return anticipatedEndingTaxAssessment_; }
    }

    /// <summary>Field number for the "master_folio_status" field.</summary>
    public const int MasterFolioStatusFieldNumber = 8;
    private global::HOLMS.Types.Folio.FSv2.MasterFolioStatus masterFolioStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Folio.FSv2.MasterFolioStatus MasterFolioStatus {
      get { return masterFolioStatus_; }
      set {
        masterFolioStatus_ = value;
      }
    }

    /// <summary>Field number for the "native_charges" field.</summary>
    public const int NativeChargesFieldNumber = 9;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> _repeated_nativeCharges_codec
        = pb::FieldCodec.ForMessage(74, global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> nativeCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> NativeCharges {
      get { return nativeCharges_; }
    }

    /// <summary>Field number for the "exported_to_other_folio_charges" field.</summary>
    public const int ExportedToOtherFolioChargesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> _repeated_exportedToOtherFolioCharges_codec
        = pb::FieldCodec.ForMessage(82, global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> exportedToOtherFolioCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> ExportedToOtherFolioCharges {
      get { return exportedToOtherFolioCharges_; }
    }

    /// <summary>Field number for the "imported_from_other_folio_charges" field.</summary>
    public const int ImportedFromOtherFolioChargesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> _repeated_importedFromOtherFolioCharges_codec
        = pb::FieldCodec.ForMessage(90, global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge.Parser);
    private readonly pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> importedFromOtherFolioCharges_ = new pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::HOLMS.Types.Folio.FSv2.FolioAtomicCharge> ImportedFromOtherFolioCharges {
      get { return importedFromOtherFolioCharges_; }
    }

    /// <summary>Field number for the "current_net_charges" field.</summary>
    public const int CurrentNetChargesFieldNumber = 12;
    private global::HOLMS.Types.Primitive.MonetaryAmount currentNetCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount CurrentNetCharges {
      get { return currentNetCharges_; }
      set {
        currentNetCharges_ = value;
      }
    }

    /// <summary>Field number for the "anticipated_net_charges" field.</summary>
    public const int AnticipatedNetChargesFieldNumber = 13;
    private global::HOLMS.Types.Primitive.MonetaryAmount anticipatedNetCharges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount AnticipatedNetCharges {
      get { return anticipatedNetCharges_; }
      set {
        anticipatedNetCharges_ = value;
      }
    }

    /// <summary>Field number for the "posted_payments" field.</summary>
    public const int PostedPaymentsFieldNumber = 14;
    private global::HOLMS.Types.Primitive.MonetaryAmount postedPayments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PostedPayments {
      get { return postedPayments_; }
      set {
        postedPayments_ = value;
      }
    }

    /// <summary>Field number for the "posted_refunds" field.</summary>
    public const int PostedRefundsFieldNumber = 15;
    private global::HOLMS.Types.Primitive.MonetaryAmount postedRefunds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount PostedRefunds {
      get { return postedRefunds_; }
      set {
        postedRefunds_ = value;
      }
    }

    /// <summary>Field number for the "unused_payment_authorizations" field.</summary>
    public const int UnusedPaymentAuthorizationsFieldNumber = 16;
    private global::HOLMS.Types.Primitive.MonetaryAmount unusedPaymentAuthorizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount UnusedPaymentAuthorizations {
      get { return unusedPaymentAuthorizations_; }
      set {
        unusedPaymentAuthorizations_ = value;
      }
    }

    /// <summary>Field number for the "unused_guarantee_authorizations" field.</summary>
    public const int UnusedGuaranteeAuthorizationsFieldNumber = 17;
    private global::HOLMS.Types.Primitive.MonetaryAmount unusedGuaranteeAuthorizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HOLMS.Types.Primitive.MonetaryAmount UnusedGuaranteeAuthorizations {
      get { return unusedGuaranteeAuthorizations_; }
      set {
        unusedGuaranteeAuthorizations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FolioStatev2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FolioStatev2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!effectiveCharges_.Equals(other.effectiveCharges_)) return false;
      if(!adjustments_.Equals(other.adjustments_)) return false;
      if(!cardRefunds_.Equals(other.cardRefunds_)) return false;
      if(!cardSales_.Equals(other.cardSales_)) return false;
      if(!checkCashPayments_.Equals(other.checkCashPayments_)) return false;
      if(!currentTaxAssessments_.Equals(other.currentTaxAssessments_)) return false;
      if(!anticipatedEndingTaxAssessment_.Equals(other.anticipatedEndingTaxAssessment_)) return false;
      if (MasterFolioStatus != other.MasterFolioStatus) return false;
      if(!nativeCharges_.Equals(other.nativeCharges_)) return false;
      if(!exportedToOtherFolioCharges_.Equals(other.exportedToOtherFolioCharges_)) return false;
      if(!importedFromOtherFolioCharges_.Equals(other.importedFromOtherFolioCharges_)) return false;
      if (!object.Equals(CurrentNetCharges, other.CurrentNetCharges)) return false;
      if (!object.Equals(AnticipatedNetCharges, other.AnticipatedNetCharges)) return false;
      if (!object.Equals(PostedPayments, other.PostedPayments)) return false;
      if (!object.Equals(PostedRefunds, other.PostedRefunds)) return false;
      if (!object.Equals(UnusedPaymentAuthorizations, other.UnusedPaymentAuthorizations)) return false;
      if (!object.Equals(UnusedGuaranteeAuthorizations, other.UnusedGuaranteeAuthorizations)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= effectiveCharges_.GetHashCode();
      hash ^= adjustments_.GetHashCode();
      hash ^= cardRefunds_.GetHashCode();
      hash ^= cardSales_.GetHashCode();
      hash ^= checkCashPayments_.GetHashCode();
      hash ^= currentTaxAssessments_.GetHashCode();
      hash ^= anticipatedEndingTaxAssessment_.GetHashCode();
      if (MasterFolioStatus != 0) hash ^= MasterFolioStatus.GetHashCode();
      hash ^= nativeCharges_.GetHashCode();
      hash ^= exportedToOtherFolioCharges_.GetHashCode();
      hash ^= importedFromOtherFolioCharges_.GetHashCode();
      if (currentNetCharges_ != null) hash ^= CurrentNetCharges.GetHashCode();
      if (anticipatedNetCharges_ != null) hash ^= AnticipatedNetCharges.GetHashCode();
      if (postedPayments_ != null) hash ^= PostedPayments.GetHashCode();
      if (postedRefunds_ != null) hash ^= PostedRefunds.GetHashCode();
      if (unusedPaymentAuthorizations_ != null) hash ^= UnusedPaymentAuthorizations.GetHashCode();
      if (unusedGuaranteeAuthorizations_ != null) hash ^= UnusedGuaranteeAuthorizations.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      effectiveCharges_.WriteTo(output, _repeated_effectiveCharges_codec);
      adjustments_.WriteTo(output, _repeated_adjustments_codec);
      cardRefunds_.WriteTo(output, _repeated_cardRefunds_codec);
      cardSales_.WriteTo(output, _repeated_cardSales_codec);
      checkCashPayments_.WriteTo(output, _repeated_checkCashPayments_codec);
      currentTaxAssessments_.WriteTo(output, _repeated_currentTaxAssessments_codec);
      anticipatedEndingTaxAssessment_.WriteTo(output, _repeated_anticipatedEndingTaxAssessment_codec);
      if (MasterFolioStatus != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) MasterFolioStatus);
      }
      nativeCharges_.WriteTo(output, _repeated_nativeCharges_codec);
      exportedToOtherFolioCharges_.WriteTo(output, _repeated_exportedToOtherFolioCharges_codec);
      importedFromOtherFolioCharges_.WriteTo(output, _repeated_importedFromOtherFolioCharges_codec);
      if (currentNetCharges_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CurrentNetCharges);
      }
      if (anticipatedNetCharges_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(AnticipatedNetCharges);
      }
      if (postedPayments_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PostedPayments);
      }
      if (postedRefunds_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(PostedRefunds);
      }
      if (unusedPaymentAuthorizations_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(UnusedPaymentAuthorizations);
      }
      if (unusedGuaranteeAuthorizations_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(UnusedGuaranteeAuthorizations);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += effectiveCharges_.CalculateSize(_repeated_effectiveCharges_codec);
      size += adjustments_.CalculateSize(_repeated_adjustments_codec);
      size += cardRefunds_.CalculateSize(_repeated_cardRefunds_codec);
      size += cardSales_.CalculateSize(_repeated_cardSales_codec);
      size += checkCashPayments_.CalculateSize(_repeated_checkCashPayments_codec);
      size += currentTaxAssessments_.CalculateSize(_repeated_currentTaxAssessments_codec);
      size += anticipatedEndingTaxAssessment_.CalculateSize(_repeated_anticipatedEndingTaxAssessment_codec);
      if (MasterFolioStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MasterFolioStatus);
      }
      size += nativeCharges_.CalculateSize(_repeated_nativeCharges_codec);
      size += exportedToOtherFolioCharges_.CalculateSize(_repeated_exportedToOtherFolioCharges_codec);
      size += importedFromOtherFolioCharges_.CalculateSize(_repeated_importedFromOtherFolioCharges_codec);
      if (currentNetCharges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentNetCharges);
      }
      if (anticipatedNetCharges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnticipatedNetCharges);
      }
      if (postedPayments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedPayments);
      }
      if (postedRefunds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostedRefunds);
      }
      if (unusedPaymentAuthorizations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnusedPaymentAuthorizations);
      }
      if (unusedGuaranteeAuthorizations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnusedGuaranteeAuthorizations);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FolioStatev2 other) {
      if (other == null) {
        return;
      }
      effectiveCharges_.Add(other.effectiveCharges_);
      adjustments_.Add(other.adjustments_);
      cardRefunds_.Add(other.cardRefunds_);
      cardSales_.Add(other.cardSales_);
      checkCashPayments_.Add(other.checkCashPayments_);
      currentTaxAssessments_.Add(other.currentTaxAssessments_);
      anticipatedEndingTaxAssessment_.Add(other.anticipatedEndingTaxAssessment_);
      if (other.MasterFolioStatus != 0) {
        MasterFolioStatus = other.MasterFolioStatus;
      }
      nativeCharges_.Add(other.nativeCharges_);
      exportedToOtherFolioCharges_.Add(other.exportedToOtherFolioCharges_);
      importedFromOtherFolioCharges_.Add(other.importedFromOtherFolioCharges_);
      if (other.currentNetCharges_ != null) {
        if (currentNetCharges_ == null) {
          currentNetCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        CurrentNetCharges.MergeFrom(other.CurrentNetCharges);
      }
      if (other.anticipatedNetCharges_ != null) {
        if (anticipatedNetCharges_ == null) {
          anticipatedNetCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        AnticipatedNetCharges.MergeFrom(other.AnticipatedNetCharges);
      }
      if (other.postedPayments_ != null) {
        if (postedPayments_ == null) {
          postedPayments_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PostedPayments.MergeFrom(other.PostedPayments);
      }
      if (other.postedRefunds_ != null) {
        if (postedRefunds_ == null) {
          postedRefunds_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        PostedRefunds.MergeFrom(other.PostedRefunds);
      }
      if (other.unusedPaymentAuthorizations_ != null) {
        if (unusedPaymentAuthorizations_ == null) {
          unusedPaymentAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        UnusedPaymentAuthorizations.MergeFrom(other.UnusedPaymentAuthorizations);
      }
      if (other.unusedGuaranteeAuthorizations_ != null) {
        if (unusedGuaranteeAuthorizations_ == null) {
          unusedGuaranteeAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
        }
        UnusedGuaranteeAuthorizations.MergeFrom(other.UnusedGuaranteeAuthorizations);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            effectiveCharges_.AddEntriesFrom(input, _repeated_effectiveCharges_codec);
            break;
          }
          case 18: {
            adjustments_.AddEntriesFrom(input, _repeated_adjustments_codec);
            break;
          }
          case 26: {
            cardRefunds_.AddEntriesFrom(input, _repeated_cardRefunds_codec);
            break;
          }
          case 34: {
            cardSales_.AddEntriesFrom(input, _repeated_cardSales_codec);
            break;
          }
          case 42: {
            checkCashPayments_.AddEntriesFrom(input, _repeated_checkCashPayments_codec);
            break;
          }
          case 50: {
            currentTaxAssessments_.AddEntriesFrom(input, _repeated_currentTaxAssessments_codec);
            break;
          }
          case 58: {
            anticipatedEndingTaxAssessment_.AddEntriesFrom(input, _repeated_anticipatedEndingTaxAssessment_codec);
            break;
          }
          case 64: {
            masterFolioStatus_ = (global::HOLMS.Types.Folio.FSv2.MasterFolioStatus) input.ReadEnum();
            break;
          }
          case 74: {
            nativeCharges_.AddEntriesFrom(input, _repeated_nativeCharges_codec);
            break;
          }
          case 82: {
            exportedToOtherFolioCharges_.AddEntriesFrom(input, _repeated_exportedToOtherFolioCharges_codec);
            break;
          }
          case 90: {
            importedFromOtherFolioCharges_.AddEntriesFrom(input, _repeated_importedFromOtherFolioCharges_codec);
            break;
          }
          case 98: {
            if (currentNetCharges_ == null) {
              currentNetCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(currentNetCharges_);
            break;
          }
          case 106: {
            if (anticipatedNetCharges_ == null) {
              anticipatedNetCharges_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(anticipatedNetCharges_);
            break;
          }
          case 114: {
            if (postedPayments_ == null) {
              postedPayments_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(postedPayments_);
            break;
          }
          case 122: {
            if (postedRefunds_ == null) {
              postedRefunds_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(postedRefunds_);
            break;
          }
          case 130: {
            if (unusedPaymentAuthorizations_ == null) {
              unusedPaymentAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(unusedPaymentAuthorizations_);
            break;
          }
          case 138: {
            if (unusedGuaranteeAuthorizations_ == null) {
              unusedGuaranteeAuthorizations_ = new global::HOLMS.Types.Primitive.MonetaryAmount();
            }
            input.ReadMessage(unusedGuaranteeAuthorizations_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
